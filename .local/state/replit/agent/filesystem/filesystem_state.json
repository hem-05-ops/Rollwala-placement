{"file_contents":{"ADMIN_SETUP.md":{"content":"# 🎓 Admin Authentication Setup Guide\n\nThis guide will help you set up the admin authentication system for the Placement Management System.\n\n## 🔧 Backend Setup\n\n### 1. Install Dependencies\n```bash\ncd PMS-CGC-U/backend\nnpm install\n```\n\n### 2. Create Environment \nCreate a `.env` file in the `backend` directory:\n```bash\nPORT=5000\nMONGODB_URI=mongodb://localhost:27017/placement\nJWT_SECRET=your_super_secret_jwt_key_here\nJWT_EXPIRES_IN=7d\n```\n\n### 3. Create Admin User\nRun the script to create the default admin user:\n```bash\nnpm run create-admin\n```\n\nThis will create an admin user with:\n- **Email**: admin@cgcu.edu\n- **Password**: admin123\n- **Role**: admin\n\n### 4. Start Backend Server\n```bash\nnpm run dev\n```\n\n## 🎨 Frontend Setup\n\n### 1. Install Dependencies\n```bash\ncd PMS-CGC-U/frontend\nnpm install\n```\n\n### 2. Start Frontend Development Server\n```bash\nnpm run dev\n```\n\n## 🔐 Admin Access\n\n### Access Admin Panel\n1. Navigate to `/admin-login` in your browser\n2. Login with the admin credentials:\n   - Email: `admin@cgcu.edu`\n   - Password: `admin123`\n\n### Admin Features\n- ✅ **Protected Routes**: Only authenticated admins can access `/admin-job-posting`\n- ✅ **Role-Based Access**: Only users with `admin` role can perform admin actions\n- ✅ **JWT Authentication**: Secure token-based authentication\n- ✅ **Auto Logout**: Automatic logout on token expiration\n- ✅ **Secure Headers**: All admin API calls include JWT tokens\n\n### Admin Panel Capabilities\n- 📝 Create new job postings\n- ✏️ Edit existing job postings\n- 🗑️ Delete job postings\n- 📊 View all job postings in a table format\n- 🔒 Secure access with admin authentication\n\n## 🛡️ Security Features\n\n### Backend Security\n- **JWT Verification**: All admin routes verify JWT tokens\n- **Role-Based Access Control**: Admin-only routes protected\n- **Password Hashing**: Passwords hashed with bcrypt\n- **Input Validation**: Zod schema validation for all inputs\n- **CORS Protection**: Configured for specific origins\n\n### Frontend Security\n- **Route Protection**: ProtectedRoute component guards admin routes\n- **Token Storage**: JWT tokens stored securely in localStorage\n- **Auto Redirect**: Unauthorized users redirected to login\n- **Session Management**: Automatic logout on token expiration\n\n## 🔄 API Endpoints\n\n### Public Endpoints\n- `GET /api/jobs` - Get all job postings (public)\n\n### Protected Endpoints (Admin Only)\n- `POST /api/jobs` - Create new job posting\n- `PUT /api/jobs/:id` - Update job posting\n- `DELETE /api/jobs/:id` - Delete job posting\n- `GET /api/auth/me` - Get current user info\n\n### Authentication Endpoints\n- `POST /api/auth/signup` - Register new user\n- `POST /api/auth/signin` - Login user\n\n## 🚀 Usage Flow\n\n1. **Admin Login**: Visit `/admin-login` and authenticate\n2. **Access Panel**: Automatically redirected to `/admin-job-posting`\n3. **Manage Jobs**: Create, edit, or delete job postings\n4. **Logout**: Click logout button to end session\n\n## 🔧 Customization\n\n### Create Additional Admin Users\nYou can create additional admin users by:\n1. Using the regular signup endpoint with admin role\n2. Manually adding users to the database with `role: 'admin'`\n\n### Change Default Admin Credentials\n1. Delete the existing admin user from the database\n2. Run `npm run create-admin` again with modified credentials in the script\n\n### Modify JWT Settings\nUpdate the JWT configuration in your `.env` file:\n```bash\nJWT_SECRET=your_new_secret_key\nJWT_EXPIRES_IN=30d  # Change token expiration\n```\n\n## 🐛 Troubleshooting\n\n### Common Issues\n1. **MongoDB Connection Error**: Ensure MongoDB is running\n2. **JWT Token Expired**: Re-login to get a new token\n3. **CORS Errors**: Check CORS configuration in server.js\n4. **Admin Access Denied**: Verify user has `admin` role\n\n### Debug Mode\nEnable debug logging by adding to your `.env`:\n```bash\nDEBUG=true\n```\n\n## 📝 Notes\n\n- The admin panel is now fully protected and requires authentication\n- All job management operations require admin privileges\n- Students can still view jobs through the public `/jobs` endpoint\n- JWT tokens expire after 7 days by default\n- Admin sessions are maintained in localStorage\n\nFor additional security, consider:\n- Implementing rate limiting\n- Adding two-factor authentication\n- Using HTTPS in production\n- Regular password rotation policies\n\n","size_bytes":4337},"Code of Conduct.md":{"content":"🤝 Contributor Covenant Code of Conduct — PMS-CGC-U (GSSoC 2025)\n🌟 Our Commitment\nAs maintainers, contributors, and community members of Placement Management System (PMS-CGC-U) under GirlScript Summer of Code 2025, we commit to fostering an environment where everyone feels welcome, respected, and valued — regardless of age, body size, disability (visible or invisible), ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual orientation.\n\nWe aim to interact in ways that promote openness, diversity, inclusivity, and a healthy community spirit.\n\n✅ Our Standards\nExamples of positive behavior:\n\n💬 Showing empathy, kindness, and respect in all interactions\n\n💡 Being open to different perspectives and experiences\n\n🛠️ Offering and accepting constructive feedback gracefully\n\n🌱 Owning up to mistakes, apologizing, and learning from them\n\n🎯 Prioritizing the project’s and community’s best interests\n\nExamples of unacceptable behavior:\n\n🚫 Sexualized language, imagery, or unwelcome advances\n\n🛑 Trolling, insulting remarks, or personal/political attacks\n\n⚠️ Harassment (public or private) of any kind\n\n🔒 Sharing private information without consent\n\n❌ Any other behavior that could be considered inappropriate in a professional or collaborative setting\n\n👨‍⚖️ Enforcement Responsibilities\nProject admins and moderators are responsible for upholding this Code of Conduct. They may:\n\nRemove, edit, or reject contributions that violate the guidelines\n\nIssue warnings, temporary bans, or permanent bans based on severity\n\nExplain moderation decisions where appropriate\n\n🌐 Scope\nThis Code of Conduct applies to:\n\nAll project-related spaces (GitHub, Discord, email, etc.)\n\nPublic or private interactions where a person is representing PMS-CGC-U or GSSoC\n\n🛡️ Reporting Issues\nIf you witness or experience any violation, please report it confidentially:\n📧 jadaunmohit0@gmail.com or gssoc@girlscript.tech\n\nAll reports will be reviewed promptly, fairly, and confidentially. We are committed to protecting the privacy and safety of reporters.\n\n📖 Enforcement Guidelines\n1. Correction\nImpact: Minor inappropriate behavior\nConsequence: Private discussion or gentle reminder; public apology if necessary\n\n2. Warning\nImpact: Clear violation or repeated minor offenses\nConsequence: Official warning; avoid contact with affected parties for a set period\n\n3. Temporary Ban\nImpact: Sustained or serious inappropriate behavior\nConsequence: Ban from all participation for a specific time\n\n4. Permanent Ban\nImpact: Egregious behavior or repeated severe violations\nConsequence: Permanent removal from all community spaces\n\n📜 Attribution\nAdapted from the Contributor Covenant v2.0 with inspiration from Mozilla’s enforcement ladder.\n\n💬 Final Note\nBy participating in this project, you agree to uphold these values and help us maintain a welcoming and collaborative space for everyone. Let’s make PMS-CGC-U a project where contributors grow, learn, and succeed together 🚀\n","size_bytes":3125},"Contribute.md":{"content":"\n# 🤝 Contributing to PMS-CGC-U\n\nFirst off, thank you for taking the time to contribute! 🎉  \nThis project is part of **GSSoC 2025** and is open to anyone who wants to help make campus placements easier, smarter, and fully digital 🚀.\n\n---\n\n## 📌 How to Contribute\n\n### 1. Fork & Clone\n```bash\ngit fork https://github.com/Mohitjadaun2026/PMS-CGC-U.git\ncd PMS-CGC-U\n````\n\n### 2. Create a New Branch\n\n```bash\ngit checkout -b feature/your-feature-name\n```\n\n### 3. Make Your Changes\n\n* Follow the project structure:\n\n  ```\n  /frontend  → React + Tailwind (UI)\n  /backend   → Node.js + Express + MongoDB (API)\n  ```\n* Ensure your code is **readable, documented, and lint-free**.\n\n### 4. Commit with a Meaningful Message\n\n```bash\ngit commit -m \"Added student profile edit page\"\n```\n\n### 5. Push & Create Pull Request\n\n```bash\ngit push origin feature/your-feature-name\n```\n\n* Go to GitHub and click **New Pull Request**.\n\n---\n\n## 🛠 Areas You Can Contribute\n\n* 💻 **Frontend (React + Tailwind)** → Student/Admin Dashboards, Forms, UI Polish\n* 🔐 **Authentication** → JWT/Auth0/Firebase\n* 📬 **Email Notifications** → Nodemailer Integration\n* 🧠 **Eligibility Filters** → Auto-check based on job criteria\n* 📝 **Resume Uploads** → Multer/GridFS\n* 🧪 **Testing** → Unit tests, API tests\n* 📚 **Documentation** → Guides, API Docs\n\n---\n\n## 📜 Contribution Guidelines\n\n1. **Follow the Code of Conduct** → [Code of Conduct](./Code%20of%20Conduct.md)\n2. **Write Clean Code** → Use proper naming, comments, and indentation.\n3. **Pull Before Push** → Always sync your fork before committing.\n4. **No Direct Commits to `main`** → Always work on a new branch.\n5. **Test Before PR** → Ensure the app runs without breaking existing features.\n\n---\n\n## 🧪 Setting Up Locally\n\n### Backend\n\n```bash\ncd backend\nnpm install\nnpm start\n```\n\nRuns at: `http://localhost:5000`\n\n### Frontend\n\n```bash\ncd frontend\nnpm install\nnpm run dev\n```\n\nRuns at: `http://localhost:5173`\n\n⚠️ Make sure both servers are running for full functionality.\n\n---\n\n## 🌟 Why Contribute?\n\n✅ Real-world MERN stack experience\n✅ Add to your GitHub portfolio\n✅ Help students & colleges go fully digital\n✅ Learn teamwork & Git collaboration\n\n---\n\n## 📩 Contact\n\n* **Maintainer:** [Mohit Jadaun](https://linkedin.com/in/mohit-jadaun/)\n* **Email:** [jadaunmohit0@gmail.com](mailto:jadaunmohit0@gmail.com)\n* **GitHub Issues:** [Report a Bug or Suggest a Feature](../../issues)\n\n⭐ **Star the repo if you like this project!**\nLet’s build something amazing for students & colleges together 🚀\n\n\n","size_bytes":2608},"Contributors data.md":{"content":"# 🚫 DO NOT CONTRIBUTE TO THIS FILE\n\n## 🏆 **Contributor Points Table**\n\nThis document records **all contributions** to the project and assigns points based on the **difficulty, complexity, and impact** of the contribution.\n\n| 🏅 Contribution Level | 🎯 Points Awarded |\n| -------------------- | ----------------- |\n| **Level 1**          | 3 Points          |\n| **Level 2**          | 7 Points          |\n| **Level 3**          | 10 Points         |\n\n> 📌 **Note:** Points are awarded **only for merged Pull Requests (PRs)**.  \n> 🛠 **Evaluation Criteria:** Complexity, quality, and significance of the work.  \n> ✅ **Approval:** Points updated **only** by the Mentor or Project Admin (PA) at the end of the day.\n\n\n\n| #️⃣ S.No | 👤 GitHub Profile | 🎯 Points | 🔗 PR No. | 📌 Task Description                                                                 |\n| -------- | ----------------- | --------- | --------- | ------------------------------------------------------------------------------------ |\n| 1        | hemanth5055       | 3         | #19       | Enhanced contact links appearance                                                    |\n| 2        | Jai-76            | 3         | #1        | License Missing from Repository                                                      |\n| 3        | Sangeeta-20-stack | 3         | #2        | Add Dark/Light Mode Toggle for Theme Switching                                       |\n| 4        | khizar-hayath     | 3         | #26       | Added favicon, navbar logo and website title                                         |\n| 5        | khizar-hayath     | 3         | #37       | Fix title visibility and inconsistent button behaviour                               |\n| 6        | akofficial10add   | 7         | #36       | Enhance Job Posting Management UI & Fix Alignment Issues                             |\n| 7        | akofficial10add   | 3         | #42       | Enhanced Footer Component with Link Features                                         |\n| 8        | HetviThakkar-025  | 7         | #38       | Updated PMS-CGC-U Website to Maroon Primary Theme                                    |\n| 9        | Prerna799         | 3         | #49       | Updated PMS-CGC-U Website Name                                                       |\n| 10       | Salusha           | 7         | #46       | Modified PMS-CGC-U Navbar                                                            |\n| 11       | Salusha           | 7         | #61       | Modified-Admin Panel                                                                 |\n| 12       | RoshniRautela     | 3         | #65       | Applied dark mode to login page                                                      |\n| 13       | Sathish1708127    | 3         | #66, #67  | Fixed hover underline & phone icon in Contact Us                                     |\n| 14       | Shreyaraut12      | 3         | #86       | Replaced twitter icon with x                                                         |\n| 15       | SiddharthSahai10  | 10        | #70       | Add On-Campus Job Posting with Dynamic Application Forms                             |\n| 16       | Kirti276          | 10        | #78       | My admin branch                                                                      |\n| 17       | MehakGo           | 7         | #79       | feat: Add Custom JS Form Validation for Regsiter form                                |\n| 18       | MayankV004        | 7         | #80       | Redesigned Student dashboard                                                         |\n| 19       | mohdhassaan07     | 7         | #83       | fix(Signin page)- fixes the signin page UI                                           |\n| 20       | AbhishekRajput1601| 10        | #81       | added interview experience section                                                   |\n| 21       | Rashidaga18       | 3         | #89       | Missing Hover Interaction on Section Elements                                        |\n| 22       | akofficial10      | 7         | #94       | Fix: Page Scroll Position on Navigation                                              |\n| 23       | dev-prachi        | 3         | #95       | Add contact button enhancement                                                       |\n| 24       | Varma-2005        | 7         | #98       | Fixed navigation bar and improved authentication (restricted access + email checks)  |\n| 25       | akofficial10      | 10        | #100      | Implement Full Newsletter Functionality with Subscription, Confirmation Email, and Frontend Integration. |\n| 26       | SainiAdi-04       | 3         | #103      | Fix Infinite Loading & Deloitte Logo Placeholder                                     |\n| 27       | Anvesha-24        | 3         | #108      | color mismatch in bg cards                                                           |\n| 28       | Umisalma848       | 10        | #110      | Improve student dashboard detailed tracking                                          |\n| 29       | vanshika147       | 3         | #115      | Added working social links in footer                                                 |\n| 30       | rahul12075        | 3         | #116      | Added navigation links to \"Register Now\" and \"Contact Us\" buttons on homepage CTA section                |\n| 31       | akofficial10      | 10        | #118      | Add contact form with validation and toast notifications                             |\n| 32       | Soumyosish        | 7         | #119      | pr create automate message added                                                     |\n| 33       | Soumyosish        | 3         | #120      | issue create automate message added                                                  |\n| 34       | arundhativaishnav | 7         | #54       | Added Toastify feature instead of using windows alerts                               |\n\n\n\n","size_bytes":5968},"ON_CAMPUS_JOBS_README.md":{"content":"# On-Campus Job Posting System\n\nThis document describes the implementation of the on-campus job posting functionality that has been added to the existing PMS (Placement Management System) platform.\n\n## Overview\n\nThe system now supports two types of job postings:\n1. **Off-Campus Jobs**: Traditional jobs with external application links\n2. **On-Campus Jobs**: Jobs with dynamic application forms built by admins\n\n## New Features\n\n### 1. Job Type Classification\n- **Campus Type**: Each job now has a `campusType` field (`on-campus` or `off-campus`)\n- **Application Method**: \n  - Off-campus jobs use external application links\n  - On-campus jobs use custom-built application forms\n\n### 2. Dynamic Form Builder\nAdmins can create custom application forms for on-campus jobs with:\n- **Field Types**: text, email, phone, textarea, select, checkbox, file\n- **Field Properties**: label, required/optional, placeholder, validation\n- **Options**: For select and checkbox fields\n- **File Uploads**: Support for resume, portfolio, and other documents\n\n### 3. Application Management\n- **Application Tracking**: Store and manage all job applications\n- **Status Management**: Track applications through stages (pending, shortlisted, interviewed, selected, rejected)\n- **Admin Notes**: Add internal notes and comments\n- **Statistics**: View application counts and status breakdowns\n\n## Database Schema Changes\n\n### Job Model Updates\n```javascript\n// New fields added to Job schema\ncampusType: {\n  type: String,\n  enum: ['on-campus', 'off-campus'],\n  default: 'off-campus'\n},\napplicationFormFields: [{\n  fieldName: String,\n  fieldLabel: String,\n  fieldType: String,\n  required: Boolean,\n  options: [String],\n  placeholder: String,\n  validation: String\n}],\napplicationLink: String, // For off-campus jobs\ncreatedAt: Date,\nupdatedAt: Date\n```\n\n### New Application Model\n```javascript\nconst applicationSchema = new mongoose.Schema({\n  jobId: ObjectId,\n  applicantName: String,\n  applicantEmail: String,\n  applicantPhone: String,\n  applicantCourse: String,\n  applicantYear: String,\n  applicantBranch: String,\n  formResponses: [{\n    fieldName: String,\n    fieldLabel: String,\n    fieldType: String,\n    response: Mixed,\n    filePath: String\n  }],\n  status: String,\n  adminNotes: String,\n  appliedAt: Date,\n  updatedAt: Date\n});\n```\n\n## API Endpoints\n\n### Job Management\n- `GET /api/jobs` - Get all jobs (existing)\n- `POST /api/jobs` - Create job (updated for on-campus support)\n- `PUT /api/jobs/:id` - Update job (updated for on-campus support)\n- `DELETE /api/jobs/:id` - Delete job (existing)\n\n### Application Management\n- `POST /api/applications/submit` - Submit job application\n- `GET /api/applications/all` - Get all applications (admin only)\n- `GET /api/applications/job/:jobId` - Get applications for specific job (admin only)\n- `PUT /api/applications/:id/status` - Update application status (admin only)\n- `GET /api/applications/stats` - Get application statistics (admin only)\n\n## Frontend Components\n\n### 1. AdminJobPosting.jsx\nEnhanced job posting form with:\n- Campus type selection\n- Dynamic form builder for on-campus jobs\n- External link input for off-campus jobs\n- Form validation and field management\n\n### 2. ApplicationManagement.jsx\nNew component for admins to:\n- View all applications\n- Filter by job\n- Update application status\n- Add admin notes\n- View statistics\n\n### 3. Jobs.jsx\nUpdated jobs page with:\n- Campus type badges\n- Dynamic application forms for on-campus jobs\n- External link handling for off-campus jobs\n- Application submission and validation\n\n## Usage Guide\n\n### For Admins\n\n#### Creating On-Campus Jobs\n1. Navigate to Job Management\n2. Select \"On-Campus\" as campus type\n3. Fill in basic job details\n4. Use the Form Builder to create custom application fields\n5. Add fields like:\n   - Resume upload\n   - Portfolio link\n   - Cover letter\n   - Technical skills assessment\n   - Previous experience\n6. Save the job posting\n\n#### Creating Off-Campus Jobs\n1. Navigate to Job Management\n2. Select \"Off-Campus\" as campus type\n3. Fill in basic job details\n4. Provide the external application link\n5. Save the job posting\n\n#### Managing Applications\n1. Navigate to Application Management\n2. View all applications or filter by specific job\n3. Update application status as candidates progress\n4. Add internal notes for team collaboration\n5. Monitor application statistics\n\n### For Students\n\n#### Applying to On-Campus Jobs\n1. Browse available jobs\n2. Click on an on-campus job\n3. Click \"Apply Now\"\n4. Fill out the custom application form\n5. Submit application\n\n#### Applying to Off-Campus Jobs\n1. Browse available jobs\n2. Click on an off-campus job\n3. Click \"Apply on Company Website\"\n4. Get redirected to external application page\n\n## File Structure\n\n```\nPMS-CGC-U/\n├── backend/\n│   ├── models/\n│   │   ├── Job.js (updated)\n│   │   └── Application.js (new)\n│   ├── controllers/\n│   │   ├── jobControllers.js (updated)\n│   │   └── applicationController.js (new)\n│   ├── routes/\n│   │   ├── jobRoutes.js (existing)\n│   │   └── applicationRoutes.js (new)\n│   └── server.js (updated)\n├── frontend/\n│   └── src/\n│       ├── components/\n│       │   ├── AdminJobPosting.jsx (updated)\n│       │   ├── ApplicationManagement.jsx (new)\n│       │   ├── AdminHeader.jsx (updated)\n│       │   └── jobs.jsx (updated)\n│       ├── App.jsx (updated)\n│       └── components/\n│           ├── AdminJobPosting.css (updated)\n│           ├── ApplicationManagement.css (new)\n│           └── jobs.css (updated)\n```\n\n## Security Features\n\n- **Authentication Required**: All admin endpoints require valid admin tokens\n- **Input Validation**: Form fields are validated on both frontend and backend\n- **File Upload Security**: File uploads are restricted and validated\n- **Access Control**: Application data is only accessible to authenticated admins\n\n## Error Handling\n\n- **Form Validation**: Comprehensive validation for all form fields\n- **API Error Handling**: Proper HTTP status codes and error messages\n- **User Feedback**: Clear success/error messages for all operations\n- **Graceful Degradation**: System continues to work even if some features fail\n\n## Performance Considerations\n\n- **Database Indexing**: Proper indexes on frequently queried fields\n- **Pagination**: Support for large numbers of applications\n- **Efficient Queries**: Optimized database queries with population\n- **File Storage**: Efficient file handling for uploads\n\n## Future Enhancements\n\n1. **Email Notifications**: Send confirmation emails to applicants\n2. **Interview Scheduling**: Built-in interview management system\n3. **Resume Parsing**: Automatic extraction of candidate information\n4. **Analytics Dashboard**: Advanced reporting and insights\n5. **Bulk Operations**: Mass status updates and actions\n6. **Export Functionality**: Export applications to CSV/PDF\n7. **Integration**: Connect with external HR systems\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Form Fields Not Saving**\n   - Check if campus type is set to \"on-campus\"\n   - Verify form field validation\n   - Check browser console for errors\n\n2. **Applications Not Loading**\n   - Verify admin authentication\n   - Check API endpoint configuration\n   - Ensure database connection is active\n\n3. **File Uploads Failing**\n   - Check upload directory permissions\n   - Verify file size limits\n   - Check file type restrictions\n\n### Debug Mode\n\nEnable debug logging by setting environment variables:\n```bash\nDEBUG=true\nNODE_ENV=development\n```\n\n## Support\n\nFor technical support or questions about the on-campus job system:\n1. Check the application logs\n2. Review the database schema\n3. Test API endpoints individually\n4. Verify frontend component state\n\n## Conclusion\n\nThe on-campus job posting system provides a comprehensive solution for managing both types of job postings while maintaining the existing functionality. The dynamic form builder allows for flexible application processes, and the application management system provides full visibility into the hiring process.\n","size_bytes":8191},"README.md":{"content":"## MongoDB Atlas Setup\n\nThis project uses MongoDB Atlas for database hosting. To contribute or run locally:\n\n1. Create a free account at [MongoDB Atlas](https://www.mongodb.com/cloud/atlas/register).\n2. Create a cluster and database.\n3. Add your IP address in Atlas under Network Access.\n4. Copy your connection string and add it to `backend/.env` as `MONGODB_URI`.\n5. Use the provided `.env.example` as a template.\n6. Run `npm install` and `npm start` in the backend folder.\n\n**Note:** Each contributor must add their own IP address in Atlas to access the database.\n# 🎓 Placement Management System (PMS-CGC-U)\n\n<div align=\"center\">\n\n![PMS Logo](https://img.shields.io/badge/PMS-CGC--U-blue?style=for-the-badge&logo=graduation-cap&logoColor=white)\n\n### 🚀 **The Future of Campus Placement Management**\n\n*An open-source, college-ready placement portal to **automate and modernize campus recruitment** — powered by the **MERN stack***\n\n[![License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=for-the-badge)](LICENSE)\n[![Contributions Welcome](https://img.shields.io/badge/contributions-welcome-orange.svg?style=for-the-badge)](CONTRIBUTING.md)\n[![Status](https://img.shields.io/badge/status-In%20Development-yellow.svg?style=for-the-badge)](README.md)\n[![Tech Stack](https://img.shields.io/badge/stack-MongoDB%20%7C%20Express%20%7C%20React%20%7C%20Node-purple.svg?style=for-the-badge)](README.md)\n\n---\n\n<img src=\"https://user-images.githubusercontent.com/74038190/212284100-561aa473-3905-4a80-b561-0d28506553ee.gif\" width=\"900\">\n\n</div>\n\n## 🌟 **Vision: A Plug-and-Play Placement Portal for Every College**\n\n> **\"Transforming spreadsheet chaos into streamlined success\"**\n\nMost colleges still rely on outdated spreadsheets and manual processes for placements. We're building a revolutionary system that changes everything:\n\n<div align=\"center\">\n\n| 🚀 **What We Offer** | ⚡ **Impact** |\n|:---:|:---:|\n| **Easy Deployment** | Any college can set up in minutes |\n| **Smart Filtering** | Auto-match students with eligible jobs |\n| **Real-time Updates** | Live notifications for all stakeholders |\n| **Analytics Dashboard** | Data-driven placement insights |\n| **100% Open Source** | Community-driven development |\n\n</div>\n\n---\n\n## 🔗 **Quick Links**\n\n<div align=\"center\">\n\n[![GitHub Repo](https://img.shields.io/badge/GitHub-Repository-black?style=for-the-badge&logo=github)](https://github.com/Mohitjadaun2026/PMS-CGC-U)\n[![Frontend](https://img.shields.io/badge/Frontend-React%20App-61dafb?style=for-the-badge&logo=react)](frontend/)\n[![Backend](https://img.shields.io/badge/Backend-Node%20API-339933?style=for-the-badge&logo=node.js)](backend/)\n\n</div>\n\n---\n\n## ✨ **Key Features That Set Us Apart**\n\n<div align=\"center\">\n\n### 👨‍💼 **Admin Control Center**\n*Complete placement management at your fingertips*\n\n</div>\n\n- 🎯 **Smart Job Posting** - Create detailed job listings with company branding\n- 🔍 **Intelligent Filtering** - Auto-filter students by branch, year, and eligibility\n- 📊 **Real-time Analytics** - Track applications, success rates, and trends  \n- 📧 **Bulk Communications** - Send targeted emails via Nodemailer integration\n- 🏢 **Company Management** - Handle logos, details, and deadlines seamlessly\n\n<div align=\"center\">\n\n### 👨‍🎓 **Student Experience Portal**\n*Personalized placement journey for every student*\n\n</div>\n\n- 🎯 **Personalized Recommendations** - See only jobs you're eligible for\n- 📱 **One-Click Applications** - Apply instantly through the dashboard\n- 📈 **Application Tracking** - Monitor status of all your applications\n- 🔔 **Smart Notifications** - Get updates via email and dashboard\n- 📄 **Resume Management** - Upload, update, and manage your profile\n\n<div align=\"center\">\n\n### 🏢 **Company Integration Hub**\n*Professional interface for recruiters*\n\n</div>\n\n- 🎨 **Brand Showcase** - Professional display of job listings\n- 🎯 **Targeted Reach** - Access pre-filtered, eligible candidates\n- 📋 **Application Management** - Collect and organize student applications\n- 📞 **Direct Communication** - Connect with students seamlessly\n\n---\n\n## 🛠️ **Modern Tech Stack**\n\n<div align=\"center\">\n\n<img src=\"https://skillicons.dev/icons?i=react,nodejs,express,mongodb,tailwind,javascript\" />\n\n| **Layer** | **Technology** | **Purpose** |\n|:---:|:---:|:---:|\n| 🎨 **Frontend** | React.js + Tailwind CSS | Modern, responsive UI |\n| ⚡ **Backend** | Node.js + Express.js | Scalable REST API |\n| 🗄️ **Database** | MongoDB Atlas | Cloud-native data storage |\n| 🔐 **Authentication** | JWT / Auth0 | Secure user management |\n| 📧 **Email Service** | Nodemailer | Automated notifications |\n\n</div>\n\n---\n\n## 🚀 **Quick Start Guide**\n\n### **Prerequisites**\n- Node.js (v14 or higher)\n- MongoDB Atlas account\n- Git installed\n\n### **1️⃣ Clone the Repository**\n```bash\ngit clone https://github.com/Mohitjadaun2026/PMS-CGC-U.git\ncd PMS-CGC-U\n```\n\n### **2️⃣ Setup Backend**\n```bash\ncd backend\nnpm install\nnpm start\n```\n🌐 Backend runs at: `http://localhost:5000`\n\n### **3️⃣ Setup Frontend**\n```bash\ncd ../frontend\nnpm install\nnpm run dev\n```\n🎨 Frontend runs at: `http://localhost:5173`\n\n> 🔄 **Pro Tip:** Keep both servers running for full functionality!\n\n---\n\n## 🗺️ **Development Roadmap**\n\n<div align=\"center\">\n\n| **Feature** | **Status** | **Priority** |\n|:---|:---:|:---:|\n| ✅ Admin Job Posting System | **Complete** | 🔥 |\n| ✅ Company Listings Page | **Complete** | 🔥 |  \n| ✅ Home & Contact Pages | **Complete** | 🔥 |\n| 🚧 Student Dashboard | **In Progress** | 🔥 |\n| 🚧 Admin Analytics Panel | **In Progress** | 🔥 |\n| 📋 Authentication System | **Planned** | ⚡ |\n| 📋 Email Notifications | **Planned** | ⚡ |\n| 📋 Resume Upload/Download | **Planned** | ⚡ |\n| 📋 Advanced Filtering Logic | **Planned** | 🎯 |\n| 📋 Mobile App (React Native) | **Future** | 🚀 |\n\n</div>\n\n---\n\n## 🤝 **Join Our Mission - Contributors Wanted!**\n\n<div align=\"center\">\n\n### **🌟 Why Contribute to PMS-CGC-U?**\n\n<img src=\"https://user-images.githubusercontent.com/74038190/212284087-bbe7e430-757e-4901-90bf-4cd2ce3e1852.gif\" width=\"500\">\n\n</div>\n\nWe're actively seeking passionate developers to help us revolutionize campus placements worldwide! Here's how you can make an impact:\n\n### **💻 Technical Areas We Need Help With:**\n\n<div align=\"center\">\n\n| **Area** | **Skills Needed** | **Impact Level** |\n|:---:|:---:|:---:|\n| 🎨 **Frontend Development** | React.js, Tailwind CSS, UI/UX | 🔥 High |\n| ⚡ **Backend Development** | Node.js, Express, APIs | 🔥 High |\n| 🔐 **Authentication** | JWT, Auth0, Security | ⚡ Medium |\n| 📧 **Email Systems** | Nodemailer, Templates | ⚡ Medium |\n| 🧪 **Testing** | Jest, Testing Library | 🎯 Medium |\n| 📱 **Mobile Optimization** | Responsive Design | 🚀 Low |\n| 📚 **Documentation** | Technical Writing | 🚀 Low |\n\n</div>\n\n### **🎯 Perfect For:**\n- 🎓 **Computer Science Students** looking for real-world project experience\n- 💼 **Junior Developers** wanting to build their portfolio\n- 🚀 **Open Source Enthusiasts** passionate about education tech\n- 🏢 **Professionals** seeking meaningful side projects\n\n### **💡 What You'll Gain:**\n- ✅ **Real-world MERN stack experience**\n- ✅ **GitHub contributions** for your profile\n- ✅ **Collaborative development** skills\n- ✅ **Meaningful impact** on student lives\n- ✅ **Networking opportunities** with other developers\n- ✅ **Recognition** in our contributor hall of fame\n\n---\n\n## 🧑‍🏫 *Mentors*\n\n- [Sanjana Gurav](https://github.com/213sanjana)\n- [Poushmita](https://github.com/Poushmita)\n\n## 📞 **Connect With Us**\n\n<div align=\"center\">\n\n### **Ready to Transform Campus Placements Together?**\n\n[![Email](https://img.shields.io/badge/Email-jadaunmohit0%40gmail.com-red?style=for-the-badge&logo=gmail&logoColor=white)](mailto:jadaunmohit0@gmail.com)\n[![LinkedIn](https://img.shields.io/badge/LinkedIn-Mohit%20Jadaun-blue?style=for-the-badge&logo=linkedin)](https://linkedin.com/in/mohit-jadaun/)\n[![GitHub Issues](https://img.shields.io/badge/GitHub-Issues-black?style=for-the-badge&logo=github)](https://github.com/Mohitjadaun2026/PMS-CGC-U/issues)\n\n</div>\n\n---\n\n## 🎉 **Show Your Support**\n\n<div align=\"center\">\n\n### **Love Our Vision? Here's How to Support:**\n\n⭐ **Star this repository** if you believe in our mission!\n\n🍴 **Fork it** and start contributing today!\n\n🐛 **Report bugs** or suggest features via Issues\n\n📢 **Spread the word** to your network\n\n💬 **Join discussions** in our GitHub community\n\n---\n\n<img src=\"https://user-images.githubusercontent.com/74038190/212284115-f47cd8ff-2ffb-4b04-b5bf-4d1c14c0247f.gif\" width=\"900\">\n\n### **🚀 Together, let's bring placement digitalization to every campus worldwide!**\n\n</div>\n\n---\n\n## 📄 **License**\n\nThis project is licensed under the **MIT License** - see the [LICENSE](LICENSE) file for details.\n\n---\n\n<div align=\"center\">\n\n**⚡ Ready to revolutionize campus placements? Let's build the future together! ⚡**\n\n[![Get Started](https://img.shields.io/badge/Get%20Started-Now-success?style=for-the-badge&logo=rocket)](https://github.com/Mohitjadaun2026/PMS-CGC-U/fork)\n\n</div>\n","size_bytes":9258},"SUPER_ADMIN_SETUP.md":{"content":"# 👑 Super Admin System Setup Guide\n\nThis guide will help you set up the new hierarchical admin system with super admin functionality.\n\n## 🎯 **What's New**\n\n### **Hierarchical Admin System:**\n- **Super Admin**: Full system control, can create/manage other admins\n- **Regular Admin**: Can manage job postings only\n- **Environment-based setup**: No more hardcoded credentials\n- **Admin Management Dashboard**: Visual interface for admin management\n\n## 🔧 **Backend Setup**\n\n### 1. **Update Environment Variables**\nCreate/update your `.env` file in the `backend` directory:\n\n```bash\nPORT=5000\nMONGODB_URI=mongodb://localhost:27017/placement\nJWT_SECRET=your_super_secret_jwt_key_here\nJWT_EXPIRES_IN=7d\n\n# Super Admin Setup (REQUIRED)\nADMIN_EMAIL=your-super-admin@email.com\nADMIN_PASSWORD=your-secure-password\nADMIN_NAME=Your Name (optional)\n```\n\n### 2. **Install Dependencies**\n```bash\ncd PMS-CGC-U/backend\nnpm install\n```\n\n### 3. **Create Super Admin**\n```bash\nnpm run create-super-admin\n```\n\nThis will:\n- ✅ Check for required environment variables\n- ✅ Create the first super admin user\n- ✅ Set proper role and permissions\n- ✅ Show success message with credentials\n\n### 4. **Start Backend Server**\n```bash\nnpm run dev\n```\n\n## 🎨 **Frontend Setup**\n\n### 1. **Install Dependencies**\n```bash\ncd PMS-CGC-U/frontend\nnpm install\n```\n\n### 2. **Start Frontend Development Server**\n```bash\nnpm run dev\n```\n\n## 🔐 **Admin Access & Features**\n\n### **Super Admin Capabilities:**\n- 👑 **Full System Control**: Access to all admin features\n- 🔧 **Admin Management**: Create, edit, delete other admins\n- 📝 **Job Management**: Full CRUD operations on job postings\n- 👥 **User Management**: View and manage all admin users\n- 🔒 **Security Control**: Manage admin permissions and roles\n\n### **Regular Admin Capabilities:**\n- 📝 **Job Management**: Create, edit, delete job postings\n- 👤 **Profile Management**: Change own password\n- 📊 **Job Analytics**: View and manage job postings\n\n## 🚀 **Usage Flow**\n\n### **1. Super Admin Login**\n1. Navigate to `/admin-login`\n2. Login with super admin credentials from `.env`\n3. Access both \"Job Management\" and \"Admin Management\"\n\n### **2. Create Additional Admins**\n1. Click \"🔧 Admin Management\" in the header\n2. Click \"➕ Invite Admin\"\n3. Fill in admin details (name, email, role)\n4. System generates temporary password\n5. New admin receives credentials\n\n### **3. Admin Management Features**\n- **View All Admins**: See all admin users in the system\n- **Invite New Admins**: Create admin or super admin accounts\n- **Activate/Deactivate**: Toggle admin account status\n- **Delete Admins**: Remove admin accounts (with confirmation)\n- **Role Management**: Assign admin or super admin roles\n\n## 🔄 **API Endpoints**\n\n### **Super Admin Only Endpoints:**\n- `GET /api/admin/admins` - Get all admins\n- `POST /api/admin/invite` - Invite new admin\n- `PUT /api/admin/admins/:id` - Update admin\n- `DELETE /api/admin/admins/:id` - Delete admin\n\n### **All Admin Endpoints:**\n- `POST /api/admin/change-password` - Change password\n- `GET /api/jobs` - Get all jobs (public)\n- `POST /api/jobs` - Create job (admin only)\n- `PUT /api/jobs/:id` - Update job (admin only)\n- `DELETE /api/jobs/:id` - Delete job (admin only)\n\n## 🛡️ **Security Features**\n\n### **Enhanced Security:**\n- **Role-Based Access Control**: Super admin vs regular admin\n- **Environment Variables**: No hardcoded credentials\n- **Temporary Passwords**: Generated for new admin accounts\n- **Account Status Management**: Activate/deactivate admin accounts\n- **Self-Protection**: Super admins can't delete themselves\n- **Audit Trail**: Track admin creation and modifications\n\n### **Production Considerations:**\n- **Email Integration**: Replace console.log with email sending\n- **Password Policies**: Implement password complexity requirements\n- **Session Management**: Add session timeouts and limits\n- **IP Whitelisting**: Restrict admin access to specific IPs\n- **Activity Logging**: Log all admin actions for audit\n\n## 🔧 **Customization Options**\n\n### **Environment Variables:**\n```bash\n# Customize admin setup\nADMIN_EMAIL=your-email@domain.com\nADMIN_PASSWORD=your-secure-password\nADMIN_NAME=Your Full Name\n\n# JWT Configuration\nJWT_SECRET=your-very-long-secret-key\nJWT_EXPIRES_IN=30d\n\n# Database Configuration\nMONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/placement\n```\n\n### **Role Hierarchy:**\n- **super_admin**: Full system access\n- **admin**: Job management only\n- **user**: Regular user access (future)\n\n## 🐛 **Troubleshooting**\n\n### **Common Issues:**\n\n1. **\"Super admin already exists\"**\n   - The system detected an existing super admin\n   - Use existing credentials or update via database\n\n2. **\"Missing environment variables\"**\n   - Ensure ADMIN_EMAIL and ADMIN_PASSWORD are set in `.env`\n   - Restart the server after updating environment variables\n\n3. **\"Access denied\" errors**\n   - Verify user has correct role (admin or super_admin)\n   - Check JWT token validity\n   - Ensure proper authorization headers\n\n4. **Admin management not visible**\n   - Only super admins can see admin management\n   - Regular admins only see job management\n\n### **Debug Mode:**\nAdd to your `.env`:\n```bash\nDEBUG=true\nNODE_ENV=development\n```\n\n## 📝 **Migration from Old System**\n\n### **If you have existing admin users:**\n1. Run the super admin creation script\n2. Existing admin users will be preserved\n3. First admin created becomes super admin\n4. Update existing users via admin management dashboard\n\n### **Database Migration:**\nThe system automatically handles:\n- ✅ Role field updates\n- ✅ New admin fields\n- ✅ Backward compatibility\n- ✅ Existing user preservation\n\n## 🎉 **Success Indicators**\n\n### **System is working when:**\n- ✅ Super admin can login at `/admin-login`\n- ✅ Admin management dashboard is accessible\n- ✅ New admins can be invited successfully\n- ✅ Job management works for all admins\n- ✅ Role-based access control is enforced\n- ✅ No hardcoded credentials in code\n\n## 🔮 **Future Enhancements**\n\n### **Planned Features:**\n- 📧 **Email Integration**: Send admin invitations via email\n- 🔐 **Two-Factor Authentication**: Enhanced security\n- 📊 **Admin Analytics**: Usage statistics and reports\n- 🎯 **Permission Granularity**: Fine-grained access control\n- 📝 **Audit Logs**: Detailed activity tracking\n- 🔄 **Bulk Operations**: Mass admin management\n\n---\n\n## 🚀 **Quick Start Checklist**\n\n- [ ] Set up `.env` with admin credentials\n- [ ] Run `npm run create-super-admin`\n- [ ] Start backend server\n- [ ] Start frontend server\n- [ ] Login at `/admin-login`\n- [ ] Access admin management dashboard\n- [ ] Invite additional admins\n- [ ] Test job management functionality\n\n**🎯 You now have a production-ready hierarchical admin system!**\n\n","size_bytes":6824},"render.yaml":{"content":"services:\n\t- type: web\n\t\tname: pms-cgc-u-backend\n\t\tenv: node\n\t\tplan: free\n\t\tbuildCommand: rm -rf node_modules package-lock.json && npm install\n\t\tstartCommand: node server.js\n\t\tenvVars:\n\t\t\t- key: MONGODB_URI\n\t\t\t\tvalue: mongodb+srv://jadaunmohit0:Mohitjadaun%40123@pms-cgcu.gkrai7w.mongodb.net/placement?retryWrites=true&w=majority\n\t\tautoDeploy: true\n\t\trootDir: backend\n","size_bytes":368},"backend/server.js":{"content":"const path = require(\"path\");\nconst express = require(\"express\");\nconst dotenv = require(\"dotenv\");\nconst cors = require(\"cors\");\n\n// Load environment variables first\ndotenv.config();\n\n// Connect to database\nconst connectDB = require(\"./config/db.js\");\nconnectDB();\n\n// Routes\nconst interviewExperienceRoutes = require(\"./routes/interviewExperienceRoutes\");\nconst newsletterRoutes = require(\"./routes/newsletter\");\nconst imageRoutes = require(\"./routes/imageRoutes\");\nconst jobRoutes = require(\"./routes/jobRoutes\");\nconst authRoutes = require(\"./routes/authRoutes\");\nconst adminRoutes = require(\"./routes/adminRoutes\");\nconst adminManagementRoutes = require(\"./routes/adminManagementRoutes\");\nconst studentRoutes = require(\"./routes/studentRoutes\");\n\nconst app = express();\n\n// Enable CORS for local dev and production\nconst allowedOrigins = [\n  \"http://localhost:5000\",\n  \"http://127.0.0.1:5000\",\n  \"http://0.0.0.0:5000\",\n  \"https://replit.com\",\n  \"https://e10730a0-4104-441d-9f49-ca3437b497e7-00-1dst8xktgq1m2.sisko.replit.dev\",\n  // \"https://pms-cgc-u.vercel.app\",\n];\nconst corsOptions = {\n  origin: true, // Allow all origins in development\n  methods: \"GET,HEAD,PUT,PATCH,POST,DELETE\",\n  credentials: true,\n  allowedHeaders: [\"Content-Type\", \"Authorization\"],\n  optionsSuccessStatus: 204,\n};\napp.use(cors(corsOptions));\n\n// Middleware\napp.use(express.json());\n\n// ✅ FIXED: Serve static files from frontend assets directory\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Serve frontend assets (faculty images)\napp.use('/assets', express.static(path.join(__dirname, '../frontend/src/assets')));\n\n// Also keep uploads directory for uploaded files\napp.use('/uploads', express.static(path.join(__dirname, 'uploads')));\n\n// Root route\napp.get(\"/\", (req, res) => {\n  res.send(\"Welcome to DCS Backend 🚀\");\n});\n\n// Routes\napp.use(\"/api/interview-experiences\", interviewExperienceRoutes);\napp.use(\"/api/newsletter\", newsletterRoutes);\napp.use(\"/api/images\", imageRoutes);\napp.use(\"/api/jobs\", jobRoutes);\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/admin\", adminRoutes);\napp.use(\"/api/admin-management\", adminManagementRoutes);\napp.use(\"/api/students\", studentRoutes);\n\n// Start server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, \"localhost\", () => {\n  console.log(`🚀 Server running on localhost:${PORT}`);\n  console.log(`📁 Serving assets from: ${path.join(__dirname, '../../frontend/src/assets')}`);\n});","size_bytes":2440},"frontend/README.md":{"content":"# React + Vite\n\nThis template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.\n\nCurrently, two official plugins are available:\n\n- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh\n- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh\n\n## Expanding the ESLint configuration\n\nIf you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.\n","size_bytes":856},"frontend/eslint.config.js":{"content":"import js from '@eslint/js'\nimport globals from 'globals'\nimport reactHooks from 'eslint-plugin-react-hooks'\nimport reactRefresh from 'eslint-plugin-react-refresh'\n\nexport default [\n  { ignores: ['dist'] },\n  {\n    files: ['**/*.{js,jsx}'],\n    languageOptions: {\n      ecmaVersion: 2020,\n      globals: globals.browser,\n      parserOptions: {\n        ecmaVersion: 'latest',\n        ecmaFeatures: { jsx: true },\n        sourceType: 'module',\n      },\n    },\n    plugins: {\n      'react-hooks': reactHooks,\n      'react-refresh': reactRefresh,\n    },\n    rules: {\n      ...js.configs.recommended.rules,\n      ...reactHooks.configs.recommended.rules,\n      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],\n      'react-refresh/only-export-components': [\n        'warn',\n        { allowConstantExport: true },\n      ],\n    },\n  },\n]\n","size_bytes":844},"frontend/vite.config.js":{"content":"import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport tailwindcss from \"@tailwindcss/vite\";\n\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [react(), tailwindcss()],\n  server: {\n    host: '0.0.0.0',\n    port: 5000,\n    hmr: {\n      clientPort: 443,\n    },\n    allowedHosts: 'all',\n  },\n});\n","size_bytes":343},"backend/config/db.js":{"content":"const mongoose = require(\"mongoose\");\n\nconst connectDB = async () => {\n  try {\n    const mongoURI = process.env.MONGO_URI || process.env.MONGODB_URI || 'mongodb://localhost:27017/placement';\n    console.log(\"Mongo URI:\", mongoURI);\n    \n    // Remove the dbName option or set it to \"placement\"\n    await mongoose.connect(mongoURI, {\n      // Remove this line or change to: dbName: \"placement\",\n      retryWrites: true,\n      w: \"majority\",\n    });\n    \n    console.log(\"✅ Connected to MongoDB\");\n  } catch (err) {\n    console.error(\"❌ MongoDB connection error:\", err.message);\n    process.exit(1);\n  }\n};\n\nmodule.exports = connectDB;","size_bytes":637},"backend/controllers/adminContoller.js":{"content":"const bcrypt = require('bcrypt');\nconst { z } = require('zod');\nconst User = require('../models/User');\n\nconst inviteAdminSchema = z.object({\n  email: z.string().email().toLowerCase().trim(),\n  name: z.string().min(2).max(100),\n  role: z.enum(['admin', 'super_admin']).default('admin')\n});\n\nconst updateAdminSchema = z.object({\n  name: z.string().min(2).max(100).optional(),\n  role: z.enum(['admin', 'super_admin']).optional(),\n  isActive: z.boolean().optional()\n});\n\n// Get all admins (super admin only)\nexports.getAllAdmins = async (req, res) => {\n  try {\n    if (req.user.role !== 'super_admin') {\n      return res.status(403).json({ error: 'Super admin access required' });\n    }\n\n    const admins = await User.find({ \n      role: { $in: ['admin', 'super_admin'] } \n    }).select('-passwordHash');\n\n    res.json(admins);\n  } catch (error) {\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Invite new admin (super admin only)\nexports.inviteAdmin = async (req, res) => {\n  try {\n    if (req.user.role !== 'super_admin') {\n      return res.status(403).json({ error: 'Super admin access required' });\n    }\n\n    const payload = inviteAdminSchema.parse(req.body);\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email: payload.email });\n    if (existingUser) {\n      return res.status(409).json({ error: 'User with this email already exists' });\n    }\n\n    // Generate temporary password\n    const tempPassword = Math.random().toString(36).slice(-8) + Math.random().toString(36).toUpperCase().slice(-4) + '!1';\n    const saltRounds = 10;\n    const passwordHash = await bcrypt.hash(tempPassword, saltRounds);\n\n    // Create admin user\n    const adminUser = new User({\n      name: payload.name,\n      email: payload.email,\n      passwordHash,\n      role: payload.role,\n      isSuperAdmin: payload.role === 'super_admin',\n      createdBy: req.user.id,\n      forcePasswordChange: true\n    });\n\n    await adminUser.save();\n\n    // In production, send email with temp password\n    console.log(`New admin created: ${payload.email}, Temporary password: ${tempPassword}`);\n\n    res.status(201).json({\n      message: 'Admin invited successfully',\n      user: {\n        id: adminUser._id,\n        name: adminUser.name,\n        email: adminUser.email,\n        role: adminUser.role,\n        tempPassword // Remove this in production, send via email\n      }\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({ error: 'Validation failed', details: error.flatten() });\n    }\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Update admin (super admin only)\nexports.updateAdmin = async (req, res) => {\n  try {\n    if (req.user.role !== 'super_admin') {\n      return res.status(403).json({ error: 'Super admin access required' });\n    }\n\n    const payload = updateAdminSchema.parse(req.body);\n    const adminId = req.params.id;\n\n    // Prevent updating own role\n    if (adminId === req.user.id) {\n      return res.status(400).json({ error: 'Cannot update your own admin privileges' });\n    }\n\n    const admin = await User.findById(adminId);\n    if (!admin || !['admin', 'super_admin'].includes(admin.role)) {\n      return res.status(404).json({ error: 'Admin not found' });\n    }\n\n    // Update fields\n    if (payload.name) admin.name = payload.name;\n    if (payload.role) {\n      admin.role = payload.role;\n      admin.isSuperAdmin = payload.role === 'super_admin';\n    }\n    if (payload.isActive !== undefined) admin.isActive = payload.isActive;\n\n    await admin.save();\n\n    res.json({\n      message: 'Admin updated successfully',\n      user: {\n        id: admin._id,\n        name: admin.name,\n        email: admin.email,\n        role: admin.role,\n        isActive: admin.isActive\n      }\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({ error: 'Validation failed', details: error.flatten() });\n    }\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Delete admin (super admin only)\nexports.deleteAdmin = async (req, res) => {\n  try {\n    if (req.user.role !== 'super_admin') {\n      return res.status(403).json({ error: 'Super admin access required' });\n    }\n\n    const adminId = req.params.id;\n\n    // Prevent deleting self\n    if (adminId === req.user.id) {\n      return res.status(400).json({ error: 'Cannot delete your own account' });\n    }\n\n    const admin = await User.findById(adminId);\n    if (!admin || !['admin', 'super_admin'].includes(admin.role)) {\n      return res.status(404).json({ error: 'Admin not found' });\n    }\n\n    await User.findByIdAndDelete(adminId);\n\n    res.json({ message: 'Admin deleted successfully' });\n  } catch (error) {\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Change password (any admin)\nexports.changePassword = async (req, res) => {\n  try {\n    const { currentPassword, newPassword } = req.body;\n\n    if (!currentPassword || !newPassword) {\n      return res.status(400).json({ error: 'Current and new password required' });\n    }\n\n    if (newPassword.length < 8) {\n      return res.status(400).json({ error: 'New password must be at least 8 characters' });\n    }\n\n    const user = await User.findById(req.user.id);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    // Verify current password\n    const isMatch = await bcrypt.compare(currentPassword, user.passwordHash);\n    if (!isMatch) {\n      return res.status(401).json({ error: 'Current password is incorrect' });\n    }\n\n    // Hash new password\n    const saltRounds = 10;\n    const passwordHash = await bcrypt.hash(newPassword, saltRounds);\n\n    // Update password\n    user.passwordHash = passwordHash;\n    user.lastPasswordChange = new Date();\n    user.forcePasswordChange = false;\n    await user.save();\n\n    res.json({ message: 'Password changed successfully' });\n  } catch (error) {\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n","size_bytes":6023},"backend/controllers/applicationController.js":{"content":"const Application = require('../models/Application');\nconst Job = require('../models/Job');\n<<<<<<< HEAD\nconst User = require('../models/User');\n\n// Submit application\nexports.submitApplication = async (req, res) => {\n  try {\n    const { jobId, formResponses } = req.body;\n    const studentId = req.user._id;\n    const application = new Application({\n      job: jobId,\n      student: studentId,\n      formResponses,\n    });\n    await application.save();\n    res.status(201).json({ message: 'Application submitted successfully.' });\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n};\n\n// Get applications for a job (admin)\nexports.getApplicationsByJob = async (req, res) => {\n  try {\n    const { jobId } = req.params;\n    const applications = await Application.find({ job: jobId }).populate('student');\n    res.json(applications);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n};\n\n// Update application status (admin)\nexports.updateApplicationStatus = async (req, res) => {\n  try {\n    const { applicationId } = req.params;\n    const { status, notes } = req.body;\n    const application = await Application.findById(applicationId);\n    if (!application) return res.status(404).json({ error: 'Application not found.' });\n    application.status = status;\n    application.notes = notes || application.notes;\n    await application.save();\n    res.json({ message: 'Application status updated.' });\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n};\n\n// Get applications for a student\nexports.getApplicationsByStudent = async (req, res) => {\n  try {\n    const studentId = req.user._id;\n    const applications = await Application.find({ student: studentId }).populate('job');\n    res.json(applications);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n=======\n\n// Submit a job application\nexports.submitApplication = async (req, res) => {\n  try {\n    const { jobId, applicantData, formResponses } = req.body;\n    \n    // Check if job exists and is on-campus\n    const job = await Job.findById(jobId);\n    if (!job) {\n      return res.status(404).json({ error: 'Job not found' });\n    }\n    \n    if (job.campusType !== 'on-campus') {\n      return res.status(400).json({ error: 'This job does not accept applications through this system' });\n    }\n    \n    // Check if applicant already applied for this job\n    const existingApplication = await Application.findOne({\n      jobId,\n      applicantEmail: applicantData.applicantEmail\n    });\n    \n    if (existingApplication) {\n      return res.status(400).json({ error: 'You have already applied for this job' });\n    }\n    \n    // Create new application\n    const application = new Application({\n      jobId,\n      applicantName: applicantData.applicantName,\n      applicantEmail: applicantData.applicantEmail,\n      applicantPhone: applicantData.applicantPhone,\n      applicantCourse: applicantData.applicantCourse,\n      applicantYear: applicantData.applicantYear,\n      applicantBranch: applicantData.applicantBranch,\n      formResponses\n    });\n    \n    await application.save();\n    \n    res.status(201).json({\n      success: true,\n      message: 'Application submitted successfully',\n      application\n    });\n  } catch (err) {\n    console.error('Error submitting application:', err);\n    res.status(500).json({ error: err.message });\n  }\n};\n\n// Get all applications for a specific job (admin only)\nexports.getJobApplications = async (req, res) => {\n  try {\n    const { jobId } = req.params;\n    \n    const applications = await Application.find({ jobId })\n      .populate('jobId', 'position companyName')\n      .sort({ appliedAt: -1 });\n    \n    res.json(applications);\n  } catch (err) {\n    console.error('Error fetching applications:', err);\n    res.status(500).json({ error: err.message });\n  }\n};\n\n// Get all applications across all jobs (admin only)\nexports.getAllApplications = async (req, res) => {\n  try {\n    const applications = await Application.find()\n      .populate('jobId', 'position companyName campusType')\n      .sort({ appliedAt: -1 });\n    \n    res.json(applications);\n  } catch (err) {\n    console.error('Error fetching applications:', err);\n    res.status(500).json({ error: err.message });\n  }\n};\n\n// Update application status (admin only)\nexports.updateApplicationStatus = async (req, res) => {\n  try {\n    const { applicationId } = req.params;\n    const { status, adminNotes } = req.body;\n    \n    const application = await Application.findByIdAndUpdate(\n      applicationId,\n      { status, adminNotes },\n      { new: true }\n    ).populate('jobId', 'position companyName');\n    \n    if (!application) {\n      return res.status(404).json({ error: 'Application not found' });\n    }\n    \n    res.json(application);\n  } catch (err) {\n    console.error('Error updating application:', err);\n    res.status(500).json({ error: err.message });\n  }\n};\n\n// Get application statistics (admin only)\nexports.getApplicationStats = async (req, res) => {\n  try {\n    const stats = await Application.aggregate([\n      {\n        $group: {\n          _id: '$status',\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n    \n    const totalApplications = await Application.countDocuments();\n    \n    res.json({\n      totalApplications,\n      statusBreakdown: stats\n    });\n  } catch (err) {\n    console.error('Error fetching application stats:', err);\n    res.status(500).json({ error: err.message });\n>>>>>>> origin/job-fetching-fix\n  }\n};\n","size_bytes":5503},"backend/controllers/authController.js":{"content":"const bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\nconst { z } = require('zod');\nconst User = require('../models/User');\n\nconst registerSchema = z\n  .object({\n    name: z.string().min(2).max(100),\n    email: z.string().email().toLowerCase().trim(),\n    password: z.string().min(8).max(128),\n    confirmPassword: z.string().min(8).max(128)\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: ['confirmPassword']\n  });\n\nconst loginSchema = z.object({\n  email: z.string().email().toLowerCase().trim(),\n  password: z.string().min(8).max(128)\n});\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'dev_secret_change_me';\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '7d';\n\nexports.register = async (req, res) => {\n  try {\n    const payload = registerSchema.parse(req.body);\n\n    const existing = await User.findOne({ email: payload.email });\n    if (existing) {\n      return res.status(409).json({ error: 'Email already registered' });\n    }\n\n    const saltRounds = 10;\n    const passwordHash = await bcrypt.hash(payload.password, saltRounds);\n\n    const user = await User.create({\n      name: payload.name,\n      email: payload.email,\n      passwordHash\n    });\n\n    return res.status(201).json({\n      message: 'User registered successfully',\n      user: { id: user._id, name: user.name, email: user.email, role: user.role }\n    });\n  } catch (err) {\n    if (err instanceof z.ZodError) {\n      return res.status(400).json({ error: 'Validation failed', details: err.flatten() });\n    }\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\nexports.login = async (req, res) => {\n  try {\n    const { email, password } = loginSchema.parse(req.body);\n\n    const user = await User.findOne({ email });\n    if (!user) {\n      return res.status(401).json({ error: 'Invalid email or password' }); // Changed message\n    }\n\n    const isMatch = await bcrypt.compare(password, user.passwordHash);\n    if (!isMatch) {\nreturn res.status(401).json({ error: 'Invalid email or password' });\n    }\n\n    const token = jwt.sign({ sub: user._id, email: user.email, role: user.role }, JWT_SECRET, {\n      expiresIn: JWT_EXPIRES_IN\n    });\n\n    return res.json({\n      message: 'Login successful',\n      token,\n      user: { id: user._id, name: user.name, email: user.email, role: user.role }\n    });\n  } catch (err) {\n    if (err instanceof z.ZodError) {\n      return res.status(400).json({ error: 'Validation failed', details: err.flatten() });\n    }\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n\n","size_bytes":2615},"backend/controllers/interviewExperienceController.js":{"content":"const InterviewExperience = require('../models/InterviewExperience');\nconst Student = require('../models/Student');\n\n// Submit interview experience (Student only)\nexports.submitInterviewExperience = async (req, res) => {\n  try {\n    const { company, role, package, experience, difficulty, rounds, tips } = req.body;\n    \n    // Get student info\n    const student = await Student.findOne({ user: req.user.id }).populate('user');\n    if (!student) {\n      return res.status(404).json({ error: 'Student profile not found' });\n    }\n\n    const interviewExp = new InterviewExperience({\n      student: student._id,\n      company,\n      role,\n      package,\n      experience,\n      difficulty,\n      rounds: rounds || [],\n      tips,\n      submittedBy: student.user.name\n    });\n\n    await interviewExp.save();\n\n    res.status(201).json({\n      message: 'Interview experience submitted successfully! It will be reviewed by admin.',\n      experience: interviewExp\n    });\n  } catch (error) {\n    console.error('Submit interview experience error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Get all approved interview experiences (Public)\nexports.getAllApprovedExperiences = async (req, res) => {\n  try {\n    const experiences = await InterviewExperience.find({ approved: true })\n      .populate('student', 'course branch year')\n      .sort({ createdAt: -1 });\n\n    res.json(experiences);\n  } catch (error) {\n    console.error('Get experiences error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Get all interview experiences (Admin only)\nexports.getAllExperiences = async (req, res) => {\n  try {\n    const experiences = await InterviewExperience.find()\n      .populate('student', 'course branch year rollNo')\n      .sort({ createdAt: -1 });\n\n    res.json(experiences);\n  } catch (error) {\n    console.error('Get all experiences error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Approve/Reject interview experience (Admin only)\nexports.updateExperienceStatus = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { approved } = req.body;\n\n    const experience = await InterviewExperience.findByIdAndUpdate(\n      id,\n      { approved },\n      { new: true }\n    );\n\n    if (!experience) {\n      return res.status(404).json({ error: 'Interview experience not found' });\n    }\n\n    res.json({\n      message: `Interview experience ${approved ? 'approved' : 'rejected'} successfully`,\n      experience\n    });\n  } catch (error) {\n    console.error('Update experience status error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Delete interview experience (Admin only)\nexports.deleteExperience = async (req, res) => {\n  try {\n    const { id } = req.params;\n\n    const experience = await InterviewExperience.findByIdAndDelete(id);\n\n    if (!experience) {\n      return res.status(404).json({ error: 'Interview experience not found' });\n    }\n\n    res.json({ message: 'Interview experience deleted successfully' });\n  } catch (error) {\n    console.error('Delete experience error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Legacy function for backward compatibility\nexports.addExperience = exports.submitInterviewExperience;\nexports.getExperienceById = async (req, res) => {\n  try {\n    const exp = await InterviewExperience.findById(req.params.id)\n      .populate('student', 'course branch year rollNo');\n    if (!exp) return res.status(404).json({ error: 'Not found' });\n    res.json(exp);\n  } catch (err) {\n    res.status(500).json({ error: 'Server error' });\n  }\n};\n","size_bytes":3665},"backend/controllers/jobControllers.js":{"content":"const Job = require('../models/Job');\n\nexports.getAllJobs = async (req, res) => {\n  try {\n    console.log('Fetching all jobs...'); // Debug log\n    const jobs = await Job.find();\n    console.log(`Found ${jobs.length} jobs`); // Debug log\n    res.json(jobs);\n  } catch (err) {\n    console.error('Error fetching jobs:', err);\n    res.status(500).json({ error: 'Failed to fetch jobs', details: err.message });\n  }\n};\n\nexports.createJob = async (req, res) => {\n  try {\n    console.log('📝 Creating new job...');\n    console.log('Request body:', req.body);\n    console.log('Uploaded file:', req.file ? req.file.filename : 'No file uploaded');\n    \n    const jobData = { ...req.body };\n    \n    // Handle array fields that come as individual form fields (from FormData)\n    if (jobData['eligibleCourses[]']) {\n      jobData.eligibleCourses = Array.isArray(jobData['eligibleCourses[]']) \n        ? jobData['eligibleCourses[]'] \n        : [jobData['eligibleCourses[]']];\n      delete jobData['eligibleCourses[]'];\n    }\n    \n    if (jobData['eligibleBranches[]']) {\n      jobData.eligibleBranches = Array.isArray(jobData['eligibleBranches[]']) \n        ? jobData['eligibleBranches[]'] \n        : [jobData['eligibleBranches[]']];\n      delete jobData['eligibleBranches[]'];\n    }\n    \n    if (jobData['eligibleYears[]']) {\n      jobData.eligibleYears = Array.isArray(jobData['eligibleYears[]']) \n        ? jobData['eligibleYears[]'] \n        : [jobData['eligibleYears[]']];\n      delete jobData['eligibleYears[]'];\n    }\n    \n    // Ensure arrays exist even if empty\n    if (!jobData.eligibleCourses) jobData.eligibleCourses = [];\n    if (!jobData.eligibleBranches) jobData.eligibleBranches = [];\n    if (!jobData.eligibleYears) jobData.eligibleYears = [];\n    \n    // Handle file upload - local storage only\n    if (req.file) {\n      jobData.companyLogo = `/uploads/${req.file.filename}`;\n      console.log('✅ Logo uploaded locally:', jobData.companyLogo);\n    } else {\n      console.log('ℹ️ No logo uploaded for this job');\n    }\n    \n    console.log('Processed job data:', jobData);\n    \n    const job = new Job(jobData);\n    await job.save();\n    console.log('✅ Job created successfully:', job._id);\n    res.status(201).json(job);\n  } catch (err) {\n    console.error('❌ Error creating job:', err);\n    res.status(500).json({ error: 'Failed to create job', details: err.message });\n  }\n};\n\nexports.updateJob = async (req, res) => {\n  try {\n    console.log('Update request body:', req.body); // Debug log\n    const jobData = { ...req.body };\n    \n    // Handle array fields that come as individual form fields\n    if (jobData['eligibleCourses[]']) {\n      jobData.eligibleCourses = Array.isArray(jobData['eligibleCourses[]']) \n        ? jobData['eligibleCourses[]'] \n        : [jobData['eligibleCourses[]']];\n      delete jobData['eligibleCourses[]'];\n    }\n    \n    if (jobData['eligibleBranches[]']) {\n      jobData.eligibleBranches = Array.isArray(jobData['eligibleBranches[]']) \n        ? jobData['eligibleBranches[]'] \n        : [jobData['eligibleBranches[]']];\n      delete jobData['eligibleBranches[]'];\n    }\n    \n    if (jobData['eligibleYears[]']) {\n      jobData.eligibleYears = Array.isArray(jobData['eligibleYears[]']) \n        ? jobData['eligibleYears[]'] \n        : [jobData['eligibleYears[]']];\n      delete jobData['eligibleYears[]'];\n    }\n    \n    // Ensure arrays exist even if empty\n    if (!jobData.eligibleCourses) jobData.eligibleCourses = [];\n    if (!jobData.eligibleBranches) jobData.eligibleBranches = [];\n    if (!jobData.eligibleYears) jobData.eligibleYears = [];\n    \n    if (req.file) {\n      jobData.companyLogo = `/uploads/${req.file.filename}`;\n      console.log('✅ Logo updated locally:', jobData.companyLogo);\n    }\n    \n    console.log('Processed update data:', jobData); // Debug log\n    \n    const job = await Job.findByIdAndUpdate(req.params.id, jobData, { new: true });\n    if (!job) {\n      return res.status(404).json({ error: 'Job not found' });\n    }\n    console.log('Updated job:', job); // Debug log\n    res.json(job);\n  } catch (err) {\n    console.error('Error updating job:', err);\n    res.status(500).json({ error: 'Failed to update job', details: err.message });\n  }\n};\n\nexports.deleteJob = async (req, res) => {\n  try {\n    console.log('Deleting job:', req.params.id); // Debug log\n    const job = await Job.findByIdAndDelete(req.params.id);\n    if (!job) {\n      return res.status(404).json({ error: 'Job not found' });\n    }\n    console.log('Job deleted successfully'); // Debug log\n    res.json({ success: true, message: 'Job deleted successfully' });\n  } catch (err) {\n    console.error('Error deleting job:', err);\n    res.status(500).json({ error: 'Failed to delete job', details: err.message });\n  }\n};","size_bytes":4769},"backend/controllers/newsletterController.js":{"content":"const Newsletter = require(\"../models/Newsletter.js\");\nconst {\n  sendConfirmationEmail,\n  generateUnsubscribeToken,\n  sendBulkNewsletter,\n} = require(\"../services/emailService.js\");\n\n// ✅ Subscribe\nconst subscribe = async (req, res) => {\n  try {\n    const { email } = req.body;\n\n    if (!email) {\n      return res.status(400).json({ error: \"Email is required\" });\n    }\n\n    let subscriber = await Newsletter.findOne({ email });\n\n    if (subscriber) {\n      if (subscriber.isSubscribed) {\n        return res.status(400).json({ error: \"Email is already subscribed\" });\n      } else {\n        subscriber.isSubscribed = true;\n        subscriber.subscribedAt = new Date();\n        subscriber.unsubscribedAt = null;\n        await subscriber.save();\n      }\n    } else {\n      subscriber = new Newsletter({ email });\n      await subscriber.save();\n    }\n\n    const unsubscribeToken = generateUnsubscribeToken(email);\n    const unsubscribeLink = `${req.protocol}://${req.get(\n      \"host\"\n    )}/api/newsletter/unsubscribe?token=${unsubscribeToken}&email=${email}`;\n\n    const emailSent = await sendConfirmationEmail(email, unsubscribeLink);\n\n    if (!emailSent) {\n      return res\n        .status(500)\n        .json({ error: \"Failed to send confirmation email\" });\n    }\n\n    res.status(200).json({ message: \"Successfully subscribed to newsletter\" });\n  } catch (error) {\n    console.error(\"Subscription error:\", error);\n    res.status(500).json({ error: \"Internal server error\" });\n  }\n};\n\n// ✅ Unsubscribe\nconst unsubscribe = async (req, res) => {\n  try {\n    const { token, email } = req.query;\n\n    const expectedToken = generateUnsubscribeToken(email);\n    if (token !== expectedToken) {\n      return res.status(400).json({ error: \"Invalid unsubscribe link\" });\n    }\n\n    const subscriber = await Newsletter.findOne({ email });\n    if (!subscriber) {\n      return res.status(404).json({ error: \"Email not found\" });\n    }\n\n    subscriber.isSubscribed = false;\n    subscriber.unsubscribedAt = new Date();\n    await subscriber.save();\n\n    res\n      .status(200)\n      .json({ message: \"Successfully unsubscribed from newsletter\" });\n  } catch (error) {\n    console.error(\"Unsubscribe error:\", error);\n    res.status(500).json({ error: \"Internal server error\" });\n  }\n};\n\n// ✅ Send Newsletter\nconst sendNewsletter = async (req, res) => {\n  try {\n    const { subject, content } = req.body;\n\n    const subscribers = await Newsletter.find({ isSubscribed: true });\n\n    const generateUnsubscribeLink = (email) => {\n      const token = generateUnsubscribeToken(email);\n      return `${req.protocol}://${req.get(\n        \"host\"\n      )}/api/newsletter/unsubscribe?token=${token}&email=${email}`;\n    };\n\n    await sendBulkNewsletter(\n      subscribers,\n      subject,\n      content,\n      generateUnsubscribeLink\n    );\n\n    res.status(200).json({\n      message: `Newsletter sent to ${subscribers.length} subscribers`,\n    });\n  } catch (error) {\n    console.error(\"Send newsletter error:\", error);\n    res.status(500).json({ error: \"Internal server error\" });\n  }\n};\n\n// ✅ Get Subscriber Count\nconst getSubscriberCount = async (req, res) => {\n  try {\n    const count = await Newsletter.countDocuments({ isSubscribed: true });\n    res.status(200).json({ count });\n  } catch (error) {\n    console.error(\"Get subscriber count error:\", error);\n    res.status(500).json({ error: \"Internal server error\" });\n  }\n};\n\nmodule.exports = {\n  subscribe,\n  unsubscribe,\n  sendNewsletter,\n  getSubscriberCount,\n};\n","size_bytes":3501},"backend/middleware/auth.js":{"content":"const jwt = require('jsonwebtoken');\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'dev_secret_change_me';\n\nexports.requireAuth = (req, res, next) => {\n  const authHeader = req.headers['authorization'] || req.headers['Authorization'];\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return res.status(401).json({ error: 'Missing Authorization header' });\n  }\n  const token = authHeader.split(' ')[1];\n  try {\n    const payload = jwt.verify(token, JWT_SECRET);\n    req.user = { id: payload.sub, email: payload.email, role: payload.role };\n    return next();\n  } catch (err) {\n    return res.status(401).json({ error: 'Invalid or expired token' });\n  }\n};\n\nexports.requireRole = (role) => (req, res, next) => {\n  if (!req.user) return res.status(401).json({ error: 'Unauthorized' });\n  \n  // Super admin can access everything\n  if (req.user.role === 'super_admin') return next();\n  \n  // Check specific role requirement\n  if (req.user.role !== role) return res.status(403).json({ error: 'Forbidden' });\n  \n  return next();\n};\n\nexports.requireAdmin = (req, res, next) => {\n  if (!req.user) return res.status(401).json({ error: 'Unauthorized' });\n  if (!['admin', 'super_admin'].includes(req.user.role)) {\n    return res.status(403).json({ error: 'Admin access required' });\n  }\n  return next();\n};\n\n\n","size_bytes":1311},"backend/models/Application.js":{"content":"const mongoose = require('mongoose');\n\nconst formResponseSchema = new mongoose.Schema({\n        fieldLabel: String,\n        response: mongoose.Schema.Types.Mixed,\n        fieldType: String\n}, { _id: false });\n\nconst applicationSchema = new mongoose.Schema({\n        job: { type: mongoose.Schema.Types.ObjectId, ref: 'Job', required: true },\n        student: { type: mongoose.Schema.Types.ObjectId, ref: 'Student', required: true },\n        applicantName: { type: String, required: true },\n        applicantEmail: { type: String, required: true },\n        applicantPhone: { type: String },\n        applicantCourse: { type: String },\n        applicantYear: { type: String },\n        applicantBranch: { type: String },\n        status: { type: String, enum: ['pending', 'shortlisted', 'interviewed', 'selected', 'rejected'], default: 'pending' },\n        appliedAt: { type: Date, default: Date.now },\n        formResponses: [formResponseSchema],\n        adminNotes: { type: String },\n        interviewDate: { type: Date },\n        interviewRound: { type: String },\n        feedback: { type: String }\n});\n\nmodule.exports = mongoose.model('Application', applicationSchema);\n","size_bytes":1168},"backend/models/InterviewExperience.js":{"content":"const mongoose = require('mongoose');\n\nconst interviewExperienceSchema = new mongoose.Schema({\n  student: { type: mongoose.Schema.Types.ObjectId, ref: 'Student', required: true },\n  company: { type: String, required: true },\n  role: { type: String, required: true },\n  package: { type: String },\n  experience: { type: String, required: true },\n  difficulty: { type: String, enum: ['Easy', 'Medium', 'Hard'], default: 'Medium' },\n  rounds: [{ type: String }],\n  tips: { type: String },\n  approved: { type: Boolean, default: false },\n  submittedBy: { type: String, required: true }, // Student name\n  createdAt: { type: Date, default: Date.now },\n});\n\nmodule.exports = mongoose.model('InterviewExperience', interviewExperienceSchema);\n","size_bytes":733},"backend/models/Job.js":{"content":"const mongoose = require('mongoose');\n\nconst jobSchema = new mongoose.Schema({\n  companyName: String,\n  companyLogo: String,\n  companyWebsite: String,  // Add company website field\n  position: String,\n  jobType: String,\n  salaryPackage: String,\n  location: String,\n  applicationDeadline: String,\n  jobDescription: String,\n  skillsRequired: String,\n  selectionProcess: String,\n  bondDetails: String,\n  benefits: String,\n  contactPerson: String,\n  contactEmail: String,\n  contactPhone: String,\n  driveDate: String,\n  additionalInfo: String,\n  eligibleCourses: [String],\n  eligibleYears: [String],\n  eligibleBranches: [String],\n});\n\nmodule.exports = mongoose.model('Job', jobSchema);","size_bytes":680},"backend/models/Newsletter.js":{"content":"const mongoose = require(\"mongoose\");\n\nconst newsletterSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true,\n  },\n  isSubscribed: {\n    type: Boolean,\n    default: true,\n  },\n  subscribedAt: {\n    type: Date,\n    default: Date.now,\n  },\n  unsubscribedAt: {\n    type: Date,\n  },\n});\n\nmodule.exports = mongoose.model(\"Newsletter\", newsletterSchema);\n","size_bytes":429},"backend/models/User.js":{"content":"const mongoose = require('mongoose');\n\nconst userSchema = new mongoose.Schema(\n  {\n    name: { type: String, required: true, trim: true },\n    email: { type: String, required: true, unique: true, lowercase: true, trim: true },\n    passwordHash: { type: String, required: true },\n    role: { type: String, enum: ['student', 'faculty', 'admin', 'super_admin'], default: 'student' },\n    isSuperAdmin: { type: Boolean, default: false },\n    createdBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n    lastPasswordChange: { type: Date, default: Date.now },\n    forcePasswordChange: { type: Boolean, default: false },\n    loginAttempts: { type: Number, default: 0 },\n    lockedUntil: { type: Date },\n    isActive: { type: Boolean, default: true }\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model('User', userSchema);\n\n\n","size_bytes":839},"backend/routes/adminManagementRoutes.js":{"content":"const express = require('express');\nconst router = express.Router();\nconst adminController = require('../controllers/adminContoller');\nconst { requireAuth, requireAdmin } = require('../middleware/auth');\n\n// Get all admins (super admin only)\nrouter.get('/admins', requireAuth, requireAdmin, adminController.getAllAdmins);\n\n// Invite new admin (super admin only)\nrouter.post('/invite', requireAuth, requireAdmin, adminController.inviteAdmin);\n\n// Update admin (super admin only)\nrouter.put('/update/:id', requireAuth, requireAdmin, adminController.updateAdmin);\n\n// Delete admin (super admin only)\nrouter.delete('/delete/:id', requireAuth, requireAdmin, adminController.deleteAdmin);\n\n// Change password (any admin)\nrouter.put('/change-password', requireAuth, requireAdmin, adminController.changePassword);\n\nmodule.exports = router;\n","size_bytes":832},"backend/routes/adminRoutes.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\nconst jobController = require('../controllers/jobControllers');\nconst { requireAuth, requireAdmin } = require('../middleware/auth');\n\nconst router = express.Router();\n\n// Multer setup for file uploads\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, 'uploads/');\n  },\n  filename: function (req, file, cb) {\n    cb(null, Date.now() + path.extname(file.originalname));\n  }\n});\nconst upload = multer({ storage });\n\n// Public routes (read-only)\nrouter.get('/', jobController.getAllJobs);\n\n// Protected routes (admin only)\nrouter.post('/', requireAuth, requireAdmin, upload.single('companyLogo'), jobController.createJob);\nrouter.put('/:id', requireAuth, requireAdmin, upload.single('companyLogo'), jobController.updateJob);\nrouter.delete('/:id', requireAuth, requireAdmin, jobController.deleteJob);\n\nmodule.exports = router;","size_bytes":963},"backend/routes/applicationRoutes.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\nconst applicationController = require('../controllers/applicationController');\nconst { requireAuth, requireAdmin } = require('../middleware/auth');\n\nconst router = express.Router();\n\n// Multer setup for file uploads in applications\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, 'uploads/applications/');\n  },\n  filename: function (req, file, cb) {\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    cb(null, file.fieldname + '-' + uniqueSuffix + path.extname(file.originalname));\n  }\n});\n\nconst upload = multer({ storage });\n\n// Public routes\nrouter.post('/submit', upload.any(), applicationController.submitApplication);\n\n// Protected routes (admin only)\nrouter.get('/job/:jobId', requireAuth, requireAdmin, applicationController.getJobApplications);\nrouter.get('/all', requireAuth, requireAdmin, applicationController.getAllApplications);\nrouter.put('/:applicationId/status', requireAuth, requireAdmin, applicationController.updateApplicationStatus);\nrouter.get('/stats', requireAuth, requireAdmin, applicationController.getApplicationStats);\n\nmodule.exports = router;\n","size_bytes":1247},"backend/routes/authRoutes.js":{"content":"const express = require('express');\nconst router = express.Router();\nconst { register, login } = require('../controllers/authController');\nconst { requireAuth } = require('../middleware/auth');\n\nrouter.post('/register', register);\nrouter.post('/login', login);\n\n// Example protected route to check current user\nrouter.get('/me', requireAuth, (req, res) => {\n  res.json({ user: req.user });\n});\n\nmodule.exports = router;\n\n\n","size_bytes":422},"backend/routes/imageRoutes.js":{"content":"const express = require('express');\nconst path = require('path');\nconst fs = require('fs');\nconst router = express.Router();\n\n// Serve images from uploads folder\nrouter.get('/:filename', (req, res) => {\n  try {\n    const filePath = path.join(__dirname, '..', 'uploads', req.params.filename);\n    \n    // Check if file exists\n    if (!fs.existsSync(filePath)) {\n      console.log(`❌ Image not found: ${req.params.filename}`);\n      return res.status(404).json({ error: 'Image not found' });\n    }\n    \n    // Set proper headers for images\n    const ext = path.extname(req.params.filename).toLowerCase();\n    const mimeTypes = {\n      '.png': 'image/png',\n      '.jpg': 'image/jpeg',\n      '.jpeg': 'image/jpeg',\n      '.gif': 'image/gif',\n      '.webp': 'image/webp'\n    };\n    \n    const mimeType = mimeTypes[ext] || 'application/octet-stream';\n    res.setHeader('Content-Type', mimeType);\n    res.setHeader('Cache-Control', 'public, max-age=86400'); // Cache for 1 day\n    \n    res.sendFile(filePath);\n  } catch (error) {\n    console.error('Error serving image:', error);\n    res.status(500).json({ error: 'Error serving image' });\n  }\n});\n\nmodule.exports = router;","size_bytes":1168},"backend/routes/interviewExperienceRoutes.js":{"content":"const express = require('express');\nconst router = express.Router();\nconst { requireAuth, requireRole, requireAdmin } = require('../middleware/auth');\nconst interviewCtrl = require('../controllers/interviewExperienceController');\n\n// Public routes\nrouter.get('/approved', interviewCtrl.getAllApprovedExperiences);\nrouter.get('/:id', interviewCtrl.getExperienceById);\n\n// Student routes\nrouter.post('/submit', requireAuth, requireRole('student'), interviewCtrl.submitInterviewExperience);\n\n// Admin routes\nrouter.get('/', requireAuth, requireAdmin, interviewCtrl.getAllExperiences);\nrouter.put('/:id/status', requireAuth, requireAdmin, interviewCtrl.updateExperienceStatus);\nrouter.delete('/:id', requireAuth, requireAdmin, interviewCtrl.deleteExperience);\n\n// Legacy route for backward compatibility\nrouter.post('/', interviewCtrl.addExperience);\n\nmodule.exports = router;\n","size_bytes":873},"backend/routes/jobRoutes.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\nconst fs = require('fs');\nconst jobController = require('../controllers/jobControllers');\nconst { requireAuth, requireAdmin } = require('../middleware/auth');\n\nconst router = express.Router();\n\n// Local storage configuration\nconst uploadsDir = path.join(__dirname, '..', 'uploads');\nif (!fs.existsSync(uploadsDir)) {\n  fs.mkdirSync(uploadsDir, { recursive: true });\n  console.log('📁 Created uploads directory');\n}\n\nconst uploadStorage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, uploadsDir);\n  },\n  filename: function (req, file, cb) {\n    const uniqueName = Date.now() + '-' + Math.round(Math.random() * 1E9) + path.extname(file.originalname);\n    cb(null, uniqueName);\n  }\n});\nconsole.log('📁 Using local storage for image uploads');\n\n// Configure multer with the selected storage\nconst upload = multer({ \n  storage: uploadStorage,\n  limits: {\n    fileSize: 5 * 1024 * 1024 // 5MB limit\n  },\n  fileFilter: (req, file, cb) => {\n    const allowedTypes = /jpeg|jpg|png|gif|webp/;\n    const extname = allowedTypes.test(path.extname(file.originalname).toLowerCase());\n    const mimetype = allowedTypes.test(file.mimetype);\n    \n    if (mimetype && extname) {\n      return cb(null, true);\n    } else {\n      cb(new Error('Only image files are allowed (jpeg, jpg, png, gif, webp)'));\n    }\n  }\n});\n\n// Public routes (read-only)\nrouter.get('/', jobController.getAllJobs);\n\n// Protected routes (admin only)\nrouter.post('/', requireAuth, requireAdmin, upload.single('companyLogo'), jobController.createJob);\nrouter.put('/:id', requireAuth, requireAdmin, upload.single('companyLogo'), jobController.updateJob);\nrouter.delete('/:id', requireAuth, requireAdmin, jobController.deleteJob);\n\nmodule.exports = router;","size_bytes":1841},"backend/routes/newsletter.js":{"content":"const express = require(\"express\");\nconst {\n  subscribe,\n  unsubscribe,\n  sendNewsletter,\n  getSubscriberCount,\n} = require(\"../controllers/newsletterController.js\");\n\nconst router = express.Router();\n\nrouter.post(\"/subscribe\", subscribe);\nrouter.get(\"/unsubscribe\", unsubscribe);\nrouter.post(\"/send\", sendNewsletter);\nrouter.get(\"/count\", getSubscriberCount);\n\nmodule.exports = router;\n","size_bytes":387},"backend/scripts/addJob.js":{"content":"","size_bytes":0},"backend/scripts/addMultipleJobs.js":{"content":"const mongoose = require('mongoose');\nrequire('dotenv').config();\n\nconst Job = require('../models/Job');\n\nconst MONGODB_URI = process.env.MONGO_URI || 'mongodb+srv://hemjshah052:hem0502@cluster0.vd6tt.mongodb.net/placement?retryWrites=true&w=majority';\n\nconst jobs = [\n  {\n    position: 'Software Engineer',\n    companyName: 'Google',\n    location: 'Bangalore, India',\n    jobDescription: 'Develop scalable web applications and services.',\n    companyLogo: 'https://upload.wikimedia.org/wikipedia/commons/2/2f/Google_2015_logo.svg',\n    jobType: 'Full-time',\n    salaryPackage: '30 LPA',\n    applicationDeadline: '',\n    eligibleCourses: ['BTech', 'MTech'],\n    eligibleBranches: ['CSE', 'IT'],\n    eligibleYears: ['2024', '2025'],\n  },\n  {\n    position: 'Data Analyst',\n    companyName: 'Microsoft',\n    location: 'Hyderabad, India',\n    jobDescription: 'Analyze data and generate business insights.',\n    companyLogo: 'https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg',\n    jobType: 'Full-time',\n    salaryPackage: '25 LPA',\n    applicationDeadline: '',\n    eligibleCourses: ['BTech', 'BSc'],\n    eligibleBranches: ['CSE', 'ECE'],\n    eligibleYears: ['2024', '2025'],\n  },\n  {\n    position: 'Backend Developer',\n    companyName: 'Amazon',\n    location: 'Remote',\n    jobDescription: 'Build and maintain backend services for e-commerce.',\n    companyLogo: 'https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg',\n    jobType: 'Full-time',\n    salaryPackage: '28 LPA',\n    applicationDeadline: '',\n    eligibleCourses: ['BTech', 'MCA'],\n    eligibleBranches: ['CSE', 'IT'],\n    eligibleYears: ['2024', '2025'],\n  },\n  {\n    position: 'Frontend Developer',\n    companyName: 'Flipkart',\n    location: 'Bangalore, India',\n    jobDescription: 'Create beautiful and responsive user interfaces.',\n    companyLogo: 'https://upload.wikimedia.org/wikipedia/commons/1/12/Flipkart_logo.svg',\n    jobType: 'Full-time',\n    salaryPackage: '22 LPA',\n    applicationDeadline: '',\n    eligibleCourses: ['BTech', 'BSc'],\n    eligibleBranches: ['CSE', 'IT'],\n    eligibleYears: ['2024', '2025'],\n  },\n  {\n    position: 'DevOps Engineer',\n    companyName: 'Infosys',\n    location: 'Pune, India',\n    jobDescription: 'Automate deployment and manage cloud infrastructure.',\n    companyLogo: 'https://upload.wikimedia.org/wikipedia/commons/5/5e/Infosys_logo.svg',\n    jobType: 'Full-time',\n    salaryPackage: '20 LPA',\n    applicationDeadline: '',\n    eligibleCourses: ['BTech', 'MTech'],\n    eligibleBranches: ['CSE', 'ECE'],\n    eligibleYears: ['2024', '2025'],\n  },\n  {\n    position: 'Product Manager',\n    companyName: 'TCS',\n    location: 'Mumbai, India',\n    jobDescription: 'Lead product development and strategy.',\n    companyLogo: 'https://upload.wikimedia.org/wikipedia/commons/8/8e/Tata_Consultancy_Services_Logo.svg',\n    jobType: 'Full-time',\n    salaryPackage: '35 LPA',\n    applicationDeadline: '',\n    eligibleCourses: ['MBA'],\n    eligibleBranches: [],\n    eligibleYears: ['2024', '2025'],\n  },\n];\n\nasync function addMultipleJobs() {\n  try {\n    await mongoose.connect(MONGODB_URI, {\n      dbName: 'PMS-CGC-U',\n      retryWrites: true,\n      w: 'majority',\n    });\n    console.log('Connected to MongoDB');\n\n    await Job.insertMany(jobs);\n    console.log('Multiple jobs added successfully!');\n  } catch (error) {\n    console.error('Error adding jobs:', error);\n  } finally {\n    await mongoose.disconnect();\n    process.exit(0);\n  }\n}\n\naddMultipleJobs();\n","size_bytes":3486},"backend/scripts/addSampleApplications.js":{"content":"// Script to add sample applications to PMS-CGC-U database\nconst mongoose = require('mongoose');\nconst dotenv = require('dotenv');\nconst Application = require('../models/Application');\nconst Job = require('../models/Job');\n\ndotenv.config();\n\nconst MONGODB_URI = 'mongodb+srv://hemjshah052:hem0502@cluster0.vd6tt.mongodb.net/placement?retryWrites=true&w=majority';\n\nasync function addSampleApplications() {\n  try {\n    await mongoose.connect(MONGODB_URI);\n    console.log('Connected to MongoDB');\n\n    // Fetch jobs to associate applications\n    const jobs = await Job.find({});\n    if (jobs.length === 0) {\n      console.log('No jobs found. Please add jobs first.');\n      process.exit(0);\n    }\n\n    // Sample applications\n    const applications = [\n      {\n        job: jobs[0]._id,\n        applicantName: 'Amit Sharma',\n        applicantEmail: 'amit.sharma@example.com',\n        applicantPhone: '9876543210',\n        applicantCourse: 'B.Tech',\n        applicantYear: '2025',\n        applicantBranch: 'CSE',\n        status: 'pending',\n        appliedAt: new Date(),\n        formResponses: [\n          { fieldLabel: 'Resume Link', response: 'https://drive.google.com/amit_resume', fieldType: 'text' },\n          { fieldLabel: 'Skills', response: 'React, Node.js, MongoDB', fieldType: 'text' }\n        ]\n      },\n      {\n        job: jobs[1]?._id || jobs[0]._id,\n        applicantName: 'Priya Verma',\n        applicantEmail: 'priya.verma@example.com',\n        applicantPhone: '9123456789',\n        applicantCourse: 'MBA',\n        applicantYear: '2024',\n        applicantBranch: 'Management',\n        status: 'shortlisted',\n        appliedAt: new Date(),\n        formResponses: [\n          { fieldLabel: 'Resume Link', response: 'https://drive.google.com/priya_resume', fieldType: 'text' },\n          { fieldLabel: 'Skills', response: 'Marketing, Communication', fieldType: 'text' }\n        ]\n      }\n    ];\n\n  await Application.create(applications);\n    console.log('Sample applications added successfully!');\n    process.exit(0);\n  } catch (err) {\n    console.error('Error adding applications:', err);\n    process.exit(1);\n  }\n}\n\naddSampleApplications();\n","size_bytes":2156},"backend/scripts/createAdmin.js":{"content":"const mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\nconst User = require('../models/User');\nrequire('dotenv').config();\n\nconst MONGODB_URI = process.env.MONGO_URI || 'mongodb+srv://hemjshah052:hem0502@cluster0.vd6tt.mongodb.net/placement?retryWrites=true&w=majority';\n\nasync function createAdminUser() {\n  try {\n    // Connect to MongoDB\n  await mongoose.connect(MONGODB_URI);\n  console.log('Connected to MongoDB');\n  console.log('Connected to DB:', mongoose.connection.name);\n  console.log('Connected to Host:', mongoose.connection.host);\n\n    // Check if admin already exists\n\n    const newEmail = 'jadaunmohit0@gmail.com';\n    const newPassword = 'Mohit@123';\n    const existingAdmin = await User.findOne({ email: newEmail });\n    if (existingAdmin) {\n      console.log('Admin user already exists');\n      process.exit(0);\n    }\n\n    // Create admin user\n    const saltRounds = 10;\n    const passwordHash = await bcrypt.hash(newPassword, saltRounds);\n\n    const adminUser = new User({\n      name: 'System Administrator',\n      email: newEmail,\n      passwordHash,\n      role: 'admin'\n    });\n\n    await adminUser.save();\n  console.log('Admin user created successfully!');\n  console.log('Email: ' + newEmail);\n  console.log('Password: ' + newPassword);\n  console.log('Role: admin');\n\n  } catch (error) {\n    console.error('Error creating admin user:', error);\n  } finally {\n    await mongoose.disconnect();\n    process.exit(0);\n  }\n}\n\ncreateAdminUser();\n\n","size_bytes":1477},"backend/scripts/createSuperAdmin.js":{"content":"const mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\nconst User = require('../models/User');\nrequire('dotenv').config();\n\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb+srv://hemjshah052:hem0502@cluster0.vd6tt.mongodb.net/placement?retryWrites=true&w=majority';\n\nasync function createSuperAdmin() {\n  try {\n    // Check for required environment variables\n    const adminEmail = 'superadmin@gmail.com';\n    const adminPassword = 'Super@123';\n    const adminName = 'Super Admin';\n\n\n    // Connect to MongoDB\n  await mongoose.connect('mongodb+srv://hemjshah052:hem0502@cluster0.vd6tt.mongodb.net/placement?retryWrites=true&w=majority');\n    console.log('✅ Connected to MongoDB');\n\n    // Check if super admin already exists\n    const existingSuperAdmin = await User.findOne({ role: 'super_admin' });\n    if (existingSuperAdmin) {\n      console.log('⚠️  Super admin already exists');\n      console.log(`   Email: ${existingSuperAdmin.email}`);\n      console.log(`   Name: ${existingSuperAdmin.name}`);\n      process.exit(0);\n    }\n\n    // Check if admin with this email exists\n    const existingUser = await User.findOne({ email: adminEmail });\n    if (existingUser) {\n      console.log(`⚠️  User with email ${adminEmail} already exists`);\n      console.log(`   Current role: ${existingUser.role}`);\n      \n      // Update to super admin if not already\n      if (existingUser.role !== 'super_admin') {\n        existingUser.role = 'super_admin';\n        existingUser.isSuperAdmin = true;\n        await existingUser.save();\n        console.log('✅ Updated user to super admin');\n      }\n      process.exit(0);\n    }\n\n    // Create super admin user\n    const saltRounds = 10;\n    const passwordHash = await bcrypt.hash(adminPassword, saltRounds);\n\n    const superAdmin = new User({\n      name: adminName,\n      email: adminEmail,\n      passwordHash,\n      role: 'super_admin',\n      isSuperAdmin: true,\n      isActive: true\n    });\n\n    await superAdmin.save();\n    console.log('✅ Super admin created successfully!');\n    console.log(`   Email: ${adminEmail}`);\n    console.log(`   Name: ${adminName}`);\n    console.log(`   Role: super_admin`);\n    console.log('🔐 Please change the password after first login');\n\n  } catch (error) {\n    console.error('❌ Error creating super admin:', error);\n  } finally {\n    await mongoose.disconnect();\n    process.exit(0);\n  }\n}\n\ncreateSuperAdmin();\n\n","size_bytes":2427},"backend/scripts/fixDatabase.js":{"content":"const mongoose = require('mongoose');\nrequire('dotenv').config();\n\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb+srv://hemjshah052:hem0502@cluster0.vd6tt.mongodb.net/placement?retryWrites=true&w=majority';\n\nasync function fixDatabase() {\n  try {\n    // Connect to MongoDB\n    await mongoose.connect(MONGODB_URI);\n    console.log('✅ Connected to MongoDB');\n\n    // Get the database instance\n    const db = mongoose.connection.db;\n    \n    // List all indexes on the users collection\n    console.log('📋 Current indexes on users collection:');\n    const indexes = await db.collection('users').indexes();\n    indexes.forEach(index => {\n      console.log(`  - ${index.name}: ${JSON.stringify(index.key)}`);\n    });\n\n    // Check if the problematic username index exists\n    const usernameIndex = indexes.find(index => \n      index.name === 'username_1' || \n      Object.keys(index.key).includes('username')\n    );\n\n    if (usernameIndex) {\n      console.log('🔧 Found problematic username index, removing it...');\n      await db.collection('users').dropIndex(usernameIndex.name);\n      console.log('✅ Username index removed successfully');\n    } else {\n      console.log('✅ No problematic username index found');\n    }\n\n    // List indexes again to confirm\n    console.log('📋 Updated indexes on users collection:');\n    const updatedIndexes = await db.collection('users').indexes();\n    updatedIndexes.forEach(index => {\n      console.log(`  - ${index.name}: ${JSON.stringify(index.key)}`);\n    });\n\n    // Clean up any users with null username (if they exist)\n    console.log('🧹 Cleaning up any users with null username...');\n    const result = await db.collection('users').deleteMany({ username: null });\n    console.log(`✅ Removed ${result.deletedCount} users with null username`);\n\n    console.log('🎉 Database fix completed successfully!');\n\n  } catch (error) {\n    console.error('❌ Error fixing database:', error);\n  } finally {\n    await mongoose.disconnect();\n    process.exit(0);\n  }\n}\n\nfixDatabase();\n","size_bytes":2039},"backend/services/emailService.js":{"content":"const nodemailer = require(\"nodemailer\");\nconst dotenv = require(\"dotenv\");\nconst crypto = require(\"crypto\");\n\ndotenv.config();\n\n// Create transporter for nodemailer\nconst createTransporter = () => {\n  return nodemailer.createTransport({\n    service: process.env.EMAIL_SERVICE,\n    auth: {\n      user: process.env.EMAIL_USERNAME,\n      pass: process.env.EMAIL_PASSWORD,\n    },\n  });\n};\n\n// Generate unsubscribe token\nconst generateUnsubscribeToken = (email) => {\n  const secret = process.env.NEWSLETTER_SUBSCRIBE_SECRET;\n  return crypto.createHmac(\"sha256\", secret).update(email).digest(\"hex\");\n};\n\n// Send subscription confirmation email\nconst sendConfirmationEmail = async (email, unsubscribeLink) => {\n  try {\n    const transporter = createTransporter();\n\n    const mailOptions = {\n      from: `\"CGC Jhanjeri DCPD\" <${process.env.EMAIL_USERNAME}>`,\n      to: email,\n      subject:\n        \"Welcome to CGC Jhanjeri DCPD! 🎓 Your Career Development Partner\",\n      html: `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Welcome to CGC Jhanjeri DCPD</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Arial', sans-serif; background-color: #f9fafb;\">\n  <div style=\"max-width: 600px; margin: 0 auto; background-color: #ffffff;\">\n    <div style=\"background: linear-gradient(135deg, #1e40af 0%, #2563eb 100%); padding: 30px 20px; text-align: center; border-radius: 8px 8px 0 0;\">\n      <h1 style=\"color: white; margin: 0; font-size: 28px; font-weight: bold;\">Welcome to CGC Jhanjeri DCPD</h1>\n      <p style=\"color: rgba(255, 255, 255, 0.9); margin: 10px 0 0; font-size: 16px;\">\n        Department of Career Planning & Development<br />Empowering students for successful careers.\n      </p>\n    </div>\n    <div style=\"padding: 30px 20px; text-align: center;\">\n      <h2 style=\"color: #1f2937; margin-bottom: 15px;\">We're excited to have you on board!</h2>\n      <p style=\"color: #6b7280; line-height: 1.6; margin: 0;\">\n        Thank you for subscribing to CGC Jhanjeri DCPD's updates. You'll now receive information about job opportunities, training programs, placement activities, and career development resources.\n      </p>\n      <div style=\"margin: 30px 0;\">\n        <a href=\"https://cgcuet.cgcuniversity.in/admission?utm_source=google&utm_medium=search&utm_campaign=competitors&gad_source=1&gad_campaignid=22921948485&gbraid=0AAAAACuqqMirhwli4aAUiyHZJj3ZJQ0gJ&gclid=Cj0KCQjwzaXFBhDlARIsAFPv-u8V7UEgLEzK-OOOovi_VjppR0AJpWinfrxX33BTJb6YNSVd7c-zj44aAndrEALw_wcB\" style=\"display: inline-block; background: linear-gradient(135deg, #1e40af 0%, #2563eb 100%); color: white; padding: 14px 30px; text-decoration: none; border-radius: 8px; font-weight: bold; font-size: 16px;\">\n          Visit Campus Recruitment Portal\n        </a>\n      </div>\n    </div>\n    <div style=\"background-color: #f3f4f6; padding: 20px; text-align: center; border-radius: 0 0 8px 8px;\">\n      <p style=\"color: #6b7280; margin: 0 0 15px; font-size: 14px;\">\n        You're receiving this email because you signed up for updates from CGC Jhanjeri DCPD.\n      </p>\n      <div style=\"margin-bottom: 15px;\">\n        <a href=\"${unsubscribeLink}\" style=\"color: #ef4444; text-decoration: none; font-size: 14px;\">\n          Unsubscribe from our updates\n        </a>\n      </div>\n      <div style=\"margin-bottom: 15px;\">\n        <a href=\"https://linkedin.com/school/cgcjhanjeri\" style=\"display: inline-block; margin: 0 10px;\"><span style=\"font-size: 20px;\">🎓</span></a>\n        <a href=\"https://facebook.com/cgcjhanjeri\" style=\"display: inline-block; margin: 0 10px;\"><span style=\"font-size: 20px;\">📘</span></a>\n        <a href=\"https://instagram.com/cgcjhanjeri\" style=\"display: inline-block; margin: 0 10px;\"><span style=\"font-size: 20px;\">📸</span></a>\n      </div>\n      <p style=\"color: #9ca3af; margin: 0; font-size: 12px;\">\n        &copy; ${new Date().getFullYear()} CGC Jhanjeri - Department of Career Planning & Development. All rights reserved.<br />\n        Chandigarh Group of Colleges, Jhanjeri, Mohali, Punjab 140307\n      </p>\n    </div>\n  </div>\n</body>\n</html>`,\n    };\n\n    await transporter.sendMail(mailOptions);\n    return true;\n  } catch (error) {\n    console.error(\"Email sending error:\", error);\n    return false;\n  }\n};\n\n// Send newsletter to all subscribers\nconst sendBulkNewsletter = async (\n  subscribers,\n  subject,\n  content,\n  unsubscribeLinkGenerator\n) => {\n  const transporter = createTransporter();\n\n  for (const subscriber of subscribers) {\n    const unsubscribeLink = unsubscribeLinkGenerator(subscriber.email);\n\n    const mailOptions = {\n      from: `\"CGC Jhanjeri DCPD\" <${process.env.EMAIL_USERNAME}>`,\n      to: subscriber.email,\n      subject: subject,\n      html: `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>CGC Jhanjeri DCPD Update</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Arial', sans-serif; background-color: #f9fafb;\">\n  <div style=\"max-width: 600px; margin: 0 auto; background-color: #ffffff;\">\n    <div style=\"background: linear-gradient(135deg, #1e40af 0%, #2563eb 100%); padding: 25px 20px; text-align: center; border-radius: 8px 8px 0 0;\">\n      <h1 style=\"color: white; margin: 0; font-size: 24px; font-weight: bold;\">CGC Jhanjeri DCPD</h1>\n      <p style=\"color: rgba(255, 255, 255, 0.9); margin: 8px 0 0; font-size: 14px;\">\n        Department of Career Planning & Development - Empowering students for successful careers.\n      </p>\n    </div>\n    <div style=\"padding: 30px 20px;\">\n      ${content}\n    </div>\n    <div style=\"background-color: #f3f4f6; padding: 20px; text-align: center; border-radius: 0 0 8px 8px;\">\n      <p style=\"color: #6b7280; margin: 0 0 15px; font-size: 14px;\">\n        You're receiving this email because you subscribed to CGC Jhanjeri DCPD updates.\n      </p>\n      <a href=\"${unsubscribeLink}\" style=\"color: #ef4444; text-decoration: none; font-size: 14px;\">\n        Unsubscribe\n      </a>\n      <p style=\"color: #9ca3af; margin: 15px 0 0; font-size: 12px;\">\n        &copy; ${new Date().getFullYear()} CGC Jhanjeri - Department of Career Planning & Development.\n      </p>\n    </div>\n  </div>\n</body>\n</html>`,\n    };\n\n    try {\n      await transporter.sendMail(mailOptions);\n    } catch (error) {\n      console.error(`Failed to send to ${subscriber.email}:`, error);\n    }\n  }\n};\n\nmodule.exports = {\n  generateUnsubscribeToken,\n  sendConfirmationEmail,\n  sendBulkNewsletter,\n};\n","size_bytes":6580},"frontend/api/admin.js":{"content":"import { api } from './index';\nimport { API_ENDPOINTS } from '../src/config/api';\n\n// Get all admins\nexport const getAllAdmins = async () => {\n  try {\n    const response = await api.get(`${API_ENDPOINTS.ADMIN_MANAGEMENT}/admins`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Invite new admin\nexport const inviteAdmin = async (adminData) => {\n  try {\n    const response = await api.post(`${API_ENDPOINTS.ADMIN_MANAGEMENT}/invite`, adminData);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Update admin\nexport const updateAdmin = async (adminId, updateData) => {\n  try {\n    const response = await api.put(`${API_ENDPOINTS.ADMIN_MANAGEMENT}/update/${adminId}`, updateData);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Delete admin\nexport const deleteAdmin = async (adminId) => {\n  try {\n    const response = await api.delete(`${API_ENDPOINTS.ADMIN_MANAGEMENT}/delete/${adminId}`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Change password\nexport const changePassword = async (passwordData) => {\n  try {\n    const response = await api.put(`${API_ENDPOINTS.ADMIN_MANAGEMENT}/change-password`, passwordData);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Toggle admin status (activate/deactivate)\nexport const toggleAdminStatus = async (adminId, currentStatus) => {\n  try {\n    const response = await api.put(`${API_ENDPOINTS.ADMIN_MANAGEMENT}/update/${adminId}`, {\n      isActive: !currentStatus\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n","size_bytes":1810},"frontend/api/auth.js":{"content":"import { api } from './index';\n\nexport const signup = async (userData) => {\n  const res = await api.post('/api/auth/register', userData); // <-- changed\n  return res.data;\n};\n\nexport const signin = async (credentials) => {\n  const res = await api.post('/api/auth/login', credentials); // <-- changed\n  // Store token and user info based on role\n  if (res.data.token && res.data.user) {\n    if (res.data.user.role === 'admin' || res.data.user.role === 'super_admin') {\n      localStorage.setItem('adminToken', res.data.token);\n      localStorage.setItem('adminUser', JSON.stringify(res.data.user));\n    } else {\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n    }\n  }\n  return res.data;\n};\n\n\n","size_bytes":765},"frontend/api/index.js":{"content":"import axios from 'axios';\nimport API_BASE_URL from '../src/config/api';\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    api.defaults.headers.common.Authorization = `Bearer ${token}`;\n    localStorage.setItem('token', token);\n  } else {\n    delete api.defaults.headers.common.Authorization;\n    localStorage.removeItem('token');\n  }\n};\n\n// Add a request interceptor to include the token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token'); // For general user\n    const adminToken = localStorage.getItem('adminToken'); // For admin user\n\n    if (adminToken) { // Prioritize admin token if available\n      config.headers.Authorization = `Bearer ${adminToken}`;\n    } else if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Load token from storage on init\nconst stored = localStorage.getItem('token');\nif (stored) setAuthToken(stored);\n\nexport default function handler(req, res) {\n  res.status(200).send('Welcome to PMS-CGC-U Backend API! 🚀');\n  res.status(200).send('Welcome to PMS-CGC-U Backend API (Vercel serverless)! 🚀');\n}\n","size_bytes":1310},"frontend/api/jobs.js":{"content":"import { api } from './index';\n\nexport const getAllJobs = async () => {\n  const res = await api.get('/api/jobs');\n  return res.data;\n};\n\nexport const createJob = async (jobData) => {\n  const adminToken = localStorage.getItem('adminToken');\n  if (!adminToken) {\n    throw new Error('Admin authentication required');\n  }\n  \n  const res = await api.post('/api/jobs', jobData, {\n    headers: {\n      'Authorization': `Bearer ${adminToken}`\n    }\n  });\n  return res.data;\n};\n\nexport const updateJob = async (jobId, jobData) => {\n  const adminToken = localStorage.getItem('adminToken');\n  if (!adminToken) {\n    throw new Error('Admin authentication required');\n  }\n  \n  const res = await api.put(`/api/jobs/${jobId}`, jobData, {\n    headers: {\n      'Authorization': `Bearer ${adminToken}`\n    }\n  });\n  return res.data;\n};\n\nexport const deleteJob = async (jobId) => {\n  const adminToken = localStorage.getItem('adminToken');\n  if (!adminToken) {\n    throw new Error('Admin authentication required');\n  }\n  \n  const res = await api.delete(`/api/jobs/${jobId}`, {\n    headers: {\n      'Authorization': `Bearer ${adminToken}`\n    }\n  });\n  return res.data;\n};\n\n","size_bytes":1154},"frontend/src/App.jsx":{"content":"import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Toaster } from \"react-hot-toast\";\n\nimport Header from \"./components/Header\";\nimport Home from \"./components/home\";\nimport Footer from \"./components/Footer\";\nimport Sign from \"./components/Sign\";\nimport About from \"./components/About\";\nimport StudentProfile from \"./components/StudentProfile\";\nimport Contact from \"./components/Contact\";\nimport AdminJobPosting from \"./components/AdminJobPosting\";\nimport AdminLogin from \"./components/AdminLogin\";\nimport AdminManagement from \"./components/AdminManagement\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport JobsPage from \"./components/jobs\";\nimport InterviewExperience from \"./components/InterviewExperience\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport StudentLogin from \"./components/StudentLogin\";\nimport StudentRegister from \"./components/StudentRegister\";\nimport StudentDashboard from \"./components/StudentDashboard\";\nimport ApplicationManagement from \"./components/ApplicationManagement\";\nimport AdminAnalytics from \"./components/AdminAnalytics\";\n\nimport \"../src/index.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop /> {/* Always inside Router */}\n      <Toaster position=\"top-right\" /> {/* Toast notifications */}\n      <div className=\"app-container\">\n        <Routes>\n          {/* Home Page */}\n          <Route\n            path=\"/\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <Home />\n                </main>\n\n                <Footer />\n              </>\n            }\n          />\n\n          {/* Other Public Routes */}\n          <Route\n            path=\"/interview-experience\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <InterviewExperience />\n                </main>\n                <Footer />\n              </>\n            }\n          />\n\n          <Route\n            path=\"/signin\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <Sign />\n                </main>\n                <Footer />\n              </>\n            }\n          />\n\n          <Route\n            path=\"/about\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <About />\n                </main>\n                <Footer />\n              </>\n            }\n          />\n\n          <Route\n            path=\"/contact\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <Contact />\n                </main>\n                <Footer />\n              </>\n            }\n          />\n\n          <Route\n            path=\"/profile\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <StudentProfile />\n                </main>\n                <Footer />\n              </>\n            }\n          />\n\n          <Route\n            path=\"/jobs\"\n            element={\n              <>\n                <Header />\n                <main className=\"main-content\">\n                  <JobsPage />\n                </main>\n                <Footer />\n              </>\n            }\n          />\n\n          {/* Student Authentication Routes */}\n          <Route path=\"/student-login\" element={<StudentLogin />} />\n          <Route path=\"/student-register\" element={<StudentRegister />} />\n          \n          {/* Student Protected Routes */}\n          <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\n\n          {/* Admin Routes */}\n          <Route path=\"/admin-login\" element={<AdminLogin />} />\n          <Route\n            path=\"/admin-job-posting\"\n            element={\n              <ProtectedRoute requireAdmin={true}>\n                <AdminJobPosting />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/admin-management\"\n            element={\n              <ProtectedRoute requireAdmin={true}>\n                <AdminManagement />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/application-management\"\n            element={\n              <ProtectedRoute requireAdmin={true}>\n                <ApplicationManagement />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/admin-analytics\"\n            element={\n              <ProtectedRoute requireAdmin={true}>\n                <AdminAnalytics />\n              </ProtectedRoute>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","size_bytes":4860},"frontend/src/index.css":{"content":"@import \"tailwindcss\";\n\n/* Main Content Wrapper */\n.main-content {\n  min-height: 70vh;\n  padding: 2rem 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n}\n/* Modern SaaS Theme (Indigo/Cyan) */\n\n\n:root {\n  /* Base (Light) */\n  --color-bg: #ffffff;\n  --color-bg-muted: #f8fafc; /* gray-50 */\n  --color-surface: #ffffff;\n  --color-border: #e5e7eb; /* gray-200 */\n  --color-text: #0f172a; /* slate-900 */\n  --color-text-muted: #475569; /* slate-600 */\n\n  /* Brand */\n  --color-primary: #2563eb; /* indigo-600 */\n  --color-primary-700: #1d4ed8; /* indigo-700 */\n  --color-accent: #06b6d4; /* cyan-500 */\n\n  /* Effects */\n  --radius-md: 8px;\n  --radius-lg: 12px;\n  --elev-1: 0 1px 3px rgba(2, 6, 23, 0.06), 0 1px 2px rgba(2, 6, 23, 0.10);\n  --elev-2: 0 10px 15px -3px rgba(2, 6, 23, 0.1), 0 4px 6px -4px rgba(2, 6, 23, 0.1);\n  --transition-fast: 150ms;\n}\n\n/* Light Mode Overrides */\n/* Dark Mode */\n[data-theme=\"dark\"] {\n  --color-bg: #0b1220; /* near slate-950 */\n  --color-bg-muted: #0f172a; /* slate-900 */\n  --color-surface: #0f172a;\n  --color-border: #1f2937; /* gray-800 */\n  --color-text: #e5e7eb; /* gray-200 */\n  --color-text-muted: #94a3b8; /* slate-400 */\n  --color-primary: #3b82f6; /* blue-500 for better contrast on dark */\n  --color-primary-700: #2563eb; /* blue-600 */\n  --color-accent: #22d3ee; /* cyan-400 */\n}\n\n/* Base Styles */\nhtml {\n  scroll-behavior: smooth;\n  font-size: 16px;\n  overflow-x: hidden; /* prevent horizontal scrollbar */\n}\n\nbody,\n#root {\n  margin: 0;\n  padding: 0;\n  min-height: 100vh;\n  height: 100%;\n  background-color: var(--color-bg);\n  color: var(--color-text);\n  font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  line-height: 1.6;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow-x: hidden; /* prevent horizontal scrollbar */\n}\n\n/* Typography */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 600;\n  margin: 0 0 1rem 0;\n  line-height: 1.25;\n  color: var(--color-text);\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: var(--maroon-700);\n}\n\n/* Layout */\n#root {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n/* Scrollbar */\n::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n}\n\n::-webkit-scrollbar-track {\n  background: var(--color-bg-muted);\n}\n\n::-webkit-scrollbar-thumb {\n  background: var(--color-primary);\n  border-radius: 5px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: var(--color-primary-700);\n}\n\n/* Selection */\n::selection {\n  background: var(--color-primary);\n  color: white;\n}\n\n/* Focus Styles */\n:focus-visible {\n  outline: 2px solid var(--color-primary);\n  outline-offset: 2px;\n}\n\n/* Animations */\n.fade-in {\n  animation: fadeIn var(--transition-speed) ease-in forwards;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n/* Buttons & Links */\na, button {\n  transition: all var(--transition-fast) ease;\n}\n\nbutton {\n  background-color: var(--color-primary);\n  color: white;\n  border-radius: var(--radius-md);\n  border: none;\n  padding: 0.75rem 1.25rem;\n  cursor: pointer;\n  box-shadow: var(--elev-1);\n  font-weight: 500;\n  font-size: 1rem;\n}\n\nbutton:hover {\n  background-color: var(--color-primary-700);\n  transform: translateY(-1px);\n  box-shadow: var(--elev-2);\n}\n\n.btn-outline {\n  background: transparent;\n  border: 2px solid var(--color-primary);\n  color: var(--color-primary);\n}\n\n.btn-outline:hover {\n  background: var(--color-primary);\n  color: white;\n}\n\na {\n  color: var(--color-primary);\n  text-decoration: none;\n}\n\na:hover {\n  color: var(--color-primary-700);\n  text-decoration: underline;\n}\n\n.highlight { color: var(--color-primary); font-weight: 600; }\n\n/* Responsive */\n@media (max-width: 768px) {\n  html {\n    font-size: 14px;\n  }\n\n  h1 {\n    font-size: 2rem;\n  }\n\n  button {\n    padding: 0.6rem 1.2rem;\n    font-size: 0.9rem;\n  }\n}\n","size_bytes":3931},"frontend/src/main.jsx":{"content":"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\n \nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n","size_bytes":210},"frontend/src/components/About.jsx":{"content":"import React from \"react\";\nimport \"./about.css\";\nimport gulogo from \"../assets/gulogo2.png\";\n\nfunction About() {\n  return (\n    <div className=\"about-bg\">\n      <div className=\"about-container\">\n        <div className=\"about-header\">\n          <img\n            src={gulogo}\n            alt=\"Gujarat University Logo\"\n            className=\"about-logo\"\n          />\n          <h1>About Us</h1>\n        </div>\n        <div className=\"about-content\">\n          <h2>Department of Computer Science, GU Ahmedabad</h2>\n          <p>\n            <strong>DCS at GU Ahmedabad</strong> is dedicated to empowering students with the skills, guidance, and opportunities needed for successful careers. Our Campus Recruitment Portal is a specialized platform designed for the DCS department to streamline campus placements.\n          </p>\n          <ul>\n            <li>Personalized student profile management and career tracking</li>\n            <li>Centralized job postings and application management</li>\n            <li>Automated interview and test scheduling</li>\n            <li>Real-time analytics and placement insights</li>\n            <li>Dedicated DCS trainers and placement support team</li>\n            <li>Strong industry connections and recruiter engagement</li>\n          </ul>\n          <p>\n            At DCS, GU Ahmedabad, we are committed to nurturing talent, fostering industry partnerships, and ensuring every student is prepared for the professional world.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","size_bytes":1546},"frontend/src/components/AdminHeader.css":{"content":".admin-header {\n  background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\n  color: white;\n  padding: 15px 0;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.admin-header-container {\n  width: 100vw;\n  max-width: 100vw;\n  margin: 0;\n  padding: 0;\n}\n\n.admin-header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.admin-header-left h1 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n\n.admin-subtitle {\n  font-size: 14px;\n  opacity: 0.8;\n  margin-top: 4px;\n  display: block;\n}\n\n.admin-header-center {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n}\n\n.admin-nav {\n  display: flex;\n  gap: 15px;\n}\n\n.nav-btn {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.3s ease;\n}\n\n.nav-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.admin-header-right {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.admin-user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 4px;\n}\n\n.admin-name {\n  font-weight: 600;\n  font-size: 16px;\n}\n\n.admin-role {\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.admin-logout-btn {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.3s ease;\n}\n\n.admin-logout-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n@media (max-width: 768px) {\n  .admin-header-content {\n    flex-direction: column;\n    gap: 15px;\n    text-align: center;\n  }\n  \n  .admin-header-center {\n    order: 3;\n    width: 100%;\n  }\n  \n  .admin-nav {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  \n  .admin-header-right {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .admin-user-info {\n    align-items: center;\n  }\n}\n","size_bytes":2065},"frontend/src/components/AdminHeader.jsx":{"content":"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminHeader.css';\n\nconst AdminHeader = () => {\n  const navigate = useNavigate();\n  \n  const adminUser = JSON.parse(localStorage.getItem('adminUser') || '{}');\n  const isSuperAdmin = adminUser.role === 'super_admin';\n\n  const handleLogout = () => {\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminUser');\n    navigate('/admin-login');\n  };\n\n  const handleNavigation = (path) => {\n    navigate(path);\n  };\n\n  return (\n    <header className=\"admin-header\">\n      <div className=\"admin-header-content\">\n        <div className=\"admin-header-left\">\n          <h1>🎓 PMS Admin Panel</h1>\n          <span className=\"admin-subtitle\">Placement Management System</span>\n        </div>\n        \n        <div className=\"admin-header-center\">\n          <nav className=\"admin-nav\">\n            <button \n              className=\"nav-btn\"\n              onClick={() => handleNavigation('/admin-job-posting')}\n            >\n              📝 Job Management\n            </button>\n            {isSuperAdmin && (\n              <>\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => handleNavigation('/application-management')}\n                >\n                  📋 Application Management\n                </button>\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => handleNavigation('/admin-management')}\n                >\n                  🔧 Admin Management\n                </button>\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => handleNavigation('/admin-analytics')}\n                >\n                  📊 Analytics\n                </button>\n              </>\n            )}\n          </nav>\n        </div>\n        \n        <div className=\"admin-header-right\">\n          <div className=\"admin-user-info\">\n            <span className=\"admin-name\">👤 {adminUser.name || 'Admin'}</span>\n            <span className=\"admin-role\">\n              {isSuperAdmin ? '👑 Super Admin' : '🔑 Admin'}\n            </span>\n          </div>\n          <button onClick={handleLogout} className=\"admin-logout-btn\">\n            🚪 Logout\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default AdminHeader;\n","size_bytes":2368},"frontend/src/components/AdminJobPosting.css":{"content":"/* Main Container */\n.admin-job-posting-container {\n  width: 100vw;\n  max-width: 100vw;\n  margin: 0;\n  padding: 0;\n}\n\n.admin-content {\n  width: 100vw;\n  max-width: 100vw;\n  margin: 0;\n  padding: 0;\n}\n\n.admin-content h1 {\n  color: #2c3e50;\n  margin-bottom: 30px;\n  font-size: 32px;\n  font-weight: 700;\n  text-align: center;\n}\n\n/* Tabs */\n.admin-tabs {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n  gap: 10px;\n}\n\n.admin-tabs button {\n  padding: 12px 24px;\n  border: 2px solid #3498db;\n  background: white;\n  color: #3498db;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.admin-tabs button.active,\n.admin-tabs button:hover {\n  background: #3498db;\n  color: white;\n}\n\n/* Form Styles */\n.job-posting-form {\n  background: #181818;\n  padding: 32px;\n  border-radius: 12px;\n  box-shadow: 0 4px 24px rgba(255, 214, 0, 0.10);\n  color: #fff;\n}\n\n.form-section {\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #FFD60033;\n}\n\n.form-section h2 {\n  color: #FFD600;\n  margin-top: 0;\n  margin-bottom: 20px;\n  font-size: 20px;\n  letter-spacing: 0.5px;\n}\n\n.form-row {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 15px;\n}\n\n.form-group {\n  flex: 1;\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #FFD600;\n}\n\n.form-group input[type=\"text\"],\n.form-group input[type=\"email\"],\n.form-group input[type=\"date\"],\n.form-group input[type=\"file\"],\n.form-group select,\n.form-group textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1.5px solid #FFD60055;\n  border-radius: 6px;\n  font-size: 15px;\n  background: #222;\n  color: #fff;\n  transition: border 0.2s, background 0.2s;\n}\n\n.form-group input[type=\"text\"]:focus,\n.form-group input[type=\"email\"]:focus,\n.form-group input[type=\"date\"]:focus,\n.form-group select:focus,\n.form-group textarea:focus {\n  border: 1.5px solid #FFD600;\n  background: #181818;\n  outline: none;\n}\n\n.form-group textarea {\n  min-height: 80px;\n  resize: vertical;\n}\n\n.form-group input[type=\"file\"] {\n  padding: 5px;\n  background: #222;\n  color: #FFD600;\n}\n\n/* Enhanced Multi-Select Styles */\n.multi-select {\n  height: auto;\n  min-height: 100px;\n  padding: 5px;\n  background: #222;\n  color: #fff;\n  border: 1.5px solid #FFD60055;\n  border-radius: 6px;\n  transition: border 0.2s;\n}\n\n.multi-select:focus {\n  border: 1.5px solid #FFD600;\n  outline: none;\n}\n\n.multi-select option {\n  padding: 8px 12px;\n  background: #222;\n  color: #fff;\n  border-bottom: 1px solid #FFD60033;\n  transition: background 0.2s;\n}\n\n.multi-select option:hover {\n  background: #FFD600;\n  color: #181818;\n}\n\n.multi-select option:checked {\n  background: #FFD600;\n  color: #181818;\n  font-weight: bold;\n}\n\n/* Multi-select container for better styling */\n.multi-select-container {\n  position: relative;\n}\n\n.multi-select-container::after {\n  content: \"⌄\";\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  color: #FFD600;\n  pointer-events: none;\n}\n\n/* Logo Upload */\n.logo-upload {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.logo-preview {\n  width: 60px;\n  height: 60px;\n  object-fit: contain;\n  border: 2px solid #FFD600;\n  border-radius: 8px;\n  background: #222;\n}\n\n/* Form Actions */\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 15px;\n  margin-top: 30px;\n}\n\n.submit-btn {\n  background: linear-gradient(90deg, #FFD600 0%, #FFEA00 100%);\n  color: #181818;\n  border: none;\n  padding: 12px 32px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 600;\n  transition: background 0.2s, color 0.2s, box-shadow 0.2s;\n  box-shadow: 0 2px 8px rgba(255, 214, 0, 0.10);\n  letter-spacing: 0.5px;\n}\n\n.submit-btn:hover {\n  background: #FFD600;\n  color: #111;\n  box-shadow: 0 4px 24px rgba(255, 214, 0, 0.18);\n}\n\n.cancel-btn {\n  background: #181818;\n  color: #FFD600;\n  border: 2px solid #FFD600;\n  padding: 12px 32px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 600;\n  transition: background 0.2s, color 0.2s, border 0.2s;\n}\n\n.cancel-btn:hover {\n  background: #FFD600;\n  color: #181818;\n  border: 2px solid #FFD600;\n}\n\n/* Job Postings List */\n.job-postings-list {\n  background: #181818;\n  padding: 32px;\n  border-radius: 12px;\n  box-shadow: 0 4px 24px rgba(255, 214, 0, 0.10);\n  color: #fff;\n}\n\n.job-postings-list h2 {\n  margin-top: 0;\n  color: #FFD600;\n  margin-bottom: 20px;\n}\n\n.no-postings {\n  text-align: center;\n  padding: 40px;\n  color: #FFD60099;\n  font-style: italic;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  background: #181818;\n  color: #fff;\n}\n\ntable th,\ntable td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid #FFD60033;\n}\n\ntable th {\n  background-color: #222;\n  font-weight: 600;\n  color: #FFD600;\n}\n\ntable tr:hover {\n  background-color: #222;\n}\n\n.company-cell {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.company-logo-small {\n  width: 30px;\n  height: 30px;\n  object-fit: contain;\n  border-radius: 50%;\n  background: #222;\n  border: 1.5px solid #FFD600;\n}\n\n/* Badge styles for eligibility tags */\n.eligibility-badge {\n  display: inline-block;\n  background: #FFD60022;\n  color: #FFD600;\n  padding: 3px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  margin: 2px;\n  border: 1px solid #FFD60033;\n}\n\n/* Action Buttons */\n.edit-btn {\n  background: #FFD600;\n  color: #181818;\n  border: none;\n  padding: 7px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  transition: background 0.2s, color 0.2s;\n}\n\n.edit-btn:hover {\n  background: #181818;\n  color: #FFD600;\n  border: 1.5px solid #FFD600;\n}\n\n.delete-btn {\n  background: #e74c3c;\n  color: #fff;\n  border: none;\n  padding: 7px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  transition: background 0.2s, color 0.2s;\n}\n\n.delete-btn:hover {\n  background: #FFD600;\n  color: #e74c3c;\n  border: 1.5px solid #e74c3c;\n}\n\n/* Checkbox Grid Styles */\n.checkbox-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 15px;\n  padding: 15px;\n  background: #222;\n  border-radius: 8px;\n  border: 1.5px solid #FFD60055;\n}\n\n.checkbox-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  padding: 8px 12px;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  background: #2a2a2a;\n  border: 1px solid transparent;\n}\n\n.checkbox-item:hover {\n  background: #FFD60020;\n  border-color: #FFD60050;\n}\n\n.checkbox-item input[type=\"checkbox\"] {\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid #FFD600;\n  border-radius: 3px;\n  background: #222;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n}\n\n.checkbox-item input[type=\"checkbox\"]:checked {\n  background: #FFD600;\n  border-color: #FFD600;\n}\n\n.checkbox-item input[type=\"checkbox\"]:checked::after {\n  content: \"✓\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: #181818;\n  font-weight: bold;\n  font-size: 12px;\n}\n\n.checkbox-label {\n  color: #fff;\n  font-size: 14px;\n  font-weight: 500;\n  user-select: none;\n}\n\n.checkbox-item:has(input:checked) .checkbox-label {\n  color: #FFD600;\n  font-weight: 600;\n}\n\n.selected-items {\n  margin-top: 10px;\n  padding: 10px;\n  background: #FFD60010;\n  border-radius: 6px;\n  border-left: 3px solid #FFD600;\n}\n\n.selected-label {\n  color: #FFD600;\n  font-weight: 600;\n  margin-right: 8px;\n}\n\n.selected-items {\n  color: #fff;\n  font-size: 14px;\n}\n\n/* Selection Controls */\n.selection-controls {\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.select-all-btn {\n  background: #FFD600;\n  color: #181818;\n  border: none;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.select-all-btn:hover {\n  background: #ffdd00;\n  transform: translateY(-1px);\n}\n\n/* Responsive Styles */\n@media (max-width: 900px) {\n  .job-posting-form,\n  .job-postings-list {\n    padding: 18px;\n  }\n  \n  .form-row {\n    flex-wrap: wrap;\n  }\n  \n  .form-group {\n    min-width: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .form-row {\n    flex-direction: column;\n    gap: 0;\n  }\n\n  .form-actions {\n    justify-content: center;\n  }\n\n  table {\n    display: block;\n    overflow-x: auto;\n  }\n  \n  /* Adjust multi-select on mobile */\n  .multi-select {\n    min-height: 80px;\n  }\n}\n\n@media (max-width: 480px) {\n  .admin-tabs {\n    flex-direction: column;\n  }\n\n  .admin-tabs button {\n    width: 100%;\n    text-align: left;\n    border-bottom: none;\n    border-left: 3px solid transparent;\n  }\n\n  .admin-tabs button.active {\n    border-bottom: none;\n    border-left: 3px solid #FFD600;\n  }\n\n  .form-actions {\n    flex-direction: column;\n  }\n\n  .submit-btn, .cancel-btn {\n    width: 100%;\n  }\n  \n  /* Stack eligibility badges on small screens */\n  .eligibility-badges-container {\n    display: flex;\n    flex-wrap: wrap;\n  }\n}","size_bytes":8962},"frontend/src/components/AdminJobPosting.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport './AdminJobPosting.css';\nimport { API_ENDPOINTS } from '../config/api';\nimport AdminHeader from './AdminHeader';\nimport { getAllJobs, createJob, updateJob, deleteJob } from '../../api/jobs';\n\nconst initialForm = {\n  companyName: '',\n  companyLogo: '',\n  companyWebsite: '',\n  position: '',\n  jobType: 'Full-time',\n  salaryPackage: '',\n  location: '',\n  applicationDeadline: '',\n  jobDescription: '',\n  skillsRequired: '',\n  selectionProcess: '',\n  bondDetails: '',\n  benefits: '',\n  contactPerson: '',\n  contactEmail: '',\n  contactPhone: '',\n  driveDate: '',\n  additionalInfo: '',\n  eligibleCourses: [],\n  eligibleBranches: [],\n  eligibleYears: []\n};\n\n// Add these arrays for dropdown options\nconst COURSES = ['BSc.CS', 'MSc.CS', 'MSc.AIML', 'MCA'];\nconst BRANCHES = ['WD', 'AIML'];\nconst YEARS = [ '2024', '2025', '2026', '2027'];\n\nconst AdminJobPosting = () => {\n  const [jobPostings, setJobPostings] = useState([]);\n  const [formData, setFormData] = useState(initialForm);\n  const [logoPreview, setLogoPreview] = useState('');\n  const [logoFile, setLogoFile] = useState(null);\n  const [editId, setEditId] = useState(null);\n  const [activeTab, setActiveTab] = useState('create');\n\n  // Fetch jobs from backend\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const jobs = await getAllJobs();\n        setJobPostings(jobs);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n        alert('Error loading job postings');\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  // Handle checkbox change for multiple selections\n  const handleCheckboxChange = (field, value) => {\n    const currentValues = formData[field] || [];\n    const updatedValues = currentValues.includes(value)\n      ? currentValues.filter(item => item !== value)\n      : [...currentValues, value];\n    \n    setFormData({\n      ...formData,\n      [field]: updatedValues\n    });\n  };\n\n  // Handle select all/clear all for multiple selections\n  const handleSelectAll = (field, options) => {\n    const currentValues = formData[field] || [];\n    const allSelected = options.every(option => currentValues.includes(option));\n    \n    setFormData({\n      ...formData,\n      [field]: allSelected ? [] : options\n    });\n  };\n\n  const handleLogoUpload = (e) => {\n  const file = e.target.files[0];\n  if (file) {\n    setLogoPreview(URL.createObjectURL(file));\n    setLogoFile(file);\n    \n    // Also update the formData with the filename for consistency\n    setFormData(prev => ({\n      ...prev,\n      companyLogo: file.name // Store the filename\n    }));\n  }\n}; \n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    console.log('Form submit - editId:', editId);\n    console.log('Form submit - formData:', formData);\n    \n    // Validate required fields\n    if (formData.eligibleCourses.length === 0) {\n      alert('Please select at least one eligible course.');\n      return;\n    }\n    if (formData.eligibleYears.length === 0) {\n      alert('Please select at least one eligible year.');\n      return;\n    }\n    \n    try {\n      let job;\n      \n      if (editId) {\n        job = await updateJob(editId, formData);\n        setJobPostings(jobPostings.map(j => j._id === editId ? job : j));\n        alert('Job updated successfully!');\n        setActiveTab('manage');\n      } else {\n        job = await createJob(formData);\n        setJobPostings([...jobPostings, job]);\n        alert('Job created successfully!');\n      }\n      \n      setEditId(null);\n      setFormData(initialForm);\n      setLogoPreview('');\n      setLogoFile(null);\n    } catch (error) {\n      console.error('Error saving job:', error);\n      alert('Error saving job. Please try again.');\n    }\n  };\n  const handleSuccess = (job) => {\n    console.log('handleSuccess called with:', job); // Debug log\n    \n    if (editId) {\n      setJobPostings(jobPostings.map(j => j._id === editId ? job : j));\n      alert('Job updated successfully!');\n      setActiveTab('manage'); // Switch back to manage tab after edit\n    } else {\n      setJobPostings([...jobPostings, job]);\n      alert('Job created successfully!');\n    }\n    \n    setEditId(null);\n    setFormData(initialForm);\n    setLogoPreview('');\n    setLogoFile(null);\n  };\n\n  const handleError = (err) => {\n    console.error('Error saving job:', err);\n    alert('Error saving job. Please try again.');\n  };\n  const handleEdit = (job) => {\n    console.log('Editing job:', job); // Debug log\n    \n    // Ensure arrays are properly handled\n    const editFormData = {\n      ...job,\n      eligibleCourses: Array.isArray(job.eligibleCourses) ? job.eligibleCourses : [],\n      eligibleBranches: Array.isArray(job.eligibleBranches) ? job.eligibleBranches : [],\n      eligibleYears: Array.isArray(job.eligibleYears) ? job.eligibleYears : [],\n    };\n    \n    console.log('Form data for edit:', editFormData); // Debug log\n    \n    setFormData(editFormData);\n    setEditId(job._id);\n    setActiveTab('create');\n    \n    // Handle logo preview\n    if (job.companyLogo) {\n      setLogoPreview(`${API_ENDPOINTS.UPLOADS}${job.companyLogo}`);\n    } else {\n      setLogoPreview('');\n    }\n    setLogoFile(null);\n  };\n\n  const handleDelete = async (jobId) => {\n    try {\n      await deleteJob(jobId);\n      setJobPostings(jobPostings.filter(job => job._id !== jobId));\n      alert('Job deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting job:', error);\n      alert('Error deleting job. Please try again.');\n    }\n  };\n  const handleCancel = () => {\n    console.log('Cancel button clicked'); // Debug log\n    setEditId(null);\n    setFormData(initialForm);\n    setLogoPreview('');\n    setLogoFile(null);\n    setActiveTab('manage');\n  };\n  // Handle tab changes\n  const handleTabChange = (tab) => {\n    if (tab === 'manage' && editId) {\n      // If switching to manage tab while editing, reset edit state\n      setEditId(null);\n      setFormData(initialForm);\n      setLogoPreview('');\n      setLogoFile(null);\n    }\n    setActiveTab(tab);\n  };\n\n  return (\n    <div className=\"admin-job-posting-container\">\n      <AdminHeader />\n      <div className=\"admin-content\">\n        <h1>Job Posting Management</h1>\n        <div className=\"admin-tabs\">\n          <button\n            className={activeTab === 'create' ? 'active' : ''}\n            onClick={() => handleTabChange('create')}\n          >\n            {editId ? 'Edit Job Posting' : 'Create New Job Posting'}\n          </button>\n          <button\n            className={activeTab === 'manage' ? 'active' : ''}\n            onClick={() => handleTabChange('manage')}\n          >\n            Manage Job Postings\n          </button>\n        </div>\n\n        {activeTab === 'create' ? (\n          <form onSubmit={handleSubmit} className=\"job-posting-form\" encType=\"multipart/form-data\">\n\n\n            <div className=\"form-section\">\n              <h2 >Company Information</h2>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Company Name*</label>\n                  <input\n                    type=\"text\"\n                    name=\"companyName\"\n                    value={formData.companyName}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Company Logo</label>\n                  <div className=\"logo-upload\">\n                    {logoPreview && (\n                      <img src={logoPreview} alt=\"Company Logo Preview\" className=\"logo-preview\" />\n                    )}\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleLogoUpload}\n                    />\n                  </div>              </div>\n                <div className=\"form-group\">\n                  <label>Company Website</label>\n                  <input\n                    type=\"url\"\n                    name=\"companyWebsite\"\n                    value={formData.companyWebsite}\n                    onChange={handleInputChange}\n                    placeholder=\"https://www.company.com\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Contact Person*</label>\n                  <input\n                    type=\"text\"\n                    name=\"contactPerson\"\n                    value={formData.contactPerson}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Contact Email*</label>\n                  <input\n                    type=\"email\"\n                    name=\"contactEmail\"\n                    value={formData.contactEmail}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Contact Phone</label>\n                  <input\n                    type=\"text\"\n                    name=\"contactPhone\"\n                    value={formData.contactPhone}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"form-section\">\n              <h2>Job Details</h2>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Position Title*</label>\n                  <input\n                    type=\"text\"\n                    name=\"position\"\n                    value={formData.position}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Job Type*</label>\n                  <select\n                    name=\"jobType\"\n                    value={formData.jobType}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"Full-time\">Full-time</option>\n                    <option value=\"Part-time\">Part-time</option>\n                    <option value=\"Internship\">Internship</option>\n                    <option value=\"Contract\">Contract</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Salary Package*</label>\n                  <input\n                    type=\"text\"\n                    name=\"salaryPackage\"\n                    value={formData.salaryPackage}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Location*</label>\n                  <input\n                    type=\"text\"\n                    name=\"location\"\n                    value={formData.location}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Drive Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"driveDate\"\n                    value={formData.driveDate}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Application Deadline*</label>\n                  <input\n                    type=\"date\"\n                    name=\"applicationDeadline\"\n                    value={formData.applicationDeadline}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"form-section\">\n              <h2>Job Requirements</h2>\n              <div className=\"form-group\">\n                <label>Job Description*</label>\n                <textarea\n                  name=\"jobDescription\"\n                  value={formData.jobDescription}\n                  onChange={handleInputChange}\n                  required\n                  rows=\"5\"\n                />\n              </div>\n\n<div className=\"form-section\">\n  <h2>Eligibility Details</h2>\n  <div className=\"form-row\">    <div className=\"form-group\">\n      <label>Eligible Courses*</label>\n      <div className=\"selection-controls\">\n        <button \n          type=\"button\" \n          className=\"select-all-btn\"\n          onClick={() => handleSelectAll('eligibleCourses', COURSES)}\n        >\n          {formData.eligibleCourses.length === COURSES.length ? 'Clear All' : 'Select All'}\n        </button>\n      </div>\n      <div className=\"checkbox-grid\">\n        {COURSES.map(course => (\n          <label key={course} className=\"checkbox-item\">\n            <input\n              type=\"checkbox\"\n              checked={formData.eligibleCourses.includes(course)}\n              onChange={() => handleCheckboxChange('eligibleCourses', course)}\n            />\n            <span className=\"checkbox-label\">{course}</span>\n          </label>\n        ))}\n      </div>\n      {formData.eligibleCourses.length > 0 && (\n        <div className=\"selected-items\">\n          <span className=\"selected-label\">Selected: </span>\n          {formData.eligibleCourses.join(', ')}\n        </div>\n      )}\n    </div>\n  </div>\n  \n  <div className=\"form-row\">    <div className=\"form-group\">\n      <label>Eligible Branches (for technical courses)</label>\n      <div className=\"selection-controls\">\n        <button \n          type=\"button\" \n          className=\"select-all-btn\"\n          onClick={() => handleSelectAll('eligibleBranches', BRANCHES)}\n        >\n          {formData.eligibleBranches.length === BRANCHES.length ? 'Clear All' : 'Select All'}\n        </button>\n      </div>\n      <div className=\"checkbox-grid\">\n        {BRANCHES.map(branch => (\n          <label key={branch} className=\"checkbox-item\">\n            <input\n              type=\"checkbox\"\n              checked={formData.eligibleBranches.includes(branch)}\n              onChange={() => handleCheckboxChange('eligibleBranches', branch)}\n            />\n            <span className=\"checkbox-label\">{branch}</span>\n          </label>\n        ))}\n      </div>\n      {formData.eligibleBranches.length > 0 && (\n        <div className=\"selected-items\">\n          <span className=\"selected-label\">Selected: </span>\n          {formData.eligibleBranches.join(', ')}\n        </div>\n      )}\n    </div>\n  </div>\n  \n  <div className=\"form-row\">    <div className=\"form-group\">\n      <label>Eligible Years*</label>\n      <div className=\"selection-controls\">\n        <button \n          type=\"button\" \n          className=\"select-all-btn\"\n          onClick={() => handleSelectAll('eligibleYears', YEARS)}\n        >\n          {formData.eligibleYears.length === YEARS.length ? 'Clear All' : 'Select All'}\n        </button>\n      </div>\n      <div className=\"checkbox-grid\">\n        {YEARS.map(year => (\n          <label key={year} className=\"checkbox-item\">\n            <input\n              type=\"checkbox\"\n              checked={formData.eligibleYears.includes(year)}\n              onChange={() => handleCheckboxChange('eligibleYears', year)}\n            />\n            <span className=\"checkbox-label\">{year}</span>\n          </label>\n        ))}\n      </div>\n      {formData.eligibleYears.length > 0 && (\n        <div className=\"selected-items\">\n          <span className=\"selected-label\">Selected: </span>\n          {formData.eligibleYears.join(', ')}\n        </div>\n      )}\n    </div>\n  </div>\n</div>\n\n            <div className=\"form-group\">\n              <label>Skills Required*</label>\n              <textarea\n                name=\"skillsRequired\"\n                value={formData.skillsRequired}\n                onChange={handleInputChange}\n                required\n                rows=\"3\"\n                placeholder=\"Enter skills separated by commas\"\n              />\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <h2>Additional Information</h2>\n            <div className=\"form-group\">\n              <label>Selection Process</label>\n              <textarea\n                name=\"selectionProcess\"\n                value={formData.selectionProcess}\n                onChange={handleInputChange}\n                rows=\"3\"\n                placeholder=\"e.g., Written Test, Technical Interview, HR Round\"\n              />\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Bond Details (if any)</label>\n                <input\n                  type=\"text\"\n                  name=\"bondDetails\"\n                  value={formData.bondDetails}\n                  onChange={handleInputChange}\n                  placeholder=\"e.g., 1 year bond with Rs. 50,000 penalty\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Benefits</label>\n                <input\n                  type=\"text\"\n                  name=\"benefits\"\n                  value={formData.benefits}\n                  onChange={handleInputChange}\n                  placeholder=\"e.g., Health insurance, PF, etc.\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label>Additional Information</label>\n              <textarea\n                name=\"additionalInfo\"\n                value={formData.additionalInfo}\n                onChange={handleInputChange}\n                rows=\"3\"\n              />\n            </div>\n          </div>\n\n\n\n          <div className=\"form-actions\">\n    <button type=\"submit\" className=\"submit-btn\">\n      {editId ? 'Update Job Posting' : 'Create Job Posting'}\n    </button>\n    {editId && (\n      <button\n        type=\"button\"\n        className=\"cancel-btn\"\n        onClick={handleCancel}\n      >\n        Cancel\n      </button>\n    )}\n  </div>\n</form>\n) : (\n<div className=\"job-postings-list\">\n  <h2>Manage Job Postings ({jobPostings.length})</h2>\n  {jobPostings.length === 0 ? (\n    <div className=\"no-postings\">\n      <p>No job postings created yet.</p>\n    </div>\n  ) : (\n    <table>\n      <thead>\n        <tr>\n          <th>Company</th>\n          <th>Position</th>\n          <th>Job Type</th>\n          <th>Package</th>\n          <th>Eligible Courses</th>\n          <th>Eligible Years</th>\n          <th>Deadline</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {jobPostings.map((posting) => (\n          <tr key={posting._id}>\n            <td>\n              <div className=\"company-cell\">\n                {posting.companyLogo && (\n                  <img \n                    src={\n                      posting.companyLogo.startsWith('http') \n                        ? posting.companyLogo \n                        : `${API_ENDPOINTS.UPLOADS}${posting.companyLogo}`\n                    }\n                    alt={posting.companyName}\n                    className=\"company-logo-small\"\n                    onError={(e) => {\n                      e.target.src = '/default-logo.png';\n                      e.target.onerror = null;\n                    }}\n                  />\n                )}\n                {posting.companyName}\n              </div>\n            </td>\n            <td>{posting.position || '-'}</td>\n            <td>{posting.jobType || '-'}</td>\n            <td>{posting.salaryPackage || '-'}</td>\n            <td>\n              {(posting.eligibleCourses?.join(', ') || 'None')}\n              {posting.eligibleBranches?.length > 0 && (\n                <span> ({posting.eligibleBranches.join(', ')})</span>\n              )}\n            </td>\n            <td>{posting.eligibleYears?.join(', ') || '-'}</td>\n            <td>\n              {posting.applicationDeadline \n                ? new Date(posting.applicationDeadline).toLocaleDateString() \n                : '-'}\n            </td>\n            <td>\n              <button\n                onClick={() => handleEdit(posting)}\n                className=\"edit-btn\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => {\n                  if (window.confirm('Are you sure you want to delete this job posting?')) {\n                    handleDelete(posting._id);\n                  }\n                }}\n                className=\"delete-btn\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )}\n</div>\n)}\n</div>\n</div>\n);\n};\n\nexport default AdminJobPosting;","size_bytes":21067},"frontend/src/components/AdminLogin.css":{"content":".admin-login-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 24px;\n  background:\n    radial-gradient(closest-side, rgba(37, 99, 235, 0.12), transparent 70%)\n      50% -80px / 640px 320px no-repeat,\n    linear-gradient(to bottom, transparent, var(--color-bg-muted));\n}\n\n.admin-login-card {\n  background: var(--color-surface);\n  color: var(--color-text);\n  border-radius: 12px;\n  box-shadow: var(--elev-2);\n  padding: 32px;\n  width: 100%;\n  max-width: 420px;\n  text-align: center;\n  border: 1px solid var(--color-border);\n  backdrop-filter: saturate(140%) blur(2px);\n}\n\n.admin-login-header h1 {\n  color: var(--color-text);\n  margin-bottom: 8px;\n  font-size: 28px;\n  font-weight: 700;\n}\n\n.admin-login-header p {\n  color: var(--color-text-muted);\n  margin-bottom: 24px;\n  font-size: 14px;\n}\n\n.admin-login-form {\n  text-align: left;\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  color: var(--color-text);\n  font-weight: 600;\n  font-size: 14px;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid var(--color-border);\n  border-radius: 8px;\n  font-size: 16px;\n  transition: border-color 150ms ease, box-shadow 150ms ease;\n  box-sizing: border-box;\n  background: var(--color-bg);\n  color: var(--color-text);\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.15);\n}\n\n.error-message {\n  background: rgba(239, 68, 68, 0.08);\n  color: #ef4444;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  font-size: 14px;\n  border: 1px solid rgba(239, 68, 68, 0.25);\n}\n\n.admin-login-btn {\n  width: 100%;\n  background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-700) 100%);\n  color: white;\n  border: none;\n  padding: 12px 14px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: transform 150ms ease, box-shadow 150ms ease, filter 150ms ease;\n  margin-top: 8px;\n  box-shadow: var(--elev-1);\n}\n\n.admin-login-btn:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: var(--elev-2);\n  filter: saturate(1.05);\n}\n\n.admin-login-btn:disabled {\n  opacity: 0.65;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.admin-login-footer {\n  margin-top: 24px;\n  padding-top: 16px;\n  border-top: 1px solid var(--color-border);\n}\n\n.admin-login-footer p {\n  color: var(--color-text-muted);\n  font-size: 13px;\n  margin: 0;\n}\n\n@media (max-width: 480px) {\n  .admin-login-card {\n    padding: 24px 20px;\n  }\n  .admin-login-header h1 {\n    font-size: 24px;\n  }\n}\n\n","size_bytes":2637},"frontend/src/components/AdminLogin.jsx":{"content":"\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signin } from '../../api/auth';\nimport { toast } from 'react-hot-toast';\nimport Header from './Header';\n\nconst AdminLogin = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  setError(''); // Clear error when user types\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      console.log('Attempting login with:', formData);\n      const response = await signin(formData);\n      console.log('Login response:', response);\n      \n      // Check if user has admin role\n      if (response.user && (response.user.role === 'admin' || response.user.role === 'super_admin')) {\n        console.log('Admin login successful, redirecting to:', '/admin-job-posting');\n        console.log('User role:', response.user.role);\n        toast.success('Welcome, admin! Redirecting...');\n        // Token and user info are already stored in auth.js\n        // Redirect to admin dashboard\n        navigate('/admin-job-posting');\n        // Fallback navigation if React Router doesn't work\n        setTimeout(() => {\n          if (window.location.pathname !== '/admin-job-posting') {\n            console.log('React Router navigation failed, using window.location');\n            window.location.href = '/admin-job-posting';\n          }\n        }, 1000);\n      } else {\n        console.log('Access denied - user role:', response.user?.role);\n        const msg = 'Access denied. Admin privileges required.';\n        setError(msg);\n        toast.error(msg);\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      const errorMessage = err?.response?.data?.error || 'Login failed. Please try again.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen w-full bg-[var(--color-bg)]\">\n      <Header />\n      <div className=\"relative w-full flex items-center justify-center py-12 px-4 overflow-hidden\">\n        <div className=\"pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-[var(--color-bg-muted)]\"></div>\n        <div className=\"pointer-events-none absolute -top-10 left-1/2 -translate-x-1/2 h-64 w-[40rem] rounded-full bg-[radial-gradient(closest-side,_rgba(37,99,235,0.25),_transparent)] blur-3xl\"></div>\n        <div className=\"w-full max-w-md bg-[var(--color-surface)] text-[var(--color-text)] shadow-[var(--elev-2)] rounded-[var(--radius-lg)] border border-[var(--color-border)] p-6 sm:p-8 relative\">\n          <div className=\"flex flex-col items-center gap-2 mb-6\">\n            <img src=\"/default-logo.png\" alt=\"Logo\" className=\"h-10 w-10 rounded-md\" />\n            <h1 className=\"text-2xl font-semibold tracking-tight\">Admin Login</h1>\n            <p className=\"text-sm text-[var(--color-text-muted)]\">Access the Placement Management System</p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {error && (\n              <div className=\"text-sm text-red-500\" role=\"alert\">{error}</div>\n            )}\n            <div className=\"flex flex-col gap-1.5\">\n              <label htmlFor=\"email\" className=\"text-sm font-medium\">Email Address</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n                placeholder=\"admin@example.com\"\n                className=\"h-11 px-3 rounded-md bg-[var(--color-bg)] border border-[var(--color-border)] focus:outline-none focus:ring-2 focus:ring-[var(--color-primary)]\"\n              />\n            </div>\n            <div className=\"flex flex-col gap-1.5\">\n              <label htmlFor=\"password\" className=\"text-sm font-medium\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                required\n                placeholder=\"••••••••\"\n                className=\"h-11 px-3 rounded-md bg-[var(--color-bg)] border border-[var(--color-border)] focus:outline-none focus:ring-2 focus:ring-[var(--color-primary)]\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full h-11 rounded-md bg-[var(--color-primary)] hover:bg-[var(--color-primary-700)] text-white font-medium shadow-[var(--elev-1)] disabled:opacity-60\"\n              disabled={loading}\n            >\n              {loading ? 'Signing In...' : 'Sign In'}\n            </button>\n          </form>\n\n          <div className=\"mt-6 text-center text-sm text-[var(--color-text-muted)]\">\n            <p>🔒 Secure access for authorized personnel only</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLogin;\n","size_bytes":5288},"frontend/src/components/AdminManagement.css":{"content":".admin-management-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px;\n}\n\n.admin-management-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.admin-management-header h1 {\n  color: #2c3e50;\n  margin: 0;\n  font-size: 32px;\n  font-weight: 700;\n}\n\n.invite-admin-btn {\n  background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.invite-admin-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(39, 174, 96, 0.3);\n}\n\n.error-message {\n  background: #fee;\n  color: #c53030;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  border: 1px solid #feb2b2;\n}\n\n.success-message {\n  background: #f0fff4;\n  color: #2f855a;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  border: 1px solid #9ae6b4;\n}\n\n.invite-form-container {\n  background: white;\n  border-radius: 12px;\n  padding: 30px;\n  margin-bottom: 30px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.invite-form-container h2 {\n  color: #2c3e50;\n  margin-bottom: 20px;\n  font-size: 24px;\n}\n\n.invite-form {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group label {\n  margin-bottom: 8px;\n  color: #333;\n  font-weight: 600;\n  font-size: 14px;\n}\n\n.form-group input,\n.form-group select {\n  padding: 12px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  transition: border-color 0.3s ease;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: #3498db;\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n}\n\n.form-actions {\n  grid-column: 1 / -1;\n  display: flex;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.submit-btn {\n  background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.submit-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(52, 152, 219, 0.3);\n}\n\n.cancel-btn {\n  background: #95a5a6;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.cancel-btn:hover {\n  background: #7f8c8d;\n}\n\n.admins-list h2 {\n  color: #2c3e50;\n  margin-bottom: 20px;\n  font-size: 24px;\n}\n\n.no-admins {\n  text-align: center;\n  padding: 40px;\n  color: #7f8c8d;\n  font-size: 18px;\n}\n\n.admins-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.admin-card {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.admin-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n}\n\n.admin-info h3 {\n  color: #2c3e50;\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.admin-email {\n  color: #7f8c8d;\n  margin: 0 0 12px 0;\n  font-size: 14px;\n}\n\n.admin-role {\n  display: inline-block;\n  padding: 4px 12px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 600;\n  margin-bottom: 12px;\n}\n\n.admin-role.super_admin {\n  background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);\n  color: white;\n}\n\n.admin-role.admin {\n  background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\n  color: white;\n}\n\n.admin-status {\n  color: #2c3e50;\n  margin: 0 0 15px 0;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.admin-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.toggle-status-btn {\n  background: #f39c12;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  flex: 1;\n}\n\n.toggle-status-btn:hover {\n  background: #e67e22;\n}\n\n.delete-admin-btn {\n  background: #e74c3c;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  flex: 1;\n}\n\n.delete-admin-btn:hover {\n  background: #c0392b;\n}\n\n.admin-management-loading {\n  text-align: center;\n  padding: 40px;\n  color: #7f8c8d;\n  font-size: 18px;\n}\n\n@media (max-width: 768px) {\n  .admin-management-header {\n    flex-direction: column;\n    gap: 20px;\n    text-align: center;\n  }\n  \n  .invite-form {\n    grid-template-columns: 1fr;\n  }\n  \n  .form-actions {\n    flex-direction: column;\n  }\n  \n  .admins-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .admin-actions {\n    flex-direction: column;\n  }\n}\n\n","size_bytes":4798},"frontend/src/components/AdminManagement.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport AdminHeader from './AdminHeader';\nimport './AdminManagement.css';\nimport { getAllAdmins, inviteAdmin, toggleAdminStatus, deleteAdmin } from '../../api/admin';\n\nconst AdminManagement = () => {\n  const [admins, setAdmins] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showInviteForm, setShowInviteForm] = useState(false);\n  const [inviteForm, setInviteForm] = useState({\n    name: '',\n    email: '',\n    role: 'admin'\n  });\n\n  useEffect(() => {\n    fetchAdmins();\n  }, []);\n\n  const fetchAdmins = async () => {\n    try {\n      const data = await getAllAdmins();\n      setAdmins(data || []);\n    } catch (err) {\n      setError(err.error || 'Error fetching admins');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInviteSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n\n    try {\n      const result = await inviteAdmin(inviteForm);\n      setSuccess(`Admin invitation sent successfully! Temporary password: ${result.user.tempPassword}`);\n      setInviteForm({ name: '', email: '', role: 'admin' });\n      setShowInviteForm(false);\n      fetchAdmins(); // Refresh the list\n    } catch (err) {\n      setError(err.error || 'Error sending invitation');\n    }\n  };\n\n  const handleToggleStatus = async (adminId, currentStatus) => {\n    try {\n      await toggleAdminStatus(adminId, currentStatus);\n      setSuccess('Admin status updated successfully!');\n      fetchAdmins(); // Refresh the list\n    } catch (err) {\n      setError(err.error || 'Error updating admin status');\n    }\n  };\n\n  const handleDeleteAdmin = async (adminId) => {\n    if (!window.confirm('Are you sure you want to delete this admin?')) {\n      return;\n    }\n\n    try {\n      await deleteAdmin(adminId);\n      setSuccess('Admin deleted successfully!');\n      fetchAdmins(); // Refresh the list\n    } catch (err) {\n      setError(err.error || 'Error deleting admin');\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInviteForm({\n      ...inviteForm,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"admin-management-container\">\n        <AdminHeader />\n        <div className=\"admin-management-loading\">Loading admins...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-management-container\">\n      <AdminHeader />\n      \n      <div className=\"admin-management-header\">\n        <h1>🔧 Admin Management</h1>\n        <button \n          className=\"invite-admin-btn\"\n          onClick={() => setShowInviteForm(!showInviteForm)}\n        >\n          {showInviteForm ? '❌ Cancel' : '➕ Invite New Admin'}\n        </button>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n\n      {showInviteForm && (\n        <div className=\"invite-form-container\">\n          <h2>📧 Invite New Admin</h2>\n          <form className=\"invite-form\" onSubmit={handleInviteSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={inviteForm.name}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter admin name\"\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={inviteForm.email}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter admin email\"\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"role\">Role</label>\n              <select\n                id=\"role\"\n                name=\"role\"\n                value={inviteForm.role}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"admin\">Admin</option>\n                <option value=\"super_admin\">Super Admin</option>\n              </select>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"submit-btn\">\n                📤 Send Invitation\n              </button>\n              <button \n                type=\"button\" \n                className=\"cancel-btn\"\n                onClick={() => setShowInviteForm(false)}\n              >\n                ❌ Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"admins-list\">\n        <h2>👥 Current Admins</h2>\n        \n        {admins.length === 0 ? (\n          <div className=\"no-admins\">\n            No admins found. Invite your first admin to get started!\n          </div>\n        ) : (\n          <div className=\"admins-grid\">\n            {admins.map((admin) => (\n              <div key={admin._id} className=\"admin-card\">\n                <div className=\"admin-info\">\n                  <h3>{admin.name}</h3>\n                  <p className=\"admin-email\">{admin.email}</p>\n                  <span className={`admin-role ${admin.role}`}>\n                    {admin.role === 'super_admin' ? '👑 Super Admin' : '🔑 Admin'}\n                  </span>\n                  <p className=\"admin-status\">\n                    Status: {admin.isActive ? '✅ Active' : '❌ Inactive'}\n                  </p>\n                </div>\n                \n                <div className=\"admin-actions\">\n                  <button\n                    className=\"toggle-status-btn\"\n                    onClick={() => handleToggleStatus(admin._id, admin.isActive)}\n                  >\n                    {admin.isActive ? '❌ Deactivate' : '✅ Activate'}\n                  </button>\n                  <button\n                    className=\"delete-admin-btn\"\n                    onClick={() => handleDeleteAdmin(admin._id)}\n                  >\n                    🗑️ Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminManagement;\n","size_bytes":6441},"frontend/src/components/ApplicationManagement.css":{"content":".application-management-container {\n  min-height: 100vh;\n  background-color: #f8f9fa;\n  padding: 20px;\n}\n\n.application-management-header {\n  background: white;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  margin-bottom: 30px;\n}\n\n.application-management-header h1 {\n  margin: 0 0 20px 0;\n  color: #2c3e50;\n  font-size: 2.5rem;\n  font-weight: 700;\n}\n\n.stats-overview {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.stat-card {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n}\n\n.stat-number {\n  font-size: 2rem;\n  font-weight: 700;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  font-size: 0.9rem;\n  opacity: 0.9;\n  text-transform: capitalize;\n}\n\n.filter-section {\n  background: white;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.filter-section label {\n  font-weight: 600;\n  color: #2c3e50;\n  font-size: 1.1rem;\n}\n\n.filter-section select {\n  padding: 10px 15px;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 1rem;\n  background: white;\n  color: #2c3e50;\n  min-width: 300px;\n  transition: border-color 0.3s ease;\n}\n\n.filter-section select:focus {\n  outline: none;\n  border-color: #667eea;\n}\n\n.applications-list {\n  background: white;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.applications-list h2 {\n  margin: 0 0 25px 0;\n  color: #2c3e50;\n  font-size: 1.8rem;\n  font-weight: 600;\n}\n\n.no-applications {\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n}\n\n.no-applications p {\n  font-size: 1.1rem;\n  margin: 0;\n}\n\n.applications-grid {\n  display: grid;\n  gap: 25px;\n}\n\n.application-card {\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  padding: 25px;\n  background: white;\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.application-card:hover {\n  border-color: #667eea;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);\n  transform: translateY(-2px);\n}\n\n.application-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #f8f9fa;\n}\n\n.applicant-info h3 {\n  margin: 0 0 8px 0;\n  color: #2c3e50;\n  font-size: 1.4rem;\n  font-weight: 600;\n}\n\n.applicant-email,\n.applicant-phone {\n  margin: 5px 0;\n  color: #6c757d;\n  font-size: 0.95rem;\n}\n\n.application-status {\n  display: flex;\n  align-items: center;\n}\n\n.status-badge {\n  padding: 8px 16px;\n  border-radius: 20px;\n  color: white;\n  font-weight: 600;\n  font-size: 0.9rem;\n  text-transform: capitalize;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n}\n\n.application-details {\n  margin-bottom: 20px;\n}\n\n.detail-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f8f9fa;\n}\n\n.detail-row:last-child {\n  border-bottom: none;\n}\n\n.detail-label {\n  font-weight: 600;\n  color: #495057;\n  font-size: 0.95rem;\n}\n\n.detail-value {\n  color: #2c3e50;\n  font-weight: 500;\n}\n\n.job-info {\n  background: #f8f9fa;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.job-info h4 {\n  margin: 0 0 10px 0;\n  color: #2c3e50;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.job-info p {\n  margin: 5px 0;\n  color: #495057;\n  font-size: 0.95rem;\n}\n\n.form-responses {\n  background: #f8f9fa;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.form-responses h4 {\n  margin: 0 0 10px 0;\n  color: #2c3e50;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.form-response {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 8px 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.form-response:last-child {\n  border-bottom: none;\n}\n\n.form-response strong {\n  color: #495057;\n  font-size: 0.9rem;\n  min-width: 120px;\n}\n\n.response-value {\n  color: #2c3e50;\n  font-weight: 500;\n  text-align: right;\n  max-width: 200px;\n  word-wrap: break-word;\n}\n\n.application-actions {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 20px;\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 2px solid #f8f9fa;\n}\n\n.status-update {\n  display: flex;\n  flex-direction: column;\n}\n\n.status-select {\n  padding: 10px 15px;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 1rem;\n  background: white;\n  color: #2c3e50;\n  transition: border-color 0.3s ease;\n}\n\n.status-select:focus {\n  outline: none;\n  border-color: #667eea;\n}\n\n.admin-notes {\n  display: flex;\n  flex-direction: column;\n}\n\n.admin-notes textarea {\n  padding: 12px;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 0.95rem;\n  font-family: inherit;\n  resize: vertical;\n  transition: border-color 0.3s ease;\n}\n\n.admin-notes textarea:focus {\n  outline: none;\n  border-color: #667eea;\n}\n\n.admin-notes textarea::placeholder {\n  color: #adb5bd;\n}\n\n.loading {\n  text-align: center;\n  padding: 60px 20px;\n  color: #6c757d;\n  font-size: 1.2rem;\n}\n\n.error-message {\n  background: #f8d7da;\n  color: #721c24;\n  padding: 15px 20px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #f5c6cb;\n  font-weight: 500;\n}\n\n.success-message {\n  background: #d4edda;\n  color: #155724;\n  padding: 15px 20px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #c3e6cb;\n  font-weight: 500;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .application-management-container {\n    padding: 15px;\n  }\n  \n  .application-management-header {\n    padding: 20px;\n  }\n  \n  .application-management-header h1 {\n    font-size: 2rem;\n  }\n  \n  .stats-overview {\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: 15px;\n  }\n  \n  .stat-number {\n    font-size: 1.5rem;\n  }\n  \n  .filter-section {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n  \n  .filter-section select {\n    min-width: auto;\n    width: 100%;\n  }\n  \n  .applications-list {\n    padding: 20px;\n  }\n  \n  .application-card {\n    padding: 20px;\n  }\n  \n  .application-header {\n    flex-direction: column;\n    gap: 15px;\n    align-items: flex-start;\n  }\n  \n  .application-actions {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n  \n  .detail-row {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 5px;\n  }\n  \n  .form-response {\n    flex-direction: column;\n    gap: 5px;\n  }\n  \n  .response-value {\n    text-align: left;\n    max-width: none;\n  }\n}\n\n@media (max-width: 480px) {\n  .application-management-header h1 {\n    font-size: 1.8rem;\n  }\n  \n  .stat-card {\n    padding: 15px;\n  }\n  \n  .stat-number {\n    font-size: 1.3rem;\n  }\n  \n  .application-card {\n    padding: 15px;\n  }\n}\n","size_bytes":6768},"frontend/src/components/ApplicationManagement.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport AdminHeader from './AdminHeader';\nimport './ApplicationManagement.css';\n\nconst ApplicationManagement = () => {\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [selectedJob, setSelectedJob] = useState('all');\n  const [jobs, setJobs] = useState([]);\n  const [stats, setStats] = useState({\n    totalApplications: 0,\n    statusBreakdown: []\n  });\n\n  // Fetch all applications\n  const fetchApplications = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const url = selectedJob === 'all' \n        ? '/api/applications' \n        : `/api/applications/job/${selectedJob}`;\n      \n      const response = await fetch(url, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setApplications(data);\n        setError('');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Failed to fetch applications');\n      }\n    } catch (err) {\n      setError('Error fetching applications');\n      console.error('Fetch applications error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch jobs for filter dropdown\n  const fetchJobs = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/jobs', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setJobs(data);\n      } else {\n        console.error('Failed to fetch jobs');\n      }\n    } catch (err) {\n      console.error('Error fetching jobs:', err);\n    }\n  };\n\n  // Fetch statistics\n  const fetchStats = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/applications/stats', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setStats({\n          totalApplications: data.totalApplications || 0,\n          statusBreakdown: data.statusBreakdown || []\n        });\n      } else {\n        console.error('Failed to fetch stats');\n      }\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n    }\n  };\n\n  // Update application status\n  const updateApplicationStatus = async (applicationId, status, adminNotes) => {\n    try {\n      const response = await fetch(`/api/applications/${applicationId}/status`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({ status, adminNotes })\n      });\n\n      if (response.ok) {\n        setSuccess('Application status updated successfully!');\n        // Clear success message after 3 seconds\n        setTimeout(() => setSuccess(''), 3000);\n        fetchApplications();\n        fetchStats();\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Failed to update status');\n      }\n    } catch (err) {\n      setError('Error updating application status');\n      console.error('Update status error:', err);\n    }\n  };\n\n  // Get status color\n  const getStatusColor = (status) => {\n    const colors = {\n      pending: '#f39c12',\n      shortlisted: '#3498db',\n      interviewed: '#9b59b6',\n      selected: '#27ae60',\n      rejected: '#e74c3c'\n    };\n    return colors[status?.toLowerCase()] || '#95a5a6';\n  };\n\n  // Get status icon\n  const getStatusIcon = (status) => {\n    const icons = {\n      pending: '⏳',\n      shortlisted: '📋',\n      interviewed: '👥',\n      selected: '✅',\n      rejected: '❌'\n    };\n    return icons[status?.toLowerCase()] || '❓';\n  };\n\n  // Format date\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Handle admin notes change\n  const handleAdminNotesChange = (applicationId, notes) => {\n    const updatedApplications = applications.map(app => \n      app._id === applicationId \n        ? { ...app, adminNotes: notes }\n        : app\n    );\n    setApplications(updatedApplications);\n  };\n\n  // Clear messages\n  const clearMessages = () => {\n    setError('');\n    setSuccess('');\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchJobs();\n    fetchStats();\n  }, []);\n\n  // Fetch applications when selectedJob changes\n  useEffect(() => {\n    fetchApplications();\n  }, [selectedJob]);\n\n  // Clear messages when they exist\n  useEffect(() => {\n    if (error || success) {\n      const timer = setTimeout(clearMessages, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error, success]);\n\n  if (loading) {\n    return (\n      <div className=\"application-management-container\">\n        <AdminHeader />\n        <div className=\"loading\">Loading applications...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"application-management-container\">\n      <AdminHeader />\n      \n      <div className=\"application-management-header\">\n        <h1>📋 Application Management</h1>\n        <div className=\"stats-overview\">\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">{stats.totalApplications}</div>\n            <div className=\"stat-label\">Total Applications</div>\n          </div>\n          {stats.statusBreakdown && stats.statusBreakdown.map((status) => (\n            <div key={status._id} className=\"stat-card\">\n              <div className=\"stat-number\">{status.count}</div>\n              <div className=\"stat-label\">{status._id}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={clearMessages} className=\"close-btn\">×</button>\n        </div>\n      )}\n      {success && (\n        <div className=\"success-message\">\n          {success}\n          <button onClick={clearMessages} className=\"close-btn\">×</button>\n        </div>\n      )}\n\n      <div className=\"filter-section\">\n        <label htmlFor=\"job-filter\">Filter by Job:</label>\n        <select\n          id=\"job-filter\"\n          value={selectedJob}\n          onChange={(e) => setSelectedJob(e.target.value)}\n        >\n          <option value=\"all\">All Jobs</option>\n          {jobs.map((job) => (\n            <option key={job._id} value={job._id}>\n              {job.position} - {job.companyName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"applications-list\">\n        <h2>Applications ({applications.length})</h2>\n        \n        {applications.length === 0 ? (\n          <div className=\"no-applications\">\n            <p>No applications found for the selected criteria.</p>\n          </div>\n        ) : (\n          <div className=\"applications-grid\">\n            {applications.map((application) => (\n              <div key={application._id} className=\"application-card\">\n                <div className=\"application-header\">\n                  <div className=\"applicant-info\">\n                    <h3>{application.applicantName || 'N/A'}</h3>\n                    <p className=\"applicant-email\">{application.applicantEmail || 'N/A'}</p>\n                    <p className=\"applicant-phone\">{application.applicantPhone || 'N/A'}</p>\n                  </div>\n                  <div className=\"application-status\">\n                    <span \n                      className=\"status-badge\"\n                      style={{ backgroundColor: getStatusColor(application.status) }}\n                    >\n                      {getStatusIcon(application.status)} {application.status || 'pending'}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"application-details\">\n                  <div className=\"detail-row\">\n                    <span className=\"detail-label\">Course:</span>\n                    <span className=\"detail-value\">{application.applicantCourse || 'N/A'}</span>\n                  </div>\n                  <div className=\"detail-row\">\n                    <span className=\"detail-label\">Year:</span>\n                    <span className=\"detail-value\">{application.applicantYear || 'N/A'}</span>\n                  </div>\n                  <div className=\"detail-row\">\n                    <span className=\"detail-label\">Branch:</span>\n                    <span className=\"detail-value\">{application.applicantBranch || 'N/A'}</span>\n                  </div>\n                  <div className=\"detail-row\">\n                    <span className=\"detail-label\">Applied:</span>\n                    <span className=\"detail-value\">{formatDate(application.appliedAt)}</span>\n                  </div>\n                </div>\n                \n                {application.jobId && (\n                  <div className=\"job-info\">\n                    <h4>Job Details</h4>\n                    <p><strong>Position:</strong> {application.jobId.position || 'N/A'}</p>\n                    <p><strong>Company:</strong> {application.jobId.companyName || 'N/A'}</p>\n                    <p><strong>Type:</strong> {application.jobId.campusType || 'N/A'}</p>\n                  </div>\n                )}\n                \n                {application.formResponses && application.formResponses.length > 0 && (\n                  <div className=\"form-responses\">\n                    <h4>Additional Information</h4>\n                    {application.formResponses.map((response, index) => (\n                      <div key={index} className=\"form-response\">\n                        <strong>{response.fieldLabel}:</strong>\n                        <span className=\"response-value\">\n                          {response.fieldType === 'checkbox' && Array.isArray(response.response)\n                            ? response.response.join(', ')\n                            : response.response || 'Not provided'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                <div className=\"application-actions\">\n                  <div className=\"status-update\">\n                    <select\n                      value={application.status || 'pending'}\n                      onChange={(e) => updateApplicationStatus(\n                        application._id, \n                        e.target.value, \n                        application.adminNotes || ''\n                      )}\n                      className=\"status-select\"\n                    >\n                      <option value=\"pending\">Pending</option>\n                      <option value=\"shortlisted\">Shortlisted</option>\n                      <option value=\"interviewed\">Interviewed</option>\n                      <option value=\"selected\">Selected</option>\n                      <option value=\"rejected\">Rejected</option>\n                    </select>\n                  </div>\n                  \n                  <div className=\"admin-notes\">\n                    <textarea\n                      placeholder=\"Add admin notes...\"\n                      value={application.adminNotes || ''}\n                      onChange={(e) => handleAdminNotesChange(application._id, e.target.value)}\n                      onBlur={() => updateApplicationStatus(\n                        application._id, \n                        application.status || 'pending', \n                        application.adminNotes || ''\n                      )}\n                      rows=\"2\"\n                    />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ApplicationManagement;","size_bytes":12148},"frontend/src/components/Contact.jsx":{"content":"import React, { useState, useEffect, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { MapPin, Phone, Mail, Clock, Send, CheckCircle, Users, Award, MessageSquare, Building } from \"lucide-react\";\nimport \"./contact.css\";\n\n// Executive Director\n// Import images correctly (adjust paths based on your actual file structure)\nimport hirenJoshi from \"../assets/faculties/hirenJoshi.webp\";\nimport jyotiPareek from \"../assets/faculties/jyotiPareek.webp\";\nimport jayPatel from \"../assets/faculties/jayPatel.webp\";\nimport hardikJoshi from \"../assets/faculties/hardikJoshi.webp\";\nimport jignaSatani from \"../assets/faculties/jignaSatani.webp\";\nimport suchitPurohit from \"../assets/faculties/suchitPurohit.webp\";\n// import chiragPujara from \"..//Assets/faculties/chiragPujara.webp\";\n// Executive Director\nconst executiveDirector = {\n  name: \"Dr. Hiren Joshi\",\n  title: \"Head of Director\",\n  photo:\n    hirenJoshi,\n  phone: \"+91-98765-00001\",\n  email: \"hiren.joshi@dcs.ac.in\",\n};\n\n// DCPD Team - 20 members\nconst dcpdTeam = [\n  \n    {\n    name: \"Dr. Jyoti Pareek\",\n    title: \"Course Coordinator\",\n    photo: jyotiPareek, // Use the imported image\n    phone: \"+91-98765-43210\",\n    email: \"jyotipareek@dcs.ac.in\",\n  },\n  {\n    name: \"Mr. Jay Patel\",\n    title: \"Senior DCS Trainer\",\n    photo: jayPatel, // Use the imported image\n    phone: \"+91-98765-12345\",\n    email: \"jay.patel@dcs.ac.in\",\n  },\n  {\n    name: \"Dr. Hardik Joshi\",\n    title: \"Senior DCS Trainer\",\n    photo:\n     hardikJoshi,\n    phone: \"+91-98765-67890\",\n    email: \"hardik.joshi@dcs.ac.in\",\n  },\n  {\n    name: \"Dr. Jigna Satani\",\n    title: \"Senior DCS Trainer\",\n    photo:\n      jignaSatani,\n    phone: \"+91-98765-24680\",\n    email: \"jigna.satani@dcs.ac.in\",\n  },\n  {\n    name: \"Dr. Suchit Purohit\",\n    title: \"Senior DCS Coordinator\",\n    photo:\n     suchitPurohit,\n    phone: \"+91-98765-11111\",\n    email: \"suchit.purohit@dcs.ac.in\",\n  },\n  {\n    name: \"Mr. Chirag Pujara\",\n    title: \"DCS Trainer\",\n    photo:\n      suchitPurohit,\n    phone: \"+91-98765-22222\",\n    email: \"chirag.pujara@dcs.ac.in\",\n  },\n  // {\n  //   name: \"Mr. Manish Verma\",\n  //   title: \"DCPD Assistant\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-33333\",\n  //   email: \"manish.verma@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Ms. Kavya Reddy\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1517841905240-472988babdf9?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-44444\",\n  //   email: \"kavya.reddy@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Mr. Deepak Yadav\",\n  //   title: \"DCPD Coordinator\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1507591064344-4c6ce005b128?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-55555\",\n  //   email: \"deepak.yadav@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Ms. Ritu Sharma\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-66666\",\n  //   email: \"ritu.sharma@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Mr. Vikash Gupta\",\n  //   title: \"DCPD Assistant\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1560250097-0b93528c311a?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-77777\",\n  //   email: \"vikash.gupta@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Ms. Sneha Singh\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-88888\",\n  //   email: \"sneha.singh@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Mr. Arjun Malhotra\",\n  //   title: \"DCPD Coordinator\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1595152772835-219674b2a8a6?w=200&h=200&fit=crop&crop=faces\",\n  //   phone: \"+91-98765-99999\",\n  //   email: \"arjun.malhotra@cgc.ac.in\",\n  // },\n\n  // {\n  //   name: \"Ms. Pooja Patel\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1580489944761-15a19d654956?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-10101\",\n  //   email: \"pooja.patel@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Mr. Karan Joshi\",\n  //   title: \"DCPD Assistant\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1582750433449-648ed127bb54?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-20202\",\n  //   email: \"karan.joshi@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Ms. Nisha Agarwal\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1664575602554-2087b04935a5?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-30303\",\n  //   email: \"nisha.agarwal@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Mr. Suresh Bansal\",\n  //   title: \"DCPD Coordinator\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-40404\",\n  //   email: \"suresh.bansal@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Ms. Meera Chopra\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1607746882042-944635dfe10e?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-50505\",\n  //   email: \"meera.chopra@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Mr. Rahul Mittal\",\n  //   title: \"DCPD Assistant\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1615813967515-e1838c1c5116?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-60606\",\n  //   email: \"rahul.mittal@cgc.ac.in\",\n  // },\n  // {\n  //   name: \"Ms. Sunita Devi\",\n  //   title: \"DCPD Trainer\",\n  //   photo:\n  //     \"https://images.unsplash.com/photo-1619895862022-09114b41f16f?w=200&h=200&fit=crop&crop=face\",\n  //   phone: \"+91-98765-70707\",\n  //   email: \"sunita.devi@cgc.ac.in\",\n  // },\n];\n\nfunction Contact() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isFormOpen, setIsFormOpen] = useState(true);\n  const [isFormExpanded, setIsFormExpanded] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const messageRef = useRef(null);\n\n  useEffect(() => {\n    if (isFormOpen) {\n      // Small delay to allow the form to render before expanding\n      setTimeout(() => {\n        setIsFormExpanded(true);\n      }, 10);\n    } else {\n      setIsFormExpanded(false);\n    }\n  }, [isFormOpen]);\n\n  useEffect(() => {\n    // Auto-expand textarea based on content\n    if (messageRef.current) {\n      messageRef.current.style.height = \"auto\";\n      messageRef.current.style.height = messageRef.current.scrollHeight + \"px\";\n    }\n  }, [formData.message]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n\n    // Real-time validation\n    if (errors[name]) {\n      validateField(name, value);\n    }\n  };\n\n  const validateField = (name, value) => {\n    let error = \"\";\n\n    switch (name) {\n      case \"name\":\n        if (!value.trim()) error = \"Name is required\";\n        else if (value.trim().length < 2)\n          error = \"Name must be at least 2 characters\";\n        break;\n      case \"email\":\n        if (!value.trim()) error = \"Email is required\";\n        else if (!/\\S+@\\S+\\.\\S+/.test(value)) error = \"Email is invalid\";\n        break;\n      case \"phone\":\n        if (!value.trim()) error = \"Phone number is required\";\n        else if (!/^[0-9+\\-\\s()]{10,}$/.test(value))\n          error = \"Phone number is invalid\";\n        break;\n      case \"subject\":\n        if (!value.trim()) error = \"Subject is required\";\n        else if (value.trim().length < 5)\n          error = \"Subject must be at least 5 characters\";\n        break;\n      case \"message\":\n        if (!value.trim()) error = \"Message is required\";\n        else if (value.trim().length < 10)\n          error = \"Message must be at least 10 characters\";\n        break;\n      default:\n        break;\n    }\n\n    setErrors({\n      ...errors,\n      [name]: error,\n    });\n\n    return !error;\n  };\n\n  const validateForm = () => {\n    let formErrors = {};\n    let isValid = true;\n\n    if (!validateField(\"name\", formData.name)) isValid = false;\n    if (!validateField(\"email\", formData.email)) isValid = false;\n    if (!validateField(\"phone\", formData.phone)) isValid = false;\n    if (!validateField(\"subject\", formData.subject)) isValid = false;\n    if (!validateField(\"message\", formData.message)) isValid = false;\n\n    return { isValid, formErrors: errors };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { isValid } = validateForm();\n    if (!isValid) {\n      toast.error(\"Please fix the errors in the form\");\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise((resolve) => setTimeout(resolve, 1500));\n\n      // Show success state\n      setIsSuccess(true);\n\n      // Show success notification\n      toast.success(\n        \"Your message has been sent successfully! We will get back to you soon.\"\n      );\n\n      // Reset form after delay\n      setTimeout(() => {\n        setFormData({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          subject: \"\",\n          message: \"\",\n        });\n        setErrors({});\n        setIsFormOpen(false);\n        setIsSuccess(false);\n        setCurrentStep(1);\n      }, 3000);\n    } catch (error) {\n      toast.error(\"Something went wrong. Please try again later.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const toggleForm = () => {\n    if (isSuccess) return; // Don't allow closing during success animation\n\n    setIsFormOpen(!isFormOpen);\n    if (isFormOpen) {\n      setIsFormExpanded(false);\n    }\n  };\n\n  const handleFocus = (e) => {\n    e.target.parentElement.classList.add(\"focused\");\n  };\n\n  const handleBlur = (e) => {\n    if (!e.target.value) {\n      e.target.parentElement.classList.remove(\"focused\");\n    }\n    validateField(e.target.name, e.target.value);\n  };\n\n  return (\n    <div className=\"contact-page\">\n\n      <div className=\"contact-hero\">\n        <h1>Contact Us</h1>\n        <p>\n          Get in touch with the DCS (Department of Computer Science) at GU Ahmedabad.\n          <br />\n          We are here to help you with all your placement and career queries.\n        </p>\n      </div>\n\n      <div className=\"contact-content-wrapper\">\n        <div className=\"contact-main-content\">\n          {/* Contact Info Section */}\n          <div className=\"contact-info\">\n            <div className=\"contact-card\">\n              <h2>General Contact</h2>\n              <p>\n                <span className=\"contact-label\">Address:</span> Gujarat University, Navranpura ,Ahmedabad, India\n              </p>\n              <p>\n                <span className=\"contact-label\">Phone:</span>{\" \"}\n                <a href=\"tel:+911234567890\">+91-8758129102</a>\n              </p>\n              <p>\n                <span className=\"contact-label\">Email:</span>{\" \"}\n                <a href=\"mailto:dcs@dcs.ac.in\">dcs@dcs.ac.in</a>\n              </p>\n              <p>\n                <span className=\"contact-label\">Website:</span>{\" \"}\n                <a\n                  href=\"https://www.dcs.ac.in/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  www.dcs.ac.in\n                </a>\n              </p>\n            </div>\n          </div>\n\n          {/* Executive Director Section */}\n          <div className=\"executive-section\">\n            <h2>Leadership</h2>\n            <div className=\"executive-card\">\n              <div className=\"photo-container\">\n                <img\n                  src={executiveDirector.photo}\n                  alt={executiveDirector.name}\n                  className=\"executive-photo\"\n                />\n                <div className=\"photo-overlay\"></div>\n              </div>\n              <div className=\"executive-info\">\n                <h3>{executiveDirector.name}</h3>\n                <p className=\"executive-title\">{executiveDirector.title}</p>\n                <div className=\"executive-contact\">\n                  <p>\n                    <span className=\"contact-label\">Phone:</span>{\" \"}\n                    <a href={`tel:${executiveDirector.phone}`}>\n                      {executiveDirector.phone}\n                    </a>\n                  </p>\n                  <p>\n                    <span className=\"contact-label\">Email:</span>{\" \"}\n                    <a href={`mailto:${executiveDirector.email}`}>\n                      {executiveDirector.email}\n                    </a>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* DCPD Team Section */}\n          <div className=\"team-section\">\n            <h2>Meet Our DCS Team</h2>\n            <div className=\"team-grid\">\n              {dcpdTeam.map((member, idx) => (\n                <div className=\"team-card\" key={idx}>\n                  <div className=\"photo-container photo-container-team\">\n                    <img\n                      src={member.photo}\n                      alt={member.name}\n                      className=\"team-photo\"\n                    />\n                    <div className=\"photo-overlay\"></div>\n                  </div>\n                  <h3>{member.name}</h3>\n                  <p className=\"team-title\">{member.title}</p>\n                  <div className=\"team-contact\">\n                    <p>\n                      <span className=\"contact-label\">Phone:</span>{\" \"}\n                      <a href={`tel:${member.phone}`}>{member.phone}</a>\n                    </p>\n                    <p>\n                      <span className=\"contact-label\">Email:</span>{\" \"}\n                      <a href={`mailto:${member.email}`}>{member.email}</a>\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Floating Contact Form */}\n      <div\n        className={`floating-contact-form ${isFormOpen ? \"open\" : \"\"} ${\n          isFormExpanded ? \"expanded\" : \"\"\n        } ${isSuccess ? \"success\" : \"\"}`}\n        onClick={!isFormOpen ? toggleForm : undefined}\n      >\n        {!isFormOpen ? (\n          <div className=\"floating-form-button\">\n            <span className=\"form-button-text\">Contact Us</span>\n            <span className=\"form-button-icon\">✉️</span>\n          </div>\n        ) : (\n          <div className=\"floating-form-header\" onClick={toggleForm}>\n            <span className=\"form-title\">Contact Us</span>\n            <span className=\"form-toggle-icon\">\n              {isSuccess ? \"🎉\" : \"✕\"}\n            </span>\n          </div>\n        )}\n\n        <div className=\"floating-form-content\">\n          {isSuccess ? (\n            <div className=\"success-animation\">\n              <div className=\"success-checkmark\">\n                <div className=\"check-icon\"></div>\n              </div>\n              <h3>Message Sent Successfully!</h3>\n              <p>We'll get back to you shortly.</p>\n              <div className=\"confetti\">\n                {[...Array(50)].map((_, i) => (\n                  <div key={i} className=\"confetti-piece\"></div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <>\n              <div className=\"form-progress\">\n                <div className=\"progress-steps\">\n                  {[1, 2, 3].map((step) => (\n                    <div\n                      key={step}\n                      className={`progress-step ${\n                        currentStep >= step ? \"active\" : \"\"\n                      }`}\n                    ></div>\n                  ))}\n                </div>\n              </div>\n\n              <h3>Send Us a Message</h3>\n              <form className=\"contact-form\" onSubmit={handleSubmit}>\n                <div className=\"form-group floating\">\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    className={errors.name ? \"error\" : \"\"}\n                    autoComplete=\"name\"\n                    placeholder=\" \"\n                  />\n                  <label htmlFor=\"name\">Full Name *</label>\n                  {errors.name && (\n                    <span className=\"error-message\">{errors.name}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group floating\">\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    className={errors.email ? \"error\" : \"\"}\n                    autoComplete=\"email\"\n                    placeholder=\" \"\n                  />\n                  <label htmlFor=\"email\">Email Address *</label>\n                  {errors.email && (\n                    <span className=\"error-message\">{errors.email}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group floating\">\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    className={errors.phone ? \"error\" : \"\"}\n                    autoComplete=\"tel\"\n                    placeholder=\" \"\n                  />\n                  <label htmlFor=\"phone\">Phone Number *</label>\n                  {errors.phone && (\n                    <span className=\"error-message\">{errors.phone}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group floating\">\n                  <input\n                    type=\"text\"\n                    id=\"subject\"\n                    name=\"subject\"\n                    value={formData.subject}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    className={errors.subject ? \"error\" : \"\"}\n                    placeholder=\" \"\n                  />\n                  <label htmlFor=\"subject\">Subject *</label>\n                  {errors.subject && (\n                    <span className=\"error-message\">{errors.subject}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group floating\">\n                  <textarea\n                    id=\"message\"\n                    name=\"message\"\n                    value={formData.message}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    className={errors.message ? \"error\" : \"\"}\n                    ref={messageRef}\n                    rows=\"3\"\n                    placeholder=\" \"\n                  ></textarea>\n                  <label htmlFor=\"message\">Message *</label>\n                  <div className=\"character-count\">\n                    {formData.message.length}/500\n                  </div>\n                  {errors.message && (\n                    <span className=\"error-message\">{errors.message}</span>\n                  )}\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"submit-bttn\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? (\n                    <>\n                      <span className=\"spinner\"></span>\n                      Sending...\n                    </>\n                  ) : (\n                    \"Send Message\"\n                  )}\n                </button>\n              </form>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;","size_bytes":20370},"frontend/src/components/Footer.jsx":{"content":"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  FaLinkedin,\n  FaGithub,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaPhone,\n  FaPaperPlane,\n} from \"react-icons/fa\";\nimport { FaXTwitter } from \"react-icons/fa6\";\nimport \"./footer.css\";\n\nfunction Footer() {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubscribe = async (e) => {\n    e.preventDefault();\n\n    if (!email) {\n      toast.error(\"Please enter your email\");\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      toast.error(\"Please enter a valid email\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const res = await axios.post(\n        \"http://localhost:5000/api/newsletter/subscribe\",\n        { email }\n      );\n\n      if (res.status === 200) {\n        toast.success(res.data.message || \"Subscribed successfully!\");\n        setEmail(\"\");\n      }\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.error) {\n        toast.error(err.response.data.error);\n      } else {\n        toast.error(\"Something went wrong. Try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <footer className=\"pms-footer\">\n      {/* Newsletter Section - Full Width */}\n      <div className=\"footer-newsletter-full\">\n        <div className=\"footer-container\">\n          <div className=\"footer-newsletter-content\">\n            <div className=\"footer-newsletter-text\">\n              <h3>Stay Updated</h3>\n              <p>\n                Get the latest job opportunities and news directly to your inbox\n              </p>\n            </div>\n            <form onSubmit={handleSubscribe} className=\"footer-newsletter-form\">\n              <div className=\"footer-newsletter-input-group\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Enter your email address\"\n                  className=\"footer-newsletter-input\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  type=\"submit\"\n                  className={`footer-newsletter-button ${\n                    loading ? \"loading\" : \"\"\n                  }`}\n                  disabled={loading}\n                >\n                  {loading ? \"Subscribing...\" : \"Subscribe\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"footer-container\">\n        {/* Top Section */}\n        <div className=\"footer-top\">\n          <div className=\"footer-brand\">\n            <h3 className=\"footer-logo\">\n              Campus<span>Recruitment</span>\n            </h3>\n            <p className=\"footer-tagline\">Bridging talent with opportunity</p>\n            {/* <div className=\"footer-social\">\n              <a href=\"https://www.linkedin.com/in/mohit-jadaun/\" aria-label=\"LinkedIn\">\n                <FaLinkedin />\n              </a>\n              <a href=\"https://x.com/\" aria-label=\"X\">\n                <FaXTwitter />\n              </a>\n              <a href=\"https://github.com/Mohitjadaun2026\" aria-label=\"GitHub\">\n                <FaGithub />\n              </a>\n              <a\n              href=\"https://mail.google.com/mail/?view=cm&fs=1&to=jadaunmohit0@gmail.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Email\"\n            >\n                <FaEnvelope />\n              </a>\n            </div> */}\n          </div>\n\n          <div className=\"footer-sections\">\n            <div className=\"footer-section\">\n              <h4 className=\"footer-heading\">Navigation</h4>\n              <ul className=\"footer-nav\">\n                <li>\n                  <a href=\"/\">Home</a>\n                </li>\n                <li>\n                  <a href=\"/about\">About Us</a>\n                </li>\n                <li>\n                  <a href=\"/jobs\">Job Listings</a>\n                </li>\n                <li>\n                  <a href=\"/profile\">My Profile</a>\n                </li>\n                <li>\n                  <a href=\"/admin-job-posting\">Post Jobs</a>\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"footer-section\">\n              <h4 className=\"footer-heading\">Legal</h4>\n              <ul className=\"footer-nav\">\n                <li>\n                  <a href=\"#privacy\">Privacy Policy</a>\n                </li>\n                <li>\n                  <a href=\"#terms\">Terms of Service</a>\n                </li>\n                <li>\n                  <a href=\"#cookies\">Cookie Policy</a>\n                </li>\n                {/* <li>\n                  <a href=\"#gdpr\">GU Compliance</a>\n                </li> */}\n              </ul>\n            </div>\n\n            <div className=\"footer-section\">\n              <h4 className=\"footer-heading\">Contact</h4>\n              <ul className=\"footer-contact\">\n                <li>\n                  <FaMapMarkerAlt className=\"contact-icon\" />\n                  <span>DCS Gujarat University, Ahmedabad</span>\n                </li>\n                <li>\n                  <FaEnvelope className=\"contact-icon\" />\n                  <span>contact@placementsystem.com</span>\n                </li>\n                <li>\n                  <FaPhone className=\"contact-icon phone\" />\n                  <span>+91 8758129102</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Divider */}\n        <div className=\"footer-divider\"></div>\n\n        {/* Bottom Section */}\n        <div className=\"footer-bottom\">\n          <div className=\"footer-copyright\">\n            &copy; {new Date().getFullYear()} Campus Recruitment Portal. All\n            rights reserved.\n          </div>\n          <div className=\"footer-cta\">\n            <a href=\"/signin\" className=\"footer-cta-button\">\n              Sign In\n            </a>\n            <a href=\"/contact\" className=\"outline\">\n              Contact Us\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","size_bytes":6291},"frontend/src/components/Header.jsx":{"content":"import React ,{useState, useEffect} from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// import { Moon, Sun } from \"lucide-react\";\nimport \"./header.css\";\nimport collegeLogo from \"../assets/gulogo2.png\"; // Make sure to add the logo to your assets folder\n\nfunction Header() {\n  const [theme, setTheme] = useState('light');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // On mount, load saved theme or system preference\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n      document.body.className = savedTheme;\n    } else {\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      const defaultTheme = prefersDark ? 'dark' : 'light';\n      setTheme(defaultTheme);\n      document.body.className = defaultTheme;\n    }\n\n    // Example: Check login status from localStorage or your auth provider\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\n    setIsLoggedIn(loggedIn);\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.setItem('isLoggedIn', 'false');\n    setIsLoggedIn(false);\n    // Optionally redirect to home or login page\n    window.location.href = '/';\n  };\n\n  // Theme toggle temporarily disabled\n\n  return (\n    <header className=\"pms-header\">\n      <div className=\"logo\">\n        <img \n          src={collegeLogo} \n          alt=\"College Logo\" \n          className=\"logo-image\"\n        />\n        <Link to=\"/\" className=\"logo-link\">\n          <span className=\"line1\">Campus Recruitment</span>\n          <span className=\"line2\">Portal</span>\n        </Link>\n      </div>\n      <nav className=\"nav-links\">\n          <NavLink to=\"/about\" className={({isActive}) => `nav-link${isActive ? ' active' : ''}`}>About</NavLink>\n          <NavLink to=\"/contact\" className={({isActive}) => `nav-link${isActive ? ' active' : ''}`}>Contact</NavLink>\n          <NavLink to=\"/jobs\" className={({isActive}) => `nav-link${isActive ? ' active' : ''}`}>Jobs</NavLink>\n          <NavLink to=\"/interview-experience\" className={({isActive}) => `nav-link${isActive ? ' active' : ''}`}>Interview Experience</NavLink>\n          \n          {/* Authentication Links */}\n          <div className=\"auth-dropdown\">\n            <span className=\"dropdown-trigger\">Login ▼</span>\n            <div className=\"dropdown-content\">\n              <Link to=\"/student-login\" className=\"dropdown-item\">Student Login</Link>\n              <Link to=\"/student-register\" className=\"dropdown-item\">Student Register</Link>\n              <Link to=\"/admin-login\" className=\"dropdown-item\">Admin Login</Link>\n            </div>\n          </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n\n// In your SignIn component (example)\nconst handleLogin = async (e) => {\n  e.preventDefault();\n  // ...login logic...\n  // On successful login:\n  localStorage.setItem('isLoggedIn', 'true');\n  window.location.href = '/'; // or use navigate('/')\n};\n","size_bytes":2973},"frontend/src/components/InterviewDetail.jsx":{"content":"import React from \"react\";\nimport \"./interviewExperience.css\";\n\nexport default function InterviewDetail({ experience, onBack }) {\n  if (!experience) return null;\n  return (\n    <div className=\"ie-detail-page fade-in\">\n      <button className=\"ie-back-btn\" onClick={onBack}>&larr; Back</button>\n      <div className=\"ie-detail-card\">\n        <h2 className=\"ie-detail-title\">{experience.company} - {experience.role}</h2>\n        <div className=\"ie-detail-meta\">\n          <span className=\"ie-detail-company\">Company: <b>{experience.company}</b></span>\n          <span className=\"ie-detail-role\">Role: <b>{experience.role}</b></span>\n        </div>\n        <div className=\"ie-detail-body\">\n          <h3>Full Experience</h3>\n          <p>{experience.experience}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":809},"frontend/src/components/InterviewExperience.jsx":{"content":"\nimport React, { useState } from \"react\";\nimport \"./interviewExperience.css\";\nimport InterviewDetail from \"./InterviewDetail\";\n\nconst dummyData = [\n  {\n    id: 1,\n    company: \"Google\",\n    role: \"SDE\",\n    experience:\n      \"I had three rounds: 1st was DSA (leetcode-style), 2nd was system design, 3rd was HR. The DSA round was tough but fair, with questions on trees and dynamic programming. The system design round focused on designing a URL shortener. The HR round was friendly and focused on my projects and teamwork. My advice: practice DSA daily and be ready to explain your thought process.\",\n  },\n  {\n    id: 2,\n    company: \"Microsoft\",\n    role: \"Intern\",\n    experience:\n    \"The process had an online assessment, followed by two interviews. The OA was mostly MCQs and a couple of coding questions. The interviews were focused on problem-solving and my resume projects. They really liked when I explained my approach step by step.\",\n  },\n  {\n    id: 3,\n    company: \"Amazon\",\n    role: \"SDE\",\n    experience:\n    \"There were two technical rounds and one bar-raiser. The first round was all about data structures, especially arrays and strings. The second round was a mix of coding and behavioral questions. \",\n  },\n  {\n    id: 4,\n    company: \"Goldman Sachs\",\n    role: \"Analyst\",\n    experience:\n    \"There was a hackerrank test, then a group discussion, and finally two interviews. The interviews were a mix of technical and HR. They asked about finance basics, puzzles, and my motivation for joining GS. Be confident and clear about why you want the role.\",\n  },\n  {\n    id: 5,\n    company: \"Google\",\n    role: \"SWE\",\n    experience:\n      \"The process was long but rewarding. Four rounds: two technical, one design, one HR. The technical rounds were deep on algorithms and data structures. The design round was about scaling a chat app. The HR round was about my teamwork and leadership experiences. Practice mock interviews!\",\n  },\n];\n\n\nexport default function InterviewExperience() {\n  const [view, setView] = useState(\"read\");\n  const [filter, setFilter] = useState({ company: \"\", role: \"\" });\n  const [experiences, setExperiences] = useState(dummyData);\n  const [form, setForm] = useState({ company: \"\", role: \"\", experience: \"\" });\n  const [selected, setSelected] = useState(null);\n\n  // Delete experience handler\n  const handleDelete = (id, e) => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to delete this experience?')) {\n      setExperiences(experiences.filter(exp => exp.id !== id));\n    }\n  };\n\n  const handleFilter = (e) => {\n    setFilter({ ...filter, [e.target.name]: e.target.value });\n  };\n\n  const filtered = experiences.filter(\n    (exp) =>\n      (!filter.company || exp.company.toLowerCase().includes(filter.company.toLowerCase())) &&\n      (!filter.role || exp.role.toLowerCase().includes(filter.role.toLowerCase()))\n  );\n\n  const handleFormChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    setExperiences([\n      ...experiences,\n      { ...form, id: experiences.length + 1 },\n    ]);\n    setForm({ company: \"\", role: \"\", experience: \"\" });\n    setView(\"read\");\n  };\n\n  if (selected) {\n    return <InterviewDetail experience={selected} onBack={() => setSelected(null)} />;\n  }\n\n  return (\n    <div className=\"interview-experience-page fade-in\">\n      <div className=\"ie-hero\">\n        <h2 className=\"ie-title\">Interview Experience Portal</h2>\n        <p className=\"ie-desc\">Share your interview journey or read others' experiences. Use the filters to find stories by company or role.</p>\n      </div>\n      <div className=\"ie-nav\">\n        <button className={view === \"add\" ? \"active\" : \"\"} onClick={() => setView(\"add\")}>Add Interview Experience</button>\n        <button className={view === \"read\" ? \"active\" : \"\"} onClick={() => setView(\"read\")}>Read Interview Experience</button>\n      </div>\n      {view === \"add\" && (\n        <form className=\"ie-form ie-form-redesign\" onSubmit={handleFormSubmit}>\n          <div className=\"ie-form-row\">\n            <div className=\"ie-form-group\">\n              <label htmlFor=\"company\">Company Name</label>\n              <input\n                id=\"company\"\n                name=\"company\"\n                placeholder=\"e.g. Google, Amazon\"\n                value={form.company}\n                onChange={handleFormChange}\n                required\n              />\n            </div>\n            <div className=\"ie-form-group\">\n              <label htmlFor=\"role\">Role</label>\n              <input\n                id=\"role\"\n                name=\"role\"\n                placeholder=\"e.g. SDE, Analyst\"\n                value={form.role}\n                onChange={handleFormChange}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"ie-form-group\">\n            <label htmlFor=\"experience\">Your Experience</label>\n            <textarea\n              id=\"experience\"\n              name=\"experience\"\n              placeholder=\"Share your interview experience in detail...\"\n              value={form.experience}\n              onChange={handleFormChange}\n              required\n              rows={7}\n            />\n          </div>\n          <button type=\"submit\">Submit Experience</button>\n        </form>\n      )}\n      {view === \"read\" && (\n        <div className=\"ie-read-section\">\n          <div className=\"ie-filters\">\n            <input\n              name=\"company\"\n              placeholder=\"Filter by Company\"\n              value={filter.company}\n              onChange={handleFilter}\n            />\n            <input\n              name=\"role\"\n              placeholder=\"Filter by Role\"\n              value={filter.role}\n              onChange={handleFilter}\n            />\n          </div>\n          <ul className=\"ie-list ie-list-redesign\">\n            {filtered.length === 0 && <li className=\"ie-empty\">No experiences found.</li>}\n            {filtered.map((exp) => (\n              <li key={exp.id} className=\"ie-item ie-card\" onClick={() => setSelected(exp)}>\n                <div className=\"ie-meta\">\n                  <span className=\"ie-company\">{exp.company}</span>\n                  <span className=\"ie-role\">{exp.role}</span>\n                </div>\n                <p className=\"ie-text\">\n                  {exp.experience.length > 120\n                    ? exp.experience.slice(0, 120) + \"...\"\n                    : exp.experience}\n                </p>\n                <div className=\"ie-card-actions\">\n                  <button className=\"ie-view-btn\" onClick={e => {e.stopPropagation(); setSelected(exp);}}>Read</button>\n                  <button className=\"ie-delete-btn\" onClick={e => handleDelete(exp.id, e)}>Delete</button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":6910},"frontend/src/components/Newsletter.jsx":{"content":"import React from 'react';\n\nconst Newsletter = () => (\n\t<div style={{ background: 'rgba(255,255,255,0.1)', color: '#800000', padding: '24px', borderRadius: '8px', textAlign: 'center', margin: '0 16px' }}>\n\t\t<h2 style={{ color: '#800000', marginBottom: '8px' }}>Newsletter</h2>\n\t\t<p>Stay updated with the latest placement news and job postings.</p>\n\t\t<input type=\"email\" placeholder=\"Your email\" style={{ padding: '8px', borderRadius: '4px', border: '1px solid #800000', marginRight: '8px' }} />\n\t\t<button style={{ background: '#800000', color: 'white', padding: '8px 16px', borderRadius: '4px', border: 'none' }}>Subscribe</button>\n\t</div>\n);\n\nexport default Newsletter;\n","size_bytes":671},"frontend/src/components/ProtectedRoute.jsx":{"content":"import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children, requireAdmin = false }) => {\n  // Check if user is authenticated\n  const adminToken = localStorage.getItem('adminToken');\n  const adminUser = localStorage.getItem('adminUser');\n\n  console.log('ProtectedRoute - adminToken:', !!adminToken);\n  console.log('ProtectedRoute - adminUser:', adminUser);\n\n  if (!adminToken || !adminUser) {\n    console.log('ProtectedRoute - No token or user, redirecting to login');\n    // Redirect to admin login if not authenticated\n    return <Navigate to=\"/admin-login\" replace />;\n  }\n\n  if (requireAdmin) {\n    try {\n      const user = JSON.parse(adminUser);\n      console.log('ProtectedRoute - User role:', user.role);\n      if (user.role !== 'admin' && user.role !== 'super_admin') {\n        console.log('ProtectedRoute - Invalid role, redirecting to login');\n        // Redirect to admin login if not admin or super admin\n        return <Navigate to=\"/admin-login\" replace />;\n      }\n    } catch (error) {\n      console.error('ProtectedRoute - Error parsing user:', error);\n      // Invalid user data, redirect to login\n      localStorage.removeItem('adminToken');\n      localStorage.removeItem('adminUser');\n      return <Navigate to=\"/admin-login\" replace />;\n    }\n  }\n\n  console.log('ProtectedRoute - Access granted');\n  return children;\n};\n\nexport default ProtectedRoute;\n","size_bytes":1421},"frontend/src/components/ScrollToTop.jsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]); \n\n  return null;\n};\n\nexport default ScrollToTop;\n","size_bytes":265},"frontend/src/components/Sign.jsx":{"content":"import React, { useState } from \"react\";\nimport { signup, signin } from \"../../api/auth\";\nimport { toast } from \"react-hot-toast\";\n\nfunction Sign() {\n  // Register vs Sign-in\n  const [isRegister, setIsRegister] = useState(false);\n\n  // Form state -- added phone for registration (assumption: phone required on register)\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  // Validation state\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [valid, setValid] = useState({});\n\n  // Simple validators\n  const validateField = (name, value) => {\n    let error = \"\";\n    // Custom required messages per field\n    const requiredMessages = {\n      name: \"Username is required\",\n      email: \"Email is required\",\n      password: \"Password is required\",\n      confirmPassword: \"Confirm password is required\",\n    };\n\n    // If empty, show a field-specific required message\n    if (!value || (typeof value === \"string\" && !value.trim())) {\n      error = requiredMessages[name] || \"This field is required\";\n    } else if (name === \"email\") {\n      // specific format validation\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) error = \"Enter a valid email address\";\n    } else if (name === \"password\") {\n      if (value.length < 6) error = \"Password must be at least 6 characters\";\n    } else if (name === \"confirmPassword\") {\n      if (value !== form.password) error = \"Passwords do not match\";\n    }\n\n    setErrors((p) => ({ ...p, [name]: error }));\n    setValid((p) => ({ ...p, [name]: !error }));\n    return error;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n    // real-time validation on input\n    validateField(name, value);\n  };\n\n  const handleBlur = (e) => {\n    const { name, value } = e.target;\n    setTouched((p) => ({ ...p, [name]: true }));\n    validateField(name, value);\n  };\n\n  const validateAll = () => {\n    const fields = isRegister\n      ? [\"name\", \"email\", \"password\", \"confirmPassword\"]\n      : [\"email\", \"password\"];\n    let hasError = false;\n    fields.forEach((f) => {\n      const err = validateField(f, form[f] || \"\");\n      if (err) hasError = true;\n    });\n    return !hasError;\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    if (!validateAll()) return;\n    try {\n      const res = await signup(form);\n      if (res.error) {\n        setErrors({ general: res.error });\n        toast.error(res.error || \"Registration failed\");\n        return;\n      }\n      localStorage.setItem('isLoggedIn', 'true');\n      toast.success(\"Account created. Redirecting...\");\n      window.location.href = '/';\n    } catch (err) {\n      if (err.response && err.response.status === 409) {\n        const msg = \"User already exists with this email.\";\n        setErrors({ general: msg });\n        toast.error(msg);\n      } else {\n        const msg = \"Registration failed. Please try again.\";\n        setErrors({ general: msg });\n        toast.error(msg);\n      }\n    }\n  };\n\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n\n    if (!validateAll()) return;\n    // Await the API call\n    const res = await signin(form);\n    console.log(\"Sign-in response:\", res);\n    if (res.error) {\n      toast.error(res.error || \"Sign-in failed\");\n      return;\n    }\n    // Set login state\n    localStorage.setItem('isLoggedIn', 'true');\n    toast.success(\"Signed in as \" + form.email);\n    // Redirect to home or dashboard\n    window.location.href = '/';\n    setForm({ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" });\n    setErrors({});\n    setTouched({});\n    setValid({});\n  };\n\n  return (\n    <div className=\"min-h-[70vh] w-full flex items-center justify-center py-10\">\n      <div className=\"w-full max-w-md bg-[var(--color-surface)] text-[var(--color-text)] shadow-[var(--elev-2)] rounded-[var(--radius-lg)] border border-[var(--color-border)] p-6 sm:p-8\">\n        <div className=\"flex flex-col items-center gap-2 mb-6\">\n          <img src=\"/default-logo.png\" alt=\"Logo\" className=\"h-10 w-10 rounded-md\" />\n          <h2 className=\"text-2xl font-semibold tracking-tight\">\n            {isRegister ? \"Create your account\" : \"Welcome back\"}\n          </h2>\n          <p className=\"text-sm text-[var(--color-text-muted)]\">\n            {isRegister ? \"Start your placement journey in minutes\" : \"Sign in to continue\"}\n          </p>\n        </div>\n\n        <form onSubmit={isRegister ? handleRegister : handleSignIn} noValidate className=\"space-y-4\">\n          {isRegister && (\n            <div className=\"flex flex-col gap-1.5\">\n              <label htmlFor=\"name\" className=\"text-sm font-medium\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Full Name\"\n                value={form.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={`h-11 px-3 rounded-md bg-[var(--color-bg)] border ${errors.name ? \"border-red-500\" : valid.name ? \"border-emerald-500\" : \"border-[var(--color-border)]\"} focus:outline-none focus:ring-2 focus:ring-[var(--color-primary)]`}\n                aria-invalid={!!errors.name}\n                aria-describedby=\"name-error\"\n              />\n              {((touched.name || errors.name) && errors.name) && (\n                <div id=\"name-error\" className=\"text-sm text-red-500 flex items-center gap-1\" role=\"alert\">\n                  <span aria-hidden=\"true\">⚠</span>\n                  <span>{errors.name}</span>\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"flex flex-col gap-1.5\">\n            <label htmlFor=\"email\" className=\"text-sm font-medium\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"you@example.com\"\n              value={form.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={`h-11 px-3 rounded-md bg-[var(--color-bg)] border ${errors.email ? \"border-red-500\" : valid.email ? \"border-emerald-500\" : \"border-[var(--color-border)]\"} focus:outline-none focus:ring-2 focus:ring-[var(--color-primary)]`}\n              aria-invalid={!!errors.email}\n              aria-describedby=\"email-error\"\n            />\n            {((touched.email || errors.email) && errors.email) && (\n              <div id=\"email-error\" className=\"text-sm text-red-500 flex items-center gap-1\" role=\"alert\">\n                <span aria-hidden=\"true\">⚠</span>\n                <span>{errors.email}</span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex flex-col gap-1.5\">\n            <label htmlFor=\"password\" className=\"text-sm font-medium\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"••••••••\"\n              value={form.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={`h-11 px-3 rounded-md bg-[var(--color-bg)] border ${errors.password ? \"border-red-500\" : valid.password ? \"border-emerald-500\" : \"border-[var(--color-border)]\"} focus:outline-none focus:ring-2 focus:ring-[var(--color-primary)]`}\n              aria-invalid={!!errors.password}\n              aria-describedby=\"password-error\"\n            />\n            {((touched.password || errors.password) && errors.password) && (\n              <div id=\"password-error\" className=\"text-sm text-red-500 flex items-center gap-1\" role=\"alert\">\n                <span aria-hidden=\"true\">⚠</span>\n                <span>{errors.password}</span>\n              </div>\n            )}\n          </div>\n\n          {isRegister && (\n            <div className=\"flex flex-col gap-1.5\">\n              <label htmlFor=\"confirmpassword\" className=\"text-sm font-medium\">Confirm Password</label>\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                placeholder=\"••••••••\"\n                value={form.confirmPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={`h-11 px-3 rounded-md bg-[var(--color-bg)] border ${errors.confirmPassword ? \"border-red-500\" : valid.confirmPassword ? \"border-emerald-500\" : \"border-[var(--color-border)]\"} focus:outline-none focus:ring-2 focus:ring-[var(--color-primary)]`}\n                aria-invalid={!!errors.confirmPassword}\n                aria-describedby=\"confirm-error\"\n              />\n              {((touched.confirmPassword || errors.confirmPassword) && errors.confirmPassword) && (\n                <div id=\"confirm-error\" className=\"text-sm text-red-500 flex items-center gap-1\" role=\"alert\">\n                  <span aria-hidden=\"true\">⚠</span>\n                  <span>{errors.confirmPassword}</span>\n                </div>\n              )}\n            </div>\n          )}\n\n          <button type=\"submit\" className=\"w-full h-11 rounded-md bg-[var(--color-primary)] hover:bg-[var(--color-primary-700)] text-white font-medium shadow-[var(--elev-1)]\">\n            {isRegister ? \"Create account\" : \"Sign In\"}\n          </button>\n        </form>\n\n        {errors.general && (\n          <div className=\"mt-3 text-sm text-red-500\" role=\"alert\">{errors.general}</div>\n        )}\n\n        <div className=\"mt-6 text-center text-sm text-[var(--color-text-muted)]\">\n          {isRegister ? (\n            <span>\n              Already have an account?{' '}\n              <button type=\"button\" onClick={() => setIsRegister(false)} className=\"text-[var(--color-primary)] hover:underline\">\n                Sign In\n              </button>\n            </span>\n          ) : (\n            <span>\n              New user?{' '}\n              <button type=\"button\" onClick={() => setIsRegister(true)} className=\"text-[var(--color-primary)] hover:underline\">\n                Create an account\n              </button>\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Sign;","size_bytes":10139},"frontend/src/components/StudentProfile.css":{"content":"/* Student Profile CSS - Full Screen Dark Maroon Theme */\n\n/* CSS Variables - Maroon Theme */\n:root {\n  --primary-color: #800020;\n  --primary-light: #a00028;\n  --primary-dark: #600018;\n  --secondary-color: #f5f5f5;\n  --accent-color: #a00028;\n  --success-color: #4caf50;\n  --warning-color: #ff9800;\n  --danger-color: #f44336;\n  --info-color: #2196f3;\n  \n  /* Dark Mode Text colors */\n  --text-primary: #ffffff;\n  --text-secondary: rgba(255, 255, 255, 0.8);\n  --text-muted: rgba(255, 255, 255, 0.6);\n  \n  /* Dark Mode Background colors - Dark Maroon */\n  --bg-primary: #2d0a11;\n  --bg-secondary: #400513;\n  --bg-card: rgba(255, 255, 255, 0.08);\n  --bg-hover: rgba(255, 255, 255, 0.12);\n  --bg-input: rgba(255, 255, 255, 0.1);\n  \n  /* Border colors */\n  --border-color: rgba(255, 255, 255, 0.15);\n  --border-light: rgba(255, 255, 255, 0.1);\n  \n  /* Shadow */\n  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.3);\n  --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.4);\n  --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.5);\n}\n\n/* Light Theme Variables - White Background with Dark Maroon Text */\n.light-theme {\n  --text-primary: #2d0a11;\n  --text-secondary: #400513;\n  --text-muted: #666;\n  \n  --bg-primary: #ffffff;\n  --bg-secondary: #f8f9fa;\n  --bg-card: #ffffff;\n  --bg-hover: #f5f5f5;\n  --bg-input: #ffffff;\n  \n  --border-color: #e0e0e0;\n  --border-light: #f0f0f0;\n  \n  --shadow-sm: 0 2px 4px rgba(45, 10, 17, 0.1);\n  --shadow-md: 0 4px 12px rgba(45, 10, 17, 0.15);\n  --shadow-lg: 0 8px 24px rgba(45, 10, 17, 0.2);\n}\n\n/* Light Theme Button Styles */\nbody.light .btn-primary {\n  background-color: white;\n  color: #800020;\n  border: 2px solid #800020;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nbody.light .btn-primary:hover {\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n  background-color: #800020;\n  color: white;\n}\n\nbody.light .btn-secondary {\n  border: 2px solid #800020;\n  color: #800020;\n  background: white;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nbody.light .btn-secondary:hover {\n  background: #800020;\n  color: white;\n}\n\nbody.light .btn-login {\n  background-color: white;\n  color: #800020;\n  border: 2px solid #800020;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nbody.light .btn-login:hover {\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n  background-color: #800020;\n  color: white;\n}\n\n/* Base Styles - Full Screen */\n* {\n  margin: \"\";\n  padding:\"\" ;\n  box-sizing: border-box;\n}\n\n/* Unified Shadows for Cards and Containers */\n\n.bg-white.rounded-lg,\n.bg-white.rounded,\n.shadow,\n.shadow-md,\n.shadow-lg {\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08) !important;\n  transition: box-shadow 0.25s ease;\n}\n\n.bg-white.rounded-lg:hover,\n.bg-white.rounded:hover,\n.shadow:hover,\n.shadow-md:hover,\n.shadow-lg:hover {\n  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.12) !important;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\n  background: #ffffff;\n  color: #111827;\n  min-height: 100vh;\n  width: 100%;\n  transition: all 0.3s ease;\n}\n\n.student-dashboard {\n  width: 100%;\n}\n\n/* Header */\n.header {\n  background: #600018;\n  border-bottom: 1px solid var(--border-color);\n  padding: 1rem 0;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  backdrop-filter: blur(10px);\n  width: 100%;\n  margin: 0;\n  left: 0;\n  right: 0;\n}\n\n/* Header Text Styles */\nheader h1 {\n  color: #ffffff !important;\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n}\n\nheader p {\n  color: #ffffff !important;\n  font-size: 1.125rem;\n  margin: 0;\n}\n\n.header-content {\n  width: 100%;\n  max-width: 100%;\n  margin: 0;\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-logo {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.header-logo .logo-icon {\n  background: #760d0d;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  color: white;\n}\n\n.header-logo h1 {\n  font-size: 1.75rem;\n  font-weight: 700;\n  margin-bottom: 0.25rem;\n  color: #ffffff;\n}\n\n.header-logo p {\n  font-size: 0.95rem;\n  color: #e0e0e0;\n}\n\n.header-nav {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.header-nav a {\n  color: #e0e0e0;\n  font-weight: 500;\n  transition: color 0.3s ease;\n}\n\n.header-nav a:hover {\n  color: #ffffff;\n}\n\n.btn-login {\n  background: white;\n  color: var(--primary-color);\n  border: 2px solid var(--primary-color);\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-login:hover {\n  background: var(--primary-color);\n  color: white;\n  transform: scale(1.05);\n  box-shadow: 0 10px 15px -3px rgba(128, 0, 32, 0.3);\n}\n\n/* Main Content */\n.main-content {\n  width: 100%;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  min-height: calc(100vh - 150px);\n}\n\n.section {\n  margin-bottom: 2rem;\n}\n\n.welcome-card {\n  background: linear-gradient(90deg, #dc2626, #7c2d12);\n  border-radius: 0.5rem;\n  padding: 2rem;\n  color: white;\n  box-shadow: var(--shadow-md);\n}\n\n.welcome-title {\n  font-size: 1.875rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n}\n\n.welcome-subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n/* Profile Overview */\n.profile-overview-card {\n  background: var(--bg-card);\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n}\n\n.profile-overview-header {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n}\n\n.profile-photo-container {\n  flex-shrink: 0;\n}\n\n.profile-photo {\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  border: 4px solid var(--border-light);\n}\n\n.profile-name {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--text-primary);\n}\n\n.profile-department {\n  font-size: 1rem;\n  color: var(--text-secondary);\n}\n\n.profile-meta {\n  font-size: 0.875rem;\n  color: var(--text-muted);\n}\n\n.profile-stats {\n  display: flex;\n  gap: 2rem;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-value {\n  font-size: 1.5rem;\n  font-weight: 700;\n}\n\n.stat-label {\n  font-size: 0.875rem;\n  color: var(--text-muted);\n}\n\n.progress-bar-container {\n  margin-bottom: 1.5rem;\n}\n\n.progress-bar-label {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.progress-label {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: var(--text-secondary);\n}\n\n.progress-percentage {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: var(--text-primary);\n}\n\n.progress-bar {\n  width: 100%;\n  background: var(--border-light);\n  border-radius: 9999px;\n  height: 0.5rem;\n}\n\n.progress-fill {\n  background: var(--primary-color);\n  height: 100%;\n  border-radius: 9999px;\n  transition: width 0.3s ease-in-out;\n}\n\n.skills-section {\n  margin-bottom: 1.5rem;\n}\n\n.section-title {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: var(--text-primary);\n  margin-bottom: 0.75rem;\n}\n\n.skills-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.skill-tag {\n  background: var(--primary-color);\n  color: white;\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n/* Quick Actions Section */\n.quick-actions-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n}\n\n.quick-action-card {\n  background: var(--bg-card);\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.quick-action-card .card-header {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.icon-wrapper {\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Specific icon colors */\n.icon-red { color: #dc2626; }\n.icon-blue { color: #2563eb; }\n.icon-yellow { color: #d97706; }\n.icon-green { color: #16a34a; }\n.icon-white { color: #ffffff; }\n\n.quick-action-card .card-title {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.quick-action-card .card-subtitle {\n  font-size: 0.875rem;\n}\n\n.quick-action-card .card-text {\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n  margin-bottom: 1rem;\n}\n\n.btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  font-weight: 600;\n  transition: background-color 0.3s ease;\n  cursor: pointer;\n}\n\n.btn-primary {\n  background: white;\n  color: var(--primary-color);\n  border: 2px solid var(--primary-color);\n  text-align: center;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-primary:hover {\n  background: var(--primary-color);\n  color: white;\n  transform: scale(1.05);\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n}\n\n.btn-secondary {\n  border: 2px solid var(--primary-color);\n  background: white;\n  color: var(--primary-color);\n  text-align: center;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-secondary:hover {\n  background: var(--primary-color);\n  color: white;\n  transform: scale(1.05);\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n}\n\n.btn-disabled {\n  background: #ffffff;\n  color: var(--primary-color);\n  border: 2px solid var(--primary-color);\n  cursor: not-allowed;\n  opacity: 0.7;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.btn-disabled:hover {\n  background: #ffffff;\n  color: var(--primary-color);\n  transform: none;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.card-stats {\n  margin-bottom: 1rem;\n}\n\n.stat-row {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n}\n\n.stat-row .stat-value {\n  font-weight: 600;\n}\n\n/* Analytics & Charts */\n.charts-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n.chart-card {\n  background: var(--bg-card);\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.chart-title {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.chart-subtitle {\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n}\n\n.chart-select {\n  background: var(--bg-input);\n  color: var(--text-primary);\n  border: 1px solid var(--border-color);\n  border-radius: 0.25rem;\n  padding: 0.25rem 0.5rem;\n}\n\n.chart-container {\n  width: 100%;\n  height: 20rem;\n}\n\n.chart-legend {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-top: 1rem;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n}\n\n.legend-color-box {\n  width: 0.75rem;\n  height: 0.75rem;\n  border-radius: 0.125rem;\n}\n\n.bg-red-300 { background-color: #fca5a5; }\n.bg-red-600 { background-color: #dc2626; }\n.bg-red-800 { background-color: #7c2d12; }\n.bg-green-500 { background-color: #22c55e; }\n.bg-red-400 { background-color: #f87171; }\n\n/* Applications and Jobs Sections */\n.applications-grid,\n.jobs-grid,\n.schedule-list {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1rem;\n}\n\n.application-card,\n.job-card,\n.schedule-card {\n  background: var(--bg-card);\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n}\n\n.application-card .card-header,\n.job-card .job-card-header,\n.schedule-card {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.company-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.company-info .company-name {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.company-info .job-title {\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n}\n\n.application-date {\n  font-size: 0.75rem;\n  color: var(--text-muted);\n}\n\n.status-badge {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n/* Status colors */\n.status-applied { background-color: #fef3c7; color: #d97706; }\n.status-shortlisted { background-color: #d1fae5; color: #065f46; }\n.status-interview-scheduled { background-color: #dbeafe; color: #1e40af; }\n.status-rejected { background-color: #fee2e2; color: #991b1b; }\n\n.progress-bar-container {\n  margin-bottom: 1rem;\n}\n\n.progress-bar-label {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.875rem;\n}\n\n.progress-label {\n  color: var(--text-secondary);\n}\n\n.progress-percentage {\n  color: var(--text-muted);\n}\n\n.progress-bar {\n  width: 100%;\n  background: var(--border-light);\n  border-radius: 9999px;\n  height: 0.25rem;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: var(--primary-color);\n  border-radius: 9999px;\n  transition: width 0.3s ease;\n}\n\n.card-actions-wrapper {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n}\n\n.rounds-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.25rem;\n}\n\n.round-tag {\n  padding: 0.25rem 0.5rem;\n  border-radius: 9999px;\n  font-size: 0.75rem;\n  background: var(--border-light);\n  color: var(--text-muted);\n}\n\n.round-tag-active {\n  background: var(--primary-color);\n  color: white;\n}\n\n.job-card {\n  background: var(--bg-card);\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n}\n\n.job-card-header {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.job-company-logo {\n  background: var(--primary-color);\n  color: white;\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n}\n\n.job-company-name {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.job-position {\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n}\n\n.job-eligibility {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.job-eligibility.eligible { color: #16a34a; }\n.job-eligibility.not-eligible { color: #dc2626; }\n\n.job-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.job-details .detail-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n}\n\n.detail-value {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.job-requirements {\n  margin-bottom: 1.5rem;\n}\n\n.requirements-title {\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: var(--text-primary);\n  margin-bottom: 0.5rem;\n}\n\n.tags-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.25rem;\n}\n\n.requirement-tag {\n  background: var(--bg-hover);\n  color: var(--text-secondary);\n  padding: 0.125rem 0.5rem;\n  border-radius: 0.25rem;\n  font-size: 0.75rem;\n}\n\n.job-card-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.btn-disabled {\n  background: #ffffff;\n  color: var(--primary-color);\n  border: 2px solid var(--primary-color);\n  cursor: not-allowed;\n  opacity: 0.7;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.schedule-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.schedule-card {\n  background: var(--bg-card);\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: var(--shadow-md);\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n}\n\n.card-icon-wrapper {\n  background: var(--bg-hover);\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n}\n\n.schedule-details {\n  flex: 1;\n}\n\n.schedule-header-details {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.25rem;\n}\n\n.schedule-tag {\n  padding: 0.25rem 0.5rem;\n  border-radius: 9999px;\n  font-size: 0.75rem;\n  font-weight: 600;\n}\n\n.tag-urgent { background-color: #fecaca; color: #dc2626; }\n.tag-scheduled { background-color: #dbeafe; color: #1e40af; }\n\n.schedule-title {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.schedule-info {\n  font-size: 0.875rem;\n  color: var(--text-secondary);\n}\n\n.schedule-meta-details {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.875rem;\n  color: var(--text-muted);\n}\n\n/* Responsive Design */\n@media (max-width: 1200px) {\n  .main-content {\n    padding: 1.5rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .main-content {\n    padding: 1rem;\n  }\n  .header-content {\n    padding: 0 1rem;\n  }\n  .welcome-card, .profile-overview-card, .quick-action-card, .chart-card, .application-card, .job-card, .schedule-card {\n    padding: 1rem;\n  }\n  .profile-overview-header {\n    flex-direction: column;\n    text-align: center;\n  }\n  .profile-stats {\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 1rem;\n  }\n  .quick-actions-grid, .charts-grid, .stats-grid, .applications-grid, .jobs-grid, .schedule-list {\n    grid-template-columns: 1fr;\n  }\n  .schedule-card, .application-card .card-header {\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    gap: 1rem;\n  }\n  .card-actions-wrapper {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n  .rounds-list {\n    justify-content: center;\n  }\n}\n","size_bytes":16766},"frontend/src/components/StudentProfile.jsx":{"content":"import React, { useState, useRef } from 'react';\nimport { \n  User, Mail, Phone, GraduationCap, Calendar, MapPin, \n  FileText, Download, Upload, Edit, Search, Filter, \n  Bell, TrendingUp, BarChart3, PieChart, Clock, \n  CheckCircle, XCircle, AlertCircle, Eye, Star,\n  Building2, Users, Target, Award, BookOpen, Home,\n  Activity, Briefcase, ChevronRight, DollarSign,\n  ChevronDown, ChevronUp\n} from 'lucide-react';\nimport { \n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, \n  PieChart as RechartsPieChart, Cell, BarChart, Bar, Pie, Area, AreaChart,\n  RadialBarChart, RadialBar, Legend\n} from 'recharts';\nimport './StudentProfile.css';\nconst StudentProfile = () => {\n  // Enhanced Student Profile Data\n  const [studentProfile] = useState({\n    name: \"Hem Shah\",\n    rollNo: \"23\",\n    email: \"hem.shah@student.dcs.ac.in\",\n    phone: \"+91-98765-54321\",\n    department: \"Computer Science\",\n    batch: \"2021-25\",\n    semester: \"7th\",\n    cgpa: 8.6,\n    backlogs: 0,\n    completionPercentage: 85,\n    photo: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-4.0.3&auto=format&fit=crop&w=128&q=80\",\n    linkedin: \"linkedin.com/in/mohit-jadaun\",\n    github: \"github.com/mohitjadaun\",\n    skills: [\"JavaScript\", \"React\", \"Node.js\", \"Python\", \"Java\", \"AWS\", \"MongoDB\", \"Docker\"],\n    certifications: [\n      \"AWS Certified Cloud Practitioner\", \n      \"Google Data Analytics\", \n      \"React Certification\",\n      \"Python for Data Science\"\n    ],\n    resume: \"Mohit_Jadaun_Resume.pdf\",\n    projects: [\n      { name: \"E-commerce Platform\", tech: \"React, Node.js\", status: \"Completed\" },\n      { name: \"Task Management App\", tech: \"Python, Django\", status: \"In Progress\" },\n      { name: \"Portfolio Website\", tech: \"React, Tailwind\", status: \"Completed\" }\n    ],\n    achievements: [\n      \"Dean's List Fall 2023\",\n      \"Best Project Award - Web Development\",\n      \"Hackathon Winner - TechFest 2024\"\n    ]\n  });\n\n  // Enhanced Applications Data\n  const [applications] = useState([\n    {\n      id: 1,\n      company: \"Tech Solutions Inc.\",\n      position: \"Software Engineer\",\n      appliedDate: \"2024-10-15\",\n      status: \"Interview Scheduled\",\n      interviewDate: \"2024-11-10\",\n      package: \"12 LPA\",\n      result: \"Pending\",\n      eligibility: \"Met\",\n      rounds: [\"Technical\", \"HR\"],\n      currentRound: \"Technical\"\n    },\n    {\n      id: 2,\n      company: \"Infosys Limited\",\n      position: \"Software Developer\",\n      appliedDate: \"2024-10-20\",\n      status: \"Shortlisted\",\n      interviewDate: \"2025-08-26\",\n      package: \"8 LPA\",\n      result: \"Pending\",\n      eligibility: \"Met\",\n      rounds: [\"Technical\", \"Managerial\", \"HR\"],\n      currentRound: \"Technical\"\n    },\n    {\n      id: 3,\n      company: \"Data Analytics Corp\",\n      position: \"Data Analyst\",\n      appliedDate: \"2024-10-20\",\n      status: \"Applied\",\n      interviewDate: null,\n      package: \"8 LPA\",\n      result: \"Pending\",\n      eligibility: \"Met\",\n      rounds: [\"Technical\", \"Managerial\", \"HR\"],\n      currentRound: null\n    },\n    {\n      id: 4,\n      company: \"Cloud Services Ltd\",\n      position: \"Cloud Engineer\",\n      appliedDate: \"2024-09-05\",\n      status: \"Rejected\",\n      interviewDate: \"2024-09-25\",\n      package: \"15 LPA\",\n      result: \"Not Selected\",\n      eligibility: \"Met\",\n      rounds: [\"Technical\", \"System Design\", \"HR\"],\n      currentRound: \"Completed\"\n    },\n    {\n      id: 5,\n      company: \"StartupX\",\n      position: \"Full Stack Developer\",\n      appliedDate: \"2024-10-25\",\n      status: \"Shortlisted\",\n      interviewDate: \"2024-11-05\",\n      package: \"10 LPA\",\n      result: \"Pending\",\n      eligibility: \"Met\",\n      rounds: [\"Technical\", \"Cultural Fit\"],\n      currentRound: \"Cultural Fit\"\n    }\n  ]);\n\n  // Enhanced Available Jobs Data\n  const [availableJobs] = useState([\n    {\n      id: 1,\n      company: \"Accenture\",\n      position: \"Data Analyst\",\n      package: \"5.2 LPA\",\n      location: \"Gurgaon\",\n      deadline: \"2024-11-15\",\n      eligibility: \"CGPA >= 7.0, No backlogs\",\n      requirements: [\"Python\", \"SQL\", \"Data Analysis\", \"Excel\"],\n      isEligible: true,\n      type: \"Full-time\",\n      experience: \"0-2 years\",\n      companySize: \"500-1000\"\n    },\n    {\n      id: 2,\n      company: \"Innovate Tech\",\n      position: \"Frontend Developer\",\n      package: \"10-14 LPA\",\n      location: \"Bangalore\",\n      deadline: \"2024-11-15\",\n      eligibility: \"CGPA >= 7.5, No backlogs\",\n      requirements: [\"React\", \"JavaScript\", \"HTML/CSS\", \"TypeScript\"],\n      isEligible: true,\n      type: \"Full-time\",\n      experience: \"0-2 years\",\n      companySize: \"500-1000\"\n    },\n    {\n      id: 3,\n      company: \"Digital Solutions\",\n      position: \"Full Stack Developer\",\n      package: \"12-18 LPA\",\n      location: \"Hyderabad\",\n      deadline: \"2024-11-20\",\n      eligibility: \"CGPA >= 8.0, 2024 batch only\",\n      requirements: [\"React\", \"Node.js\", \"MongoDB\", \"Express\"],\n      isEligible: true,\n      type: \"Full-time\",\n      experience: \"0-1 years\",\n      companySize: \"100-500\"\n    },\n    {\n      id: 4,\n      company: \"AI Innovations\",\n      position: \"ML Engineer\",\n      package: \"15-22 LPA\",\n      location: \"Pune\",\n      deadline: \"2024-11-25\",\n      eligibility: \"CGPA >= 8.5, No backlogs\",\n      requirements: [\"Python\", \"TensorFlow\", \"Machine Learning\", \"Statistics\"],\n      isEligible: false,\n      type: \"Full-time\",\n      experience: \"0-2 years\",\n      companySize: \"50-100\"\n    }\n  ]);\n\n  // Enhanced Analytics Data\n  const placementTrends = [\n    { year: '2020', placementRate: 74, avgPackage: 3.2 },\n    { year: '2021', placementRate: 78, avgPackage: 3.6 },\n    { year: '2022', placementRate: 85, avgPackage: 4.2 },\n    { year: '2023', placementRate: 89, avgPackage: 4.8 },\n    { year: '2024', placementRate: 92, avgPackage: 5.2 }\n  ];\n\n  const monthlyTrends = [\n    { month: 'Jan', placements: 45, applications: 120, offers: 52 },\n    { month: 'Feb', placements: 52, applications: 135, offers: 60 },\n    { month: 'Mar', placements: 38, applications: 98, offers: 45 },\n    { month: 'Apr', placements: 61, applications: 156, offers: 72 },\n    { month: 'May', placements: 74, applications: 189, offers: 85 },\n    { month: 'Jun', placements: 66, applications: 167, offers: 78 },\n    { month: 'Jul', placements: 58, applications: 145, offers: 68 },\n    { month: 'Aug', placements: 71, applications: 178, offers: 82 }\n  ];\n\n  const companyWiseStats = [\n    { name: 'Tech Giants', value: 35, color: '#7c2d12' },\n    { name: 'Startups', value: 28, color: '#991b1b' },\n    { name: 'Service Companies', value: 22, color: '#dc2626' },\n    { name: 'Product Companies', value: 15, color: '#ef4444' }\n  ];\n\n  const packageDistribution = [\n    { range: '0-5 LPA', count: 12, color: '#fee2e2' },\n    { range: '5-10 LPA', count: 28, color: '#fecaca' },\n    { range: '10-15 LPA', count: 35, color: '#f87171' },\n    { range: '15-20 LPA', count: 18, color: '#ef4444' },\n    { range: '20+ LPA', count: 7, color: '#dc2626' }\n  ];\n\n  const skillDemand = [\n    { skill: 'JavaScript', demand: 85, jobs: 120 },\n    { skill: 'React', demand: 78, jobs: 95 },\n    { skill: 'Python', demand: 72, jobs: 88 },\n    { skill: 'Java', demand: 68, jobs: 82 },\n    { skill: 'Node.js', demand: 65, jobs: 75 },\n    { skill: 'AWS', demand: 60, jobs: 70 },\n    { skill: 'MongoDB', demand: 45, jobs: 55 },\n    { skill: 'Docker', demand: 42, jobs: 48 }\n  ];\n\n  const departmentStats = [\n    { department: 'CSE', placed: 85, total: 110, percentage: 77 },\n    { department: 'IT', placed: 72, total: 90, percentage: 80 },\n    { department: 'ECE', placed: 45, total: 70, percentage: 64 },\n    { department: 'Mechanical', placed: 38, total: 80, percentage: 48 },\n    { department: 'Civil', placed: 25, total: 60, percentage: 42 }\n  ];\n\n  // State Management\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [notifications] = useState([\n    { id: 1, message: \"Interview scheduled with Tech Solutions Inc. on Nov 10\", type: \"info\", time: \"2 hours ago\", unread: true },\n    { id: 2, message: \"New job posting: ML Engineer at AI Innovations\", type: \"success\", time: \"1 day ago\", unread: true },\n    { id: 3, message: \"Application deadline reminder: Digital Solutions (Nov 20)\", type: \"warning\", time: \"2 days ago\", unread: false },\n    { id: 4, message: \"Congratulations! Shortlisted for StartupX interview\", type: \"success\", time: \"3 days ago\", unread: false }\n  ]);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const fileInputRef = useRef(null);\n\n  const handleResumeUpload = () => {\n    fileInputRef.current?.click();\n  };\n\n  const getStatusColor = (status) => {\n    switch (status.toLowerCase()) {\n      case 'shortlisted': return 'bg-green-100 text-green-800';\n      case 'interview scheduled': return 'bg-blue-100 text-blue-800';\n      case 'applied': return 'bg-yellow-100 text-yellow-800';\n      case 'rejected': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n  <div className=\"min-h-screen bg-white w-full p-0 m-0\">\n      {/* Header */}\n      <header className=\"w-full sticky top-0 z-50\" style={{\n        background: '#600018',\n        margin: 0,\n        padding: '3rem 0',\n        width: '100vw',\n        marginLeft: 'calc(50% - 50vw)',\n        marginRight: 'calc(50% - 50vw)'\n      }}>\n        <div className=\"text-center\">\n          <h1 style={{color:'#ffffff', fontSize:'3.5rem', fontWeight:800, marginBottom:'1rem', letterSpacing:'-0.02em'}}>Student Dashboard</h1>\n          <p style={{color:'#ffffff', fontSize:'1.25rem', margin:0, fontWeight:400}}>Welcome back! Here's your complete placement overview.</p>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"w-full p-0 m-0 min-h-screen\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n        {/* Welcome Section */}\n\n        {/* Profile Overview Section */}\n        <section className=\"mb-8\">\n          <div className=\"bg-white shadow-lg p-6 w-full rounded-lg\">\n            <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-4 mb-4 lg:mb-0\">\n                <img \n                  src={studentProfile.photo} \n                  alt=\"Profile\" \n                  className=\"w-28 h-28 rounded-full border-4 border-gray-200 shadow-lg\"\n                />\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900\">{studentProfile.name}</h2>\n                  <p className=\"text-gray-600\">{studentProfile.department}</p>\n                  <p className=\"text-sm text-gray-500\">Roll: {studentProfile.rollNo} • Batch: {studentProfile.batch}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex space-x-8\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-green-600\">{studentProfile.cgpa}</p>\n                  <p className=\"text-sm text-gray-500\">CGPA</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-blue-600\">{studentProfile.backlogs}</p>\n                  <p className=\"text-sm text-gray-500\">Backlogs</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-purple-600\">{studentProfile.completionPercentage}%</p>\n                  <p className=\"text-sm text-gray-500\">Completed</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-red-600\">{applications.length}</p>\n                  <p className=\"text-sm text-gray-500\">Applied</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mb-6\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-700\">Course Progress</span>\n                <span className=\"text-sm font-medium text-gray-900\">{studentProfile.completionPercentage}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-red-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${studentProfile.completionPercentage}%` }}\n                ></div>\n              </div>\n            </div>\n\n            {/* Skills Section */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Skills</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {studentProfile.skills.map((skill, index) => (\n                  <span key={index} className=\"px-3 py-1 bg-red-100 text-red-800 text-sm rounded-full font-medium\">\n                    {skill}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Quick Actions Section */}\n        <section className=\"mb-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 w-full\">\n            {/* Resume Card */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"bg-red-100 p-3 rounded-lg mr-4\">\n                  <FileText className=\"w-6 h-6 text-red-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Resume</h3>\n                  <p className=\"text-sm text-red-600\">Missing</p>\n                </div>\n              </div>\n              <p className=\"text-sm text-gray-600 mb-4\">Upload your resume</p>\n              <button onClick={handleResumeUpload} className=\"w-full btn btn-primary flex items-center justify-center\">\n                <Upload className=\"w-4 h-4 mr-2\" />\n                Update Resume\n              </button>\n              <input \n                type=\"file\" \n                ref={fileInputRef} \n                style={{ display: 'none' }} \n                accept=\".pdf,.doc,.docx\"\n              />\n            </div>\n\n            {/* Applications Card */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"bg-blue-100 p-3 rounded-lg mr-4\">\n                  <Briefcase className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Applications</h3>\n                  <p className=\"text-sm text-blue-600\">{applications.filter(app => app.status === 'Applied').length} Pending</p>\n                </div>\n              </div>\n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Total Applied:</span>\n                  <span className=\"text-sm font-medium\">{applications.length}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Shortlisted:</span>\n                  <span className=\"text-sm font-medium text-green-600\">{applications.filter(app => app.status === 'Shortlisted').length}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Interviews:</span>\n                  <span className=\"text-sm font-medium text-blue-600\">{applications.filter(app => app.status === 'Interview Scheduled').length}</span>\n                </div>\n              </div>\n              <button className=\"w-full btn btn-primary\">\n                View All Applications\n              </button>\n            </div>\n\n            {/* Next Interview Card */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"bg-yellow-100 p-3 rounded-lg mr-4\">\n                  <Calendar className=\"w-6 h-6 text-yellow-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Next Interview</h3>\n                  <p className=\"text-sm text-yellow-600\">Urgent</p>\n                </div>\n              </div>\n              <div className=\"mb-4\">\n                <p className=\"font-medium text-gray-900\">Infosys Limited</p>\n                <p className=\"text-sm text-gray-600\">Software Developer</p>\n                <p className=\"text-sm text-gray-500\">Aug 26, 2025, 1:03 PM</p>\n              </div>\n              <button className=\"w-full btn btn-secondary\">\n                View Full Schedule\n              </button>\n            </div>\n\n            {/* Eligible Jobs Card */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"bg-green-100 p-3 rounded-lg mr-4\">\n                  <Target className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Eligible Jobs</h3>\n                  <p className=\"text-sm text-green-600\">{availableJobs.filter(job => job.isEligible).length} Available</p>\n                </div>\n              </div>\n              <div className=\"mb-4\">\n                <p className=\"text-sm text-gray-600\">Based on your profile</p>\n                <p className=\"font-medium text-gray-900\">{availableJobs.filter(job => job.isEligible).length} Jobs Available</p>\n              </div>\n              <button className=\"w-full btn btn-primary\">\n                Browse Jobs\n              </button>\n            </div>\n          </div>\n        </section>\n\n        {/* Analytics Section */}\n        <section className=\"mb-8\">\n          <div className=\"mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Placement Analytics</h2>\n            <p className=\"text-gray-600\">Comprehensive insights and trends</p>\n          </div>\n          \n          {/* Overview Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"bg-green-100 p-3 rounded-lg mr-4\">\n                  <TrendingUp className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">Overall Placement Rate</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">78%</p>\n                  <p className=\"text-sm text-green-600\">↑ 5% from last year</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"bg-blue-100 p-3 rounded-lg mr-4\">\n                  <Users className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">Total Students</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">450</p>\n                  <p className=\"text-sm text-blue-600\">2024 Batch</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"bg-yellow-100 p-3 rounded-lg mr-4\">\n                  <Building2 className=\"w-6 h-6 text-yellow-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">Recruiting Companies</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">85</p>\n                  <p className=\"text-sm text-yellow-600\">15 new this year</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"bg-purple-100 p-3 rounded-lg mr-4\">\n                  <DollarSign className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">Average Package</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">12.5 LPA</p>\n                  <p className=\"text-sm text-purple-600\">Highest: 45 LPA</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Charts */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Placement Trends */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h4 className=\"text-lg font-semibold text-gray-900\">Placement Analytics</h4>\n                <div className=\"flex-shrink-0\">\n                  <select className=\"border border-gray-300 rounded px-3 py-1 text-sm bg-white shadow focus:outline-none focus:ring-2 focus:ring-red-500 text-gray-900\">\n                    <option className=\"text-gray-900\">Current Year</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={placementTrends}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"year\" />\n                    <YAxis yAxisId=\"left\" orientation=\"left\" />\n                    <YAxis yAxisId=\"right\" orientation=\"right\" />\n                    <Tooltip />\n                    <Line \n                      yAxisId=\"left\"\n                      type=\"monotone\" \n                      dataKey=\"placementRate\" \n                      stroke=\"#7c2d12\"\n                      strokeWidth={2}\n                      name=\"Placement Rate (%)\"\n                    />\n                    <Line \n                      yAxisId=\"right\"\n                      type=\"monotone\" \n                      dataKey=\"avgPackage\" \n                      stroke=\"#dc2626\"\n                      strokeWidth={2}\n                      name=\"Average Package (LPA)\"\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n\n            {/* Application Status Pie Chart */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <div className=\"mb-4\">\n                <h4 className=\"text-lg font-semibold text-gray-900\">Application Status</h4>\n                <p className=\"text-gray-600\">Total: {applications.length} Applications</p>\n              </div>\n              <div className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <RechartsPieChart>\n                    <Pie\n                      data={[\n                        { name: 'Applied', value: applications.filter(app => app.status === 'Applied').length, color: '#f87171' },\n                        { name: 'Shortlisted', value: applications.filter(app => app.status === 'Shortlisted').length, color: '#dc2626' },\n                        { name: 'Interview Scheduled', value: applications.filter(app => app.status === 'Interview Scheduled').length, color: '#7c2d12' },\n                        { name: 'Selected', value: 0, color: '#10b981' },\n                        { name: 'Rejected', value: applications.filter(app => app.status === 'Rejected').length, color: '#ef4444' }\n                      ]}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      innerRadius={40}\n                      outerRadius={80}\n                      paddingAngle={5}\n                      dataKey=\"value\"\n                    >\n                      {[\n                        { name: 'Applied', value: applications.filter(app => app.status === 'Applied').length, color: '#f87171' },\n                        { name: 'Shortlisted', value: applications.filter(app => app.status === 'Shortlisted').length, color: '#dc2626' },\n                        { name: 'Interview Scheduled', value: applications.filter(app => app.status === 'Interview Scheduled').length, color: '#7c2d12' },\n                        { name: 'Selected', value: 0, color: '#10b981' },\n                        { name: 'Rejected', value: applications.filter(app => app.status === 'Rejected').length, color: '#ef4444' }\n                      ].map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={entry.color} />\n                      ))}\n                    </Pie>\n                    <Tooltip />\n                  </RechartsPieChart>\n                </ResponsiveContainer>\n              </div>\n              <div className=\"flex flex-wrap gap-2 mt-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-red-300 rounded mr-2\"></div>\n                  <span className=\"text-sm text-gray-600\">Applied</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-red-600 rounded mr-2\"></div>\n                  <span className=\"text-sm text-gray-600\">Shortlisted</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-red-800 rounded mr-2\"></div>\n                  <span className=\"text-sm text-gray-600\">Interview</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-green-500 rounded mr-2\"></div>\n                  <span className=\"text-sm text-gray-600\">Selected</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-red-400 rounded mr-2\"></div>\n                  <span className=\"text-sm text-gray-600\">Rejected</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Applications Section */}\n        <section className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 lg:mb-0\">My Applications</h2>\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div className=\"relative ml-4\">\n                <Search className=\"absolute left-3 top-3 w-4 h-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search applications...\"\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 w-full sm:w-64 text-gray-900 placeholder-gray-700\"\n                />\n              </div>\n              <select className=\"px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 text-gray-900 ml-4\">\n                <option value=\"all\" className=\"text-gray-900\">All Status</option>\n                <option value=\"applied\" className=\"text-gray-900\">Applied</option>\n                <option value=\"shortlisted\" className=\"text-gray-900\">Shortlisted</option>\n                <option value=\"interview\" className=\"text-gray-900\">Interview</option>\n              </select>\n            </div>\n          </div>\n\n          {/* Application Stats */}\n          <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 mb-6\">\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-gray-900\">{applications.length}</p>\n              <p className=\"text-sm text-gray-600\">Total Applied</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-blue-600\">{applications.filter(app => app.status === 'Interview Scheduled').length}</p>\n              <p className=\"text-sm text-gray-600\">Interviews</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-green-600\">{applications.filter(app => app.status === 'Shortlisted').length}</p>\n              <p className=\"text-sm text-gray-600\">Shortlisted</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-red-600\">{applications.filter(app => app.status === 'Rejected').length}</p>\n              <p className=\"text-sm text-gray-600\">Rejected</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-yellow-600\">{applications.filter(app => app.status === 'Applied').length}</p>\n              <p className=\"text-sm text-gray-600\">Pending</p>\n            </div>\n          </div>\n\n          {/* Applications List */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {applications.map((app) => (\n              <div key={app.id} className=\"bg-white rounded-lg shadow-lg p-6\">\n                <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-4\">\n                  <div className=\"flex items-center mb-4 lg:mb-0\">\n                    <div className=\"bg-red-100 text-red-800 font-bold w-12 h-12 rounded-full flex items-center justify-center mr-4\">\n                      {app.company.substring(0, 2).toUpperCase()}\n                    </div>\n                    <div>\n                      <h4 className=\"text-xl font-semibold text-gray-900\">{app.company}</h4>\n                      <p className=\"text-gray-600\">{app.position}</p>\n                      <p className=\"text-sm text-gray-500\">Applied: {new Date(app.appliedDate).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(app.status)}`}>\n                      {app.status}\n                    </span>\n                    <p className=\"text-lg font-semibold text-gray-900 mt-2\">{app.package}</p>\n                    {app.interviewDate && (\n                      <p className=\"text-sm text-gray-600\">\n                        Interview: {new Date(app.interviewDate).toLocaleDateString()}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                \n                {/* Progress Bar */}\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">{app.currentRound || 'Applied'}</span>\n                    <span className=\"text-sm text-gray-500\">{app.currentRound ? `${app.rounds.indexOf(app.currentRound) + 1}/${app.rounds.length}` : '1/4'}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-red-600 h-2 rounded-full transition-all duration-300\" \n                      style={{ \n                        width: `${app.currentRound ? ((app.rounds.indexOf(app.currentRound) + 1) / app.rounds.length) * 100 : 25}%`\n                      }}\n                    ></div>\n                  </div>\n                </div>\n                \n                {/* Rounds */}\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n                  <div className=\"flex flex-wrap gap-2 mb-4 sm:mb-0\">\n                    {app.rounds.map((round, index) => (\n                      <span \n                        key={index} \n                        className={`px-3 py-1 rounded-full text-sm ${\n                          app.currentRound && app.rounds.indexOf(app.currentRound) >= index \n                            ? 'bg-red-100 text-red-800 font-medium' \n                            : 'bg-gray-100 text-gray-600'\n                        }`}\n                      >\n                        {round}\n                      </span>\n                    ))}\n                  </div>\n                  <button className=\"btn btn-secondary flex items-center\">\n                    <Eye className=\"w-4 h-4 mr-2\" />\n                    View Details\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        {/* Available Jobs Section */}\n        <section className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 lg:mb-0\">Available Jobs</h2>\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-3 w-4 h-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search jobs...\"\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 w-full sm:w-64\"\n                />\n              </div>\n              <select className=\"px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500\">\n                <option value=\"all\">All Jobs</option>\n                <option value=\"eligible\">Eligible</option>\n                <option value=\"not-eligible\">Not Eligible</option>\n              </select>\n            </div>\n          </div>\n\n          {/* Job Statistics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-gray-900\">{availableJobs.length}</p>\n              <p className=\"text-sm text-gray-600\">Total Jobs</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-green-600\">{availableJobs.filter(job => job.isEligible).length}</p>\n              <p className=\"text-sm text-gray-600\">Eligible</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-blue-600\">{availableJobs.filter(job => job.type === 'Full-time').length}</p>\n              <p className=\"text-sm text-gray-600\">Full-time</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n              <p className=\"text-2xl font-bold text-purple-600\">12</p>\n              <p className=\"text-sm text-gray-600\">Avg Package (LPA)</p>\n            </div>\n          </div>\n\n          {/* Jobs Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {availableJobs.map((job) => (\n              <div key={job.id} className=\"bg-white rounded-lg shadow-lg p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"bg-red-100 text-red-800 font-bold w-10 h-10 rounded-full flex items-center justify-center mr-3\">\n                      {job.company.substring(0, 2).toUpperCase()}\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900\">{job.company}</h4>\n                      <p className=\"text-sm text-gray-600\">{job.position}</p>\n                    </div>\n                  </div>\n                  {job.isEligible ? (\n                    <div className=\"flex items-center bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs\">\n                      <CheckCircle className=\"w-3 h-3 mr-1\" />\n                      <span>Eligible</span>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center bg-red-100 text-red-800 px-2 py-1 rounded-full text-xs\">\n                      <XCircle className=\"w-3 h-3 mr-1\" />\n                      <span>Not Eligible</span>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"space-y-2 mb-4\">\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <DollarSign className=\"w-4 h-4 mr-2\" />\n                    <span className=\"font-medium text-gray-900\">{job.package}</span>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <MapPin className=\"w-4 h-4 mr-2\" />\n                    <span>{job.location}</span>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-600\">\n                    <Calendar className=\"w-4 h-4 mr-2\" />\n                    <span>Deadline: {new Date(job.deadline).toLocaleDateString()}</span>\n                  </div>\n                </div>\n\n                <div className=\"mb-4\">\n                  <p className=\"text-sm font-medium text-gray-700 mb-2\">Requirements:</p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {job.requirements.map((req, index) => (\n                      <span key={index} className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded\">\n                        {req}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  {job.isEligible ? (\n                    <button className=\"flex-1 btn btn-primary text-sm\">\n                      Apply Now\n                    </button>\n                  ) : (\n                    <button disabled className=\"flex-1 btn btn-disabled text-sm\">\n                      Not Eligible\n                    </button>\n                  )}\n                  <button className=\"flex-1 btn btn-secondary text-sm\">\n                    Details\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        {/* Schedule Section */}\n        <section className=\"mb-8\">\n          <div className=\"mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Upcoming Schedule</h2>\n            <p className=\"text-gray-600\">Your scheduled interviews and application deadlines</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {applications\n              .filter(app => app.interviewDate)\n              .map((app) => (\n                <div key={app.id} className=\"bg-white rounded-lg shadow-lg p-6\">\n                  <div className=\"flex items-center\">\n                    <div className=\"bg-blue-100 p-3 rounded-lg mr-4\">\n                      <Calendar className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center mb-1\">\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium mr-3 ${\n                          app.interviewDate === '2025-08-26' ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'\n                        }`}>\n                          {app.interviewDate === '2025-08-26' ? 'Tomorrow' : 'Scheduled'}\n                        </span>\n                      </div>\n                      <h3 className=\"font-semibold text-gray-900\">Interview</h3>\n                      <p className=\"text-gray-600\">{app.company} - {app.position}</p>\n                      <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-500\">\n                        <span className=\"flex items-center\">\n                          <Clock className=\"w-4 h-4 mr-1\" />\n                          1:03 PM\n                        </span>\n                        <span className=\"flex items-center\">\n                          <MapPin className=\"w-4 h-4 mr-1\" />\n                          Virtual Meet\n                        </span>\n                      </div>\n                    </div>\n                    <button className=\"btn btn-primary\">\n                      View Details\n                    </button>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </section>\n\n        {/* Skills Demand & Department Performance */}\n        <section className=\"mb-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Skill Demand */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">Most In-Demand Skills</h4>\n              <div className=\"space-y-3\">\n                {skillDemand.slice(0, 6).map((skill, index) => (\n                  <div key={index} className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-700\">{skill.skill}</span>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-red-600 h-2 rounded-full transition-all duration-300\" \n                          style={{ width: `${skill.demand}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"text-sm text-gray-600 w-8\">{skill.demand}%</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Department Performance */}\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n              <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">Department-wise Placement</h4>\n              <div className=\"space-y-3\">\n                {departmentStats.map((dept, index) => (\n                  <div key={index}>\n                    <div className=\"flex justify-between items-center mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">{dept.department}</span>\n                      <span className=\"text-sm text-gray-600\">{dept.placed}/{dept.total} ({dept.percentage}%)</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"h-2 rounded-full transition-all duration-300\" \n                        style={{ \n                          width: `${dept.percentage}%`,\n                          backgroundColor: dept.percentage >= 70 ? '#dc2626' : dept.percentage >= 50 ? '#f59e0b' : '#ef4444'\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default StudentProfile;","size_bytes":43090},"frontend/src/components/ThemeToggle.jsx":{"content":"import React from 'react';\nimport { Moon, Sun } from 'lucide-react';\nimport { useDarkMode } from '../hooks/useDarkMode';\n\nexport default function ThemeToggle({ className = '' }) {\n  const { theme, toggle } = useDarkMode();\n  const isLight = theme === 'light';\n  return (\n    <button\n      onClick={toggle}\n      aria-label=\"Toggle light/dark theme\"\n      className={`inline-flex items-center justify-center h-9 w-9 rounded-md border border-[var(--color-border)] bg-[var(--color-surface)] text-[var(--color-text)] shadow-[var(--elev-1)] hover:shadow-[var(--elev-2)] hover:bg-[var(--color-bg-muted)] transition ${className}`}\n    >\n      {isLight ? <Moon size={18} /> : <Sun size={18} />}\n    </button>\n  );\n}\n\n\n","size_bytes":710},"frontend/src/components/about.css":{"content":".about-bg {\n  min-height: 100vh;\n  background: radial-gradient(\n      circle at 20% 30%,\n      rgba(160, 0, 40, 0.08) 0%,\n      transparent 25%\n    ),\n    radial-gradient(\n      circle at 80% 70%,\n      rgba(160, 0, 40, 0.08) 0%,\n      transparent 25%\n    ),\n    var(--bg-dark);\n  padding: 1rem 0 3rem 0;\n}\n\n.about-container {\n  background: var(--card-bg-dark);\n  box-shadow: none;\n  border: 1px solid rgba(160, 0, 40, 0.2);\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  margin: 1.5rem auto 2.5rem auto;\n  max-width: 1000px;\n  animation: fadeIn 0.8s ease-out;\n  transition: box-shadow var(--transition-speed) ease, transform var(--transition-speed) ease;\n}\n\n.about-container:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.35);\n}\n\nbody.light .about-bg {\n  background: radial-gradient(\n      circle at 20% 30%,\n      rgba(160, 0, 40, 0.05) 0%,\n      transparent 25%\n    ),\n    radial-gradient(\n      circle at 80% 70%,\n      rgba(160, 0, 40, 0.05) 0%,\n      transparent 25%\n    ),\n    var(--bg-dark);\n  padding: 1rem 0 3rem 0;\n}\n\nbody.light .about-container {\n  background: var(--card-bg-light);\n  box-shadow: none;\n  border: 1px solid rgba(160, 0, 40, 0.15);\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  margin: 1.5rem auto 2.5rem auto;\n  max-width: 1000px;\n  animation: fadeIn 0.8s ease-out;\n  transition: box-shadow var(--transition-speed) ease, transform var(--transition-speed) ease;\n}\n\nbody.light .about-container:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.18);\n}\n\n.about-header {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  margin-bottom: 1.5rem;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.about-logo {\n  width: 120px;\n  height: 120px;\n  object-fit: contain;\n  border-radius: 50%;\n  background: rgba(160, 0, 40, 0.1);\n  padding: 8px;\n  box-shadow: 0 0 0 2px var(--primary-maroon), 0 4px 12px rgba(0,0,0,0.25);\n  transition: transform 0.3s ease;\n}\n\n.about-logo:hover {\n  transform: scale(1.05);\n}\n\nbody.light .about-logo {\n  background: rgba(160, 0, 40, 0.08);\n  box-shadow: 0 0 0 2px var(--primary-maroon), 0 4px 12px rgba(0,0,0,0.12);\n  transition: transform 0.3s ease;\n}\n\nbody.light .about-logo:hover {\n  transform: scale(1.05);\n}\n\n.about-header h1 {\n  font-size: 2.6rem;\n  margin: 0;\n  color: var(--text-primary);\n  letter-spacing: 0.2px;\n  text-shadow: none;\n  text-decoration: underline;\n  text-underline-offset: 6px;\n  text-decoration-thickness: 2px;\n}\n\n.about-content h2 {\n  color: var(--text-primary);\n  margin-bottom: 1.5rem;\n  font-size: 1.8rem;\n  border-left: 4px solid var(--maroon-500);\n  padding-left: 1rem;\n}\n\n.about-content p {\n  font-size: 1.1rem;\n  color: var(--text-secondary);\n  margin-bottom: 1.5rem;\n  line-height: 1.8;\n}\n\n.about-content p strong {\n  color: var(--maroon-500);\n}\n\n.about-content ul {\n  margin: 2rem 0 2.5rem 2rem;\n  color: var(--text-secondary);\n  font-size: 1.1rem;\n  list-style: none;\n}\n\n.about-content ul li {\n  margin-bottom: 0.8rem;\n  position: relative;\n  padding-left: 1.8rem;\n}\n\n.about-content ul li::before {\n  content: \"•\";\n  color: var(--maroon-500);\n  font-size: 1.5rem;\n  position: absolute;\n  left: 0;\n  top: -2px;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\nbody.light .about-header h1 {\n  color: var(--primary-maroon-dark);\n  text-shadow: none;\n  text-decoration: underline;\n  text-underline-offset: 6px;\n  text-decoration-thickness: 2px;\n}\n\nbody.light .about-content h2 {\n  color: var(--maroon-800);\n  border-left: 4px solid var(--maroon-500);\n  padding-left: 1rem;\n  margin-bottom: 1.5rem;\n  font-size: 1.8rem;\n}\n\nbody.light .about-content p {\n  color: var(--text-secondary);\n  font-size: 1.1rem;\n  margin-bottom: 1.5rem;\n  line-height: 1.8;\n}\n\nbody.light .about-content p strong {\n  color: var(--maroon-900);\n}\n\nbody.light .about-content ul {\n  color: var(--text-secondary);\n  font-size: 1.1rem;\n  list-style: none;\n  margin: 2rem 0 2.5rem 2rem;\n}\n\nbody.light .about-content ul li {\n  margin-bottom: 0.8rem;\n  position: relative;\n  padding-left: 1.8rem;\n}\n\nbody.light .about-content ul li::before {\n  content: \"•\";\n  color: var(--maroon-500);\n  font-size: 1.5rem;\n  position: absolute;\n  left: 0;\n  top: -2px;\n}\n\n@media (max-width: 768px) {\n  .about-container {\n    padding: 2rem 1.5rem;\n    margin: 1rem auto;\n    min-height: 90vh;\n  }\n\n  .about-header {\n    flex-direction: column;\n    gap: 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  .about-logo {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    padding: 6px;\n    box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.3);\n  }\n\n  .about-header h1 {\n    font-size: 2rem;\n    text-align: center;\n  }\n\n  .about-content h2 {\n    font-size: 1.5rem;\n  }\n\n  .about-content p,\n  .about-content ul {\n    font-size: 1rem;\n  }\n\n  .about-content ul {\n    margin-left: 1rem;\n  }\n}\n","size_bytes":4899},"frontend/src/components/contact.css":{"content":"/* Contact Page Dark Theme */\n:root {\n  --transition-speed: 0.3s;\n}\n.contact-page {\n  min-height: 100vh;\n  width: 100vw;\n  background-color: var(--bg-dark);\n  padding: 0;\n  background-image: none; /* clean like home */\n  position: relative;\n  box-sizing: border-box;\nbody.light .contact-page {\n  background-color: var(--bg-dark);\n  width: 100vw;\n  background-image: none; /* clean like home */\n  box-sizing: border-box;\n}\n\n/* Hero Section */\n.contact-hero {\n  text-align: center;\n  padding: 3rem 1rem 2rem 1rem;\n  background: linear-gradient(\n    135deg,\n    rgba(96, 0, 24, 0.9),\n    rgba(96, 0, 24, 0.95)\n  );\n  color: var(--text-primary);\n  margin-bottom: 2rem;\n  border-bottom: 1px solid rgba(160, 0, 40, 0.3);\n  backdrop-filter: blur(8px);\n}\n\n.contact-hero h1 {\n  font-size: 3rem;\n  font-weight: 800;\n  margin-bottom: 1rem;\n  background-color: white;\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n}\n\n.contact-hero p {\n  font-size: 1.25rem;\n  max-width: 600px;\n  margin: 0 auto;\n  line-height: 1.6;\n  color: white;\n  font-weight: 500;\n}\nbody.light .contact-hero {\n  background: linear-gradient(\n    135deg,\n    rgba(245, 245, 245, 0.9),\n    rgba(239, 239, 239, 0.95)\n  );\n  color: var(--text-primary);\n  margin-bottom: 3rem;\n  border-bottom: 1px solid rgba(160, 0, 40, 0.2);\n  backdrop-filter: none;\n}\n\nbody.light .contact-hero h1 {\n  color: var(--primary-maroon-dark);\n}\n\nbody.light .contact-hero p {\n  color: white;\n  font-weight: 500;\n}\n\n/* Contact Info Section */\n.contact-info {\n  max-width: 800px;\n  margin: 0 auto 3rem;\n  padding: 0 2rem;\n}\n\n.contact-card {\n  background: var(--card-bg-dark);\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  box-shadow: none;\n  border: 1px solid rgba(160, 0, 40, 0.2);\n  backdrop-filter: blur(8px);\n  transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, border-color var(--transition-speed) ease;\n}\n\n/* Show shadow only on hover */\n.contact-card:hover {\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  transform: translateY(-4px);\n  border-color: rgba(160, 0, 40, 0.3);\n}\n\n.contact-card h2 {\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: var(--primary-maroon);\n  margin-bottom: 1.5rem;\n  border-bottom: 2px solid var(--primary-maroon);\n  padding-bottom: 0.5rem;\n  display: inline-block;\n}\n\n.contact-card p {\n  margin-bottom: 1rem;\n  color: var(--text-primary);\n  font-size: 1rem;\n  font-weight: 500;\n}\n\n.contact-label {\n  color: var(--primary-maroon);\n  font-weight: 600;\n  margin-right: 0.5rem;\n}\n\n.contact-card a {\n  color: var(--text-primary);\n  text-decoration: none;\n  transition: all var(--transition-speed) ease;\n  position: relative;\n  font-weight: 500;\n}\n\n.contact-card a:hover {\n  color: var(--text-primary);\n  text-decoration: underline;\n}\n\n.contact-card a::after {\n  content: \"\";\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 0;\n  height: 1px;\n  background: var(--primary-maroon);\n  transition: width var(--transition-speed) ease;\n}\n\n.contact-card a:hover::after {\n  width: 100%;\n}\n\nbody.light .contact-card {\n  background: var(--card-bg-light);\n  border: 1px solid rgba(160, 0, 40, 0.1);\n  box-shadow: none;\n  backdrop-filter: none;\n}\n\nbody.light .contact-card h2 {\n  color: var(--primary-maroon-dark);\n  border-bottom: 2px solid var(--primary-maroon);\n}\n\nbody.light .contact-card p {\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\nbody.light .contact-label {\n  color: var(--primary-maroon);\n}\n\nbody.light .contact-card a {\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\nbody.light .contact-card a:hover {\n  color: var(--text-primary);\n  text-decoration: underline;\n}\n\nbody.light .contact-card a::after {\n  background: var(--primary-maroon);\n}\n\nbody.light .contact-card a:hover::after {\n  width: 100%;\n}\n\n/* Executive Director Section */\n.executive-section {\n  max-width: 1200px;\n  margin: 0 auto 4rem;\n  padding: 0 2rem;\n}\n\n.executive-section h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  font-weight: 800;\n  color: var(--text-primary);\n  margin-bottom: 2rem;\n  display: block;\n}\n\n.executive-card {\n  background: var(--card-bg-dark);\n  padding: 2.5rem;\n  border-radius: var(--border-radius);\n  box-shadow: none;\n  border: 1px solid rgba(160, 0, 40, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  max-width: 600px;\n  margin: 0 auto;\n  transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, border-color var(--transition-speed) ease;\n  backdrop-filter: blur(8px);\n}\n\n.executive-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);\n  border-color: rgba(160, 0, 40, 0.4);\n}\n\n.photo-container {\n  position: relative;\n  width: 120px;\n  height: 120px;\n}\n\n.executive-photo {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 3px solid var(--primary-maroon);\n  box-shadow: 0 0 20px rgba(160, 0, 40, 0.2);\n}\n\n.photo-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: rgba(160, 0, 40, 0.1);\n  opacity: 0;\n  transition: opacity var(--transition-speed) ease;\n}\n\n.executive-card:hover .photo-overlay {\n  opacity: 1;\n}\n\n.executive-info h3 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--text-primary);\n  margin-bottom: 0.5rem;\n}\n\n.executive-title {\n  font-size: 1.125rem;\n  color: var(--primary-maroon);\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.executive-contact p {\n  margin-bottom: 0.5rem;\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\n.executive-contact a {\n  margin-bottom: 0.5rem;\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\n.executive-contact a:hover {\n  margin-bottom: 0.5rem;\n  color: var(--text-primary);\n}\n\nbody.light .executive-section h2 {\n  color: var(--primary-maroon-dark);\n}\n\nbody.light .executive-card {\n  background: rgba(255, 255, 255, 0.8);\n  border: 1px solid rgba(221, 8, 8, 0.1);\n  box-shadow: none;\n  backdrop-filter: none;\n  transition: all var(--transition-speed) ease;\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\nbody.light .executive-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 30px rgba(135, 3, 3, 0.15);\n  border-color: rgba(253, 13, 13, 0.3);\n}\n\nbody.light .executive-photo {\n  border: 3px solid var(--maroon-600);\n  box-shadow: 0 0 20px rgba(212, 55, 55, 0.2);\n}\n\nbody.light .photo-overlay {\n  background: rgba(212, 55, 55, 0.1);\n}\n\nbody.light .executive-info h3 {\n  color: var(--text-primary);\n}\n\nbody.light .executive-title {\n  color: var(--maroon-700);\n}\n\nbody.light .contact-label {\n  color: var(--primary-maroon);\n}\nbody.light .executive-contact p {\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\nbody.light .executive-contact a {\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\n/* Team Section */\n.team-section {\n  max-width: 1200px; /* align with home container */\n  margin: 0 auto;\n  padding: 0 2rem;\n}\n\n.team-section h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  font-weight: 800;\n  color: var(--text-primary);\n  margin-bottom: 3rem;\n}\n\n.team-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem; /* match home cards spacing */\n}\n\n.team-card {\n  background: var(--card-bg-dark);\n  padding: 1.5rem;\n  border-radius: var(--border-radius);\n  box-shadow: none;\n  border: 1px solid rgba(160, 0, 40, 0.2);\n  text-align: center;\n  transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, border-color var(--transition-speed) ease;\n  backdrop-filter: blur(6px);\n}\n\n.team-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n  border-color: rgba(160, 0, 40, 0.3);\n}\n.photo-container-team {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto 1.5rem auto;\n  width: 100%;\n}\n\n.team-photo {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 3px solid var(--primary-maroon);\n  box-shadow: 0 0 15px rgba(160, 0, 40, 0.2);\n  transition: all var(--transition-speed) ease;\n}\n\n.team-card:hover .team-photo {\n  transform: scale(1.1);\n  box-shadow: 0 0 25px rgba(160, 0, 40, 0.3);\n}\n\n.team-card h3 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: var(--text-primary);\n  margin-bottom: 0.5rem;\n}\n\n.team-title {\n  font-size: 1rem;\n  color: var(--primary-maroon);\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n.team-contact {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.team-contact p {\n  margin-bottom: 0.5rem;\n  color: var(--text-primary);\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.team-contact a {\n  color: var(--primary-maroon);\n  text-decoration: none;\n  font-size: 0.875rem;\n  transition: color 0.3s ease;\n}\n\n.team-contact a:hover {\n  color: var(--primary-maroon-light);\n  text-decoration: underline;\n}\n\nbody.light .team-section h2 {\n  color: var(--primary-maroon-dark);\n}\n\nbody.light .team-card {\n  background: var(--card-bg-light);\n  border: 1px solid rgba(160, 0, 40, 0.1);\n  box-shadow: none;\n  backdrop-filter: none;\n  text-align: center;\n  transition: all var(--transition-speed) ease;\n}\n\nbody.light .team-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  border-color: rgba(160, 0, 40, 0.3);\n}\n\nbody.light .team-photo {\n  border: 3px solid var(--primary-maroon);\n  box-shadow: 0 0 15px rgba(160, 0, 40, 0.2);\n  transition: all var(--transition-speed) ease;\n}\n\nbody.light .team-card:hover .team-photo {\n  transform: scale(1.1);\n  box-shadow: 0 0 25px rgba(160, 0, 40, 0.3);\n}\n\nbody.light .team-card h3 {\n  color: var(--text-primary);\n}\n\nbody.light .team-title {\n  color: var(--primary-maroon-dark);\n}\n\nbody.light .team-contact p {\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\nbody.light .team-contact a {\n  color: var(--primary-maroon);\n}\n\nbody.light .team-contact a:hover {\n  color: var(--primary-maroon-light);\n  text-decoration: underline;\n}\n\n/* Enhanced Floating Contact Form */\n.floating-contact-form {\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  width: 120px;\n  height: 60px;\n  border-radius: 30px;\n  background: linear-gradient(135deg, var(--primary-maroon), var(--primary-maroon-light));\n  color: white;\n  box-shadow: 0 10px 30px rgba(160, 0, 40, 0.4);\n  cursor: pointer;\n  z-index: 1000;\n  overflow: hidden;\n  transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.floating-contact-form.open {\n  border-radius: 16px;\n  width: 400px;\n  height: auto;\n  max-height: 80vh;\n  overflow-y: auto;\n  /* Hide scrollbars while preserving scroll behavior */\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(248, 248, 248, 0.95));\n  border: 2px solid var(--primary-maroon);\n  box-shadow: 0 20px 40px rgba(160, 0, 40, 0.3);\n  display: block;\n  backdrop-filter: blur(10px);\n}\n\n/* WebKit-based browsers */\n.floating-contact-form.open::-webkit-scrollbar {\n  width: 0;\n  height: 0;\n}\n\n/* Floating Form Button */\n.floating-form-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 0 16px;\n  width: 100%;\n  height: 100%;\n  font-weight: 600;\n  font-size: 0.9rem;\n}\n\n.form-button-text {\n  font-size: 0.9rem;\n  font-weight: 600;\n}\n\n.form-button-icon {\n  font-size: 1.2rem;\n  transition: transform 0.3s ease;\n}\n\n.floating-contact-form:hover .form-button-icon {\n  transform: scale(1.1);\n}\n\n.floating-contact-form.expanded {\n  height: auto;\n}\n\n.floating-contact-form.success {\n  background: rgba(30, 66, 41, 0.95);\n  border: 1px solid rgba(76, 175, 80, 0.3);\n}\n\n.floating-form-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  font-weight: 600;\n  font-size: 1.1rem;\n  background: linear-gradient(135deg, var(--primary-maroon), var(--primary-maroon-light));\n  color: white;\n  border-bottom: 2px solid var(--primary-maroon);\n  border-radius: 14px 14px 0 0;\n}\n\n.floating-form-content {\n  padding: 20px;\n  display: none;\n  background: rgba(255, 255, 255, 0.9);\n}\n\n.floating-contact-form.open .floating-form-content {\n  display: block;\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n.form-title {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.floating-contact-form.open .form-title {\n  opacity: 1;\n}\n\n.form-toggle-icon {\n  font-size: 1.5rem;\n  transition: transform 0.3s ease;\n}\n\n.floating-contact-form.open .form-toggle-icon {\n  font-size: 1.2rem;\n}\n\n.floating-contact-form:hover .form-toggle-icon {\n  transform: scale(1.1);\n}\n\n/* Form Progress */\n.form-progress {\n  margin-bottom: 1.5rem;\n}\n\n.progress-steps {\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n  margin-bottom: 1rem;\n}\n\n.progress-step {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.2);\n  transition: all 0.3s ease;\n}\n\n.progress-step.active {\n  background: var(--maroon-500);\n  transform: scale(1.2);\n}\n\n.floating-form-content h3 {\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n  color: var(--primary-maroon-dark);\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 700;\n}\n\n/* Enhanced Form Styles */\n.contact-form {\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n}\n\n.form-group {\n  position: relative;\n  margin-bottom: 0;\n}\n\n.form-group.floating label {\n  position: absolute;\n  top: 16px;\n  left: 12px;\n  color: rgba(160, 0, 40, 0.7);\n  pointer-events: none;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n  font-weight: 500;\n}\n\n.form-group.floating.focused label,\n.form-group.floating input:focus + label,\n.form-group.floating textarea:focus + label,\n.form-group.floating input:not(:placeholder-shown) + label,\n.form-group.floating textarea:not(:placeholder-shown) + label {\n  top: -12px;\n  left: 8px;\n  font-size: 0.8rem;\n  color: var(--primary-maroon);\n  background: rgba(255, 255, 255, 0.95);\n  padding: 0 8px;\n  border-radius: 4px;\n  font-weight: 600;\n}\n\n.form-group.floating input,\n.form-group.floating textarea {\n  width: 100%;\n  padding: 1rem 0.75rem 0.5rem;\n  border: 2px solid rgba(160, 0, 40, 0.2);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--text-primary);\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.form-group.floating input:focus,\n.form-group.floating textarea:focus {\n  outline: none;\n  border-color: var(--primary-maroon);\n  box-shadow: 0 0 0 3px rgba(160, 0, 40, 0.2);\n  background: rgba(255, 255, 255, 1);\n  transform: translateY(-1px);\n}\n\n.form-group.floating input.error,\n.form-group.floating textarea.error {\n  border-color: #e53e3e;\n  box-shadow: 0 0 0 3px rgba(229, 62, 62, 0.2);\n}\n\n.form-group.floating .error-message {\n  color: #e53e3e;\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n  display: block;\n  padding-left: 0.5rem;\n}\n\n.character-count {\n  position: absolute;\n  bottom: 8px;\n  right: 12px;\n  font-size: 0.75rem;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.form-group.floating textarea {\n  resize: none;\n  min-height: 100px;\n  transition: height 0.2s ease;\n}\n\n/* Submit Button */\n.submit-bttn {\n  width: 100%;\n  background: linear-gradient(135deg, var(--primary-maroon), var(--primary-maroon-light));\n  color: white;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 8px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 1rem;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(160, 0, 40, 0.3);\n}\n\n.submit-bttn:hover:not(:disabled) {\n  background: linear-gradient(135deg, var(--primary-maroon-light), var(--primary-maroon));\n  transform: translateY(-2px);\n  box-shadow: 0 6px 15px rgba(160, 0, 40, 0.4);\n}\n\n.submit-bttn:active:not(:disabled) {\n  transform: translateY(0);\n}\n\n.submit-bttn:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.submit-bttn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.7s ease;\n}\n\n.submit-bttn:hover::before {\n  left: 100%;\n}\n\n/* Spinner */\n.spinner {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s ease-in-out infinite;\n  margin-right: 8px;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* Success Animation */\n.success-animation {\n  text-align: center;\n  padding: 2rem 0;\n  position: relative;\n}\n\n.success-checkmark {\n  margin: 0 auto 1.5rem;\n  width: 60px;\n  height: 60px;\n  position: relative;\n}\n\n.check-icon {\n  width: 60px;\n  height: 60px;\n  position: relative;\n  border-radius: 50%;\n  box-sizing: content-box;\n  border: 4px solid #4CAF50;\n}\n\n.check-icon::before {\n  top: 3px;\n  left: -2px;\n  transform: rotate(45deg);\n  transform-origin: 100% 50%;\n  border-radius: 0 0 0 100px;\n}\n\n.check-icon::after {\n  top: 0;\n  left: 30px;\n  transform: rotate(-45deg);\n  transform-origin: 0 50%;\n  border-radius: 100px 0 0 0;\n  animation: rotate-circle 1s ease-in-out forwards;\n}\n\n.check-icon::before, .check-icon::after {\n  content: '';\n  height: 4px;\n  background: #4CAF50;\n  display: block;\n  border-radius: 10px;\n  position: absolute;\n}\n\n.check-icon::before {\n  width: 17px;\n  animation: check-icon-before 0.8s ease-in-out forwards;\n}\n\n.check-icon::after {\n  width: 30px;\n  animation: check-icon-after 0.8s ease-in-out forwards;\n}\n\n.success-animation h3 {\n  color: #4CAF50;\n  margin-bottom: 0.5rem;\n}\n\n.success-animation p {\n  color: rgba(255, 255, 255, 0.8);\n}\n\n/* Confetti */\n.confetti {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.confetti-piece {\n  position: absolute;\n  width: 8px;\n  height: 16px;\n  background: #ffd300;\n  top: 0;\n  opacity: 0;\n  animation: confetti 1s ease-in-out forwards;\n}\n\n.confetti-piece:nth-child(1) {\n  left: 7%;\n  transform: rotate(-140deg);\n  background: #ffd300;\n  animation-delay: 0.1s;\n}\n\n.confetti-piece:nth-child(2) {\n  left: 14%;\n  transform: rotate(40deg);\n  background: #e91e63;\n  animation-delay: 0.2s;\n}\n\n.confetti-piece:nth-child(3) {\n  left: 21%;\n  transform: rotate(-170deg);\n  background: #4CAF50;\n  animation-delay: 0.3s;\n}\n\n.confetti-piece:nth-child(4) {\n  left: 28%;\n  transform: rotate(100deg);\n  background: #ffd300;\n  animation-delay: 0.4s;\n}\n\n.confetti-piece:nth-child(5) {\n  left: 35%;\n  transform: rotate(-50deg);\n  background: #e91e63;\n  animation-delay: 0.5s;\n}\n\n.confetti-piece:nth-child(6) {\n  left: 42%;\n  transform: rotate(140deg);\n  background: #4CAF50;\n  animation-delay: 0.6s;\n}\n\n.confetti-piece:nth-child(7) {\n  left: 49%;\n  transform: rotate(-20deg);\n  background: #ffd300;\n  animation-delay: 0.7s;\n}\n\n.confetti-piece:nth-child(8) {\n  left: 56%;\n  transform: rotate(70deg);\n  background: #e91e63;\n  animation-delay: 0.8s;\n}\n\n.confetti-piece:nth-child(9) {\n  left: 63%;\n  transform: rotate(-100deg);\n  background: #4CAF50;\n  animation-delay: 0.9s;\n}\n\n.confetti-piece:nth-child(10) {\n  left: 70%;\n  transform: rotate(10deg);\n  background: #ffd300;\n  animation-delay: 1s;\n}\n\n/* Light theme adjustments */\nbody.light .floating-contact-form {\n  background: linear-gradient(135deg, var(--primary-maroon), var(--primary-maroon-light));\n  box-shadow: 0 10px 30px rgba(160, 0, 40, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\nbody.light .floating-contact-form.open {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.98), rgba(248, 248, 248, 0.98));\n  border: 2px solid var(--primary-maroon);\n  box-shadow: 0 20px 40px rgba(160, 0, 40, 0.2);\n}\n\nbody.light .floating-contact-form.success {\n  background: rgba(237, 247, 237, 0.95);\n  border: 1px solid rgba(76, 175, 80, 0.3);\n}\n\nbody.light .floating-form-header {\n  background: rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\nbody.light .form-group.floating label {\n  color: rgba(160, 0, 40, 0.7);\n  font-weight: 500;\n}\n\nbody.light .form-group.floating.focused label,\nbody.light .form-group.floating input:focus + label,\nbody.light .form-group.floating textarea:focus + label,\nbody.light .form-group.floating input:not(:placeholder-shown) + label,\nbody.light .form-group.floating textarea:not(:placeholder-shown) + label {\n  color: var(--primary-maroon);\n  background: rgba(255, 255, 255, 0.95);\n  font-weight: 600;\n}\n\nbody.light .form-group.floating input,\nbody.light .form-group.floating textarea {\n  border: 2px solid rgba(160, 0, 40, 0.2);\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--text-primary);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nbody.light .form-group.floating input:focus,\nbody.light .form-group.floating textarea:focus {\n  border-color: var(--primary-maroon);\n  box-shadow: 0 0 0 3px rgba(160, 0, 40, 0.2);\n  background: rgba(255, 255, 255, 1);\n  transform: translateY(-1px);\n}\n\nbody.light .character-count {\n  color: rgba(0, 0, 0, 0.5);\n}\n\nbody.light .success-animation p {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n/* Animations */\n@keyframes check-icon-before {\n  0% { width: 0; }\n  50% { width: 0; }\n  100% { width: 17px; }\n}\n\n@keyframes check-icon-after {\n  0% { width: 0; }\n  50% { width: 0; }\n  100% { width: 30px; }\n}\n\n@keyframes rotate-circle {\n  0% { transform: rotate(-45deg); }\n  5% { transform: rotate(-45deg); }\n  12% { transform: rotate(-405deg); }\n  100% { transform: rotate(-405deg); }\n}\n\n@keyframes confetti {\n  0% {\n    opacity: 0;\n    top: 50%;\n  }\n  5% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    top: 100%;\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .contact-hero h1 {\n    font-size: 2.2rem;\n  }\n\n  .contact-hero p {\n    font-size: 1rem;\n  }\n\n  .executive-card {\n    flex-direction: column;\n    text-align: center;\n    padding: 2rem;\n}\n\n  .executive-photo {\n    width: 100px;\n    height: 100px;\n  }\n\n  .team-section h2,\n  .executive-section h2 {\n    font-size: 2rem;\n  }\n\n  .team-grid {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1.5rem;\n  }\n  \n  .floating-contact-form.open {\n    width: 90%;\n    right: 5%;\n    left: 5%;\n    bottom: 20px;\n    max-height: 80vh;\n  }\n}\n\n@media (max-width: 480px) {\n  .contact-page {\n    padding: 0;\n    width: 100vw;\n  }\n\n  .contact-hero {\n    padding: 1.5rem 0.5rem 1rem 0.5rem;\n  }\n\n  .contact-info,\n  .executive-section,\n  .team-section {\n    padding: 0 0.5rem;\n  }\n\n  .team-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .floating-contact-form {\n    bottom: 10px;\n    right: 10px;\n  }\n  \n  .floating-contact-form.open {\n    width: calc(100% - 20px);\n    right: 10px;\n    left: 10px;\n  }\n  \n  .form-group.floating label {\n    font-size: 0.9rem;\n  }\n}\n\n/* Animation for cards */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n.team-card,\n.executive-card {\n  animation: fadeInUp 0.6s ease-out forwards;\n  opacity: 0;\n}\n.team-card {\n  animation-delay: calc(var(--index) * 0.1s);\n}}\n","size_bytes":23122},"frontend/src/components/footer.css":{"content":":root {\n  --primary-color: var(--color-primary); \n  --primary-hover: var(--color-primary-700); \n  --accent-color: var(--color-accent);\n  --accent-hover: var(--color-primary); \n  --text-primary: var(--color-text);\n  --text-secondary: var(--color-text-muted);\n  --bg-dark: var(--color-bg);\n  --bg-darker: var(--color-bg-muted);\n  --bg-light: var(--color-surface);\n  --bg-lighter: var(--color-surface);\n  --border-dark: var(--color-border);\n  --border-light: var(--color-border);\n  --transition-speed: 0.3s;\n}\n\n.pms-footer {\n  background: var(--bg-darker);\n  color: var(--text-primary);\n  position: relative;\n  width: 100%;\n  font-size: 1rem;\n  z-index: 100;\n}\n\n.footer-container {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 2rem;\n}\n\n/* Full Width Newsletter Section */\n.footer-newsletter-full {\n  background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-hover) 100%);\n  padding: 3rem 0;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n}\n\n.footer-newsletter-full::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at 20% 50%, rgba(255,255,255,0.1) 0%, transparent 50%);\n  pointer-events: none;\n}\n\n.footer-newsletter-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 2rem;\n  position: relative;\n  z-index: 1;\n}\n\n.footer-newsletter-text {\n  flex: 1;\n}\n\n.footer-newsletter-text h3 {\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin: 0 0 0.5rem;\n  color: white;\n}\n\n.footer-newsletter-text p {\n  margin: 0;\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 1.1rem;\n  max-width: 500px;\n}\n\n.footer-newsletter-form {\n  flex: 1;\n  max-width: 500px;\n}\n\n.footer-newsletter-input-group {\n  display: flex;\n  gap: 0.75rem;\n}\n\n.footer-newsletter-input {\n  flex: 1;\n  padding: 1rem 1.5rem;\n  border-radius: 12px;\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 1rem;\n  transition: all var(--transition-speed) ease;\n  backdrop-filter: blur(10px);\n  min-width: 300px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.footer-newsletter-input::placeholder {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.footer-newsletter-input:focus {\n  outline: none;\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.4);\n  box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.15), 0 8px 20px rgba(0, 0, 0, 0.15);\n  transform: translateY(-1px);\n}\n\n.footer-newsletter-button {\n  padding: 1rem 2rem;\n  background: white;\n  color: var(--primary-color);\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all var(--transition-speed) ease;\n  white-space: nowrap;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.footer-newsletter-button:hover:not(:disabled) {\n  background: #f8fafc;\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n}\n\n.footer-newsletter-button:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n/* Top Section */\n.footer-top {\n  display: grid;\n  grid-template-columns: 1.5fr 2fr;\n  gap: 4rem;\n  padding: 3.5rem 0;\n}\n\n.footer-brand {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.footer-logo {\n  font-size: 2.2rem;\n  font-weight: 800;\n  margin: 0;\n  color: var(--text-primary);\n}\n\n.footer-logo span {\n  color: var(--accent-color);\n  margin-left: 4px;\n}\n\n.footer-tagline {\n  color: var(--text-secondary);\n  line-height: 1.6;\n  max-width: 300px;\n  font-size: 1.1rem;\n}\n\n.footer-social {\n  display: flex;\n  gap: 1.5rem;\n}\n\n.footer-social a {\n  color: var(--text-secondary);\n  font-size: 1.8rem;\n  transition: color var(--transition-speed) ease;\n}\n\n.footer-social a:hover {\n  color: var(--accent-color);\n  transform: translateY(-3px);\n}\n\n.footer-sections {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 3rem;\n}\n\n.footer-section {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.footer-heading {\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin: 0;\n  color: var(--text-primary);\n  position: relative;\n  padding-bottom: 0.75rem;\n}\n\n.footer-heading::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 50px;\n  height: 3px;\n  background: var(--accent-color);\n}\n\n.footer-nav {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.footer-nav li a {\n  color: var(--text-secondary);\n  text-decoration: none;\n  transition: color var(--transition-speed) ease;\n  display: inline-block;\n  position: relative;\n  font-size: 1.05rem;\n}\n\n.footer-nav li a::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background: var(--accent-color);\n  transition: width var(--transition-speed) ease;\n}\n\n.footer-nav li a:hover {\n  color: var(--text-primary);\n}\n\n.footer-nav li a:hover::after {\n  width: 100%;\n}\n\n.footer-contact {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n}\n\n.footer-contact li {\n  display: flex;\n  align-items: flex-start;\n  gap: 1rem;\n  color: var(--text-secondary);\n  line-height: 1.6;\n  font-size: 1.05rem;\n}\n\n.contact-icon {\n  color: var(--accent-color);\n  flex-shrink: 0;\n  margin-top: 0.2rem;\n  font-size: 1.2rem;\n}\n\n/* Divider */\n.footer-divider {\n  height: 1px;\n  background: var(--border-dark);\n  width: 100%;\n  margin: 1rem 0;\n}\n\n/* Bottom Section */\n.footer-bottom {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2rem 0;\n  gap: 1.5rem;\n}\n\n.footer-copyright {\n  color: var(--text-secondary);\n  font-size: 1rem;\n}\n\n.footer-cta {\n  display: flex;\n  gap: 1rem;\n}\n\n.phone {\n  transform: rotateZ(90deg);\n}\n\n.footer-cta-button {\n  padding: 0.8rem 1.8rem;\n  border-radius: 8px;\n  font-weight: 600;\n  font-size: 1rem;\n  text-decoration: none;\n  transition: all var(--transition-speed) ease;\n  color: white;\n  background: var(--primary-color);\n  border: 1px solid var(--primary-color);\n  box-shadow: 0 2px 8px rgba(37, 99, 235, 0.3);\n}\n\n.outline {\n  padding: 0.8rem 1.8rem;\n  border-radius: 8px;\n  font-weight: 600;\n  font-size: 1rem;\n  transition: all var(--transition-speed) ease;\n  color: var(--primary-color);\n  background: transparent;\n  border: 2px solid var(--primary-color);\n  text-decoration: none;\n}\n\n.outline:hover, .footer-cta-button:hover {\n  background: var(--primary-color);\n  border-color: var(--primary-color);\n  transform: translateY(-2px);\n  color: white;\n  text-decoration: none;\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4);\n}\n\n/* Light Mode Styles */\nbody.light .pms-footer {\n  background: var(--bg-lighter);\n  color: #1f2937;\n}\n\nbody.light .footer-logo,\nbody.light .footer-heading {\n  color: #111827;\n}\n\nbody.light .footer-tagline,\nbody.light .footer-nav li a,\nbody.light .footer-contact li,\nbody.light .footer-copyright {\n  color: #4b5563;\n}\n\nbody.light .footer-social a {\n  color: #6b7280;\n}\n\nbody.light .footer-social a:hover {\n  color: var(--accent-color);\n}\n\nbody.light .footer-nav li a:hover {\n  color: #111827;\n}\n\nbody.light .footer-divider {\n  background: var(--border-light);\n}\n\nbody.light .footer-newsletter-full {\n  background: linear-gradient(90deg, var(--primary-color) 0%, #a00000 100%);\n}\n\nbody.light .footer-newsletter-input {\n  background: rgba(255, 255, 255, 0.25);\n  color: white;\n}\n\nbody.light .footer-newsletter-input::placeholder {\n  color: rgba(255, 255, 255, 0.8);\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n  .footer-top {\n    gap: 3rem;\n  }\n  \n  .footer-sections {\n    gap: 2rem;\n  }\n}\n\n@media (max-width: 900px) {\n  .footer-newsletter-content {\n    flex-direction: column;\n    text-align: center;\n    gap: 1.5rem;\n  }\n  \n  .footer-newsletter-text {\n    text-align: center;\n  }\n  \n  .footer-newsletter-text p {\n    margin: 0 auto;\n  }\n  \n  .footer-newsletter-form {\n    max-width: 100%;\n    width: 100%;\n  }\n  \n  .footer-newsletter-input-group {\n    flex-direction: column;\n  }\n  \n  .footer-newsletter-input {\n    min-width: auto;\n  }\n}\n\n@media (max-width: 768px) {\n  .footer-container {\n    padding: 0 1.5rem;\n  }\n  \n  .footer-top {\n    grid-template-columns: 1fr;\n    gap: 3rem;\n    text-align: center;\n  }\n  \n  .footer-brand {\n    align-items: center;\n  }\n  \n  .footer-tagline {\n    max-width: 100%;\n  }\n  \n  .footer-sections {\n    grid-template-columns: repeat(2, 1fr);\n    text-align: center;\n    gap: 2rem;\n  }\n  \n  .footer-section {\n    align-items: center;\n  }\n  \n  .footer-heading::after {\n    left: 50%;\n    transform: translateX(-50%);\n  }\n  \n  .footer-bottom {\n    flex-direction: column-reverse;\n    gap: 1.5rem;\n  }\n\n  .footer-cta {\n    justify-content: center;\n    width: 100%;\n  }\n  \n  .footer-social {\n    justify-content: center;\n  }\n}\n\n@media (max-width: 640px) {\n  .footer-sections {\n    grid-template-columns: 1fr;\n    gap: 3rem;\n  }\n  \n  .footer-section {\n    gap: 1rem;\n  }\n  \n  .footer-heading {\n    font-size: 1.2rem;\n  }\n  \n  .footer-nav li a,\n  .footer-contact li {\n    font-size: 1rem;\n  }\n  \n  .footer-cta {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n  \n  .footer-cta-button {\n    padding: 0.75rem 1.5rem;\n    font-size: 1rem;\n  }\n  \n  .footer-newsletter-full {\n    padding: 2rem 0;\n  }\n  \n  .footer-newsletter-text h3 {\n    font-size: 1.5rem;\n  }\n  \n  .footer-newsletter-text p {\n    font-size: 1rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .footer-container {\n    padding: 0 1rem;\n  }\n  \n  .footer-top {\n    padding: 2.5rem 0;\n  }\n  \n  .footer-logo {\n    font-size: 1.8rem;\n  }\n  \n  .footer-tagline {\n    font-size: 1rem;\n  }\n  \n  .footer-social a {\n    font-size: 1.5rem;\n  }\n  \n  .footer-bottom {\n    padding: 1.5rem 0;\n  }\n  \n  .footer-copyright {\n    font-size: 0.9rem;\n    text-align: center;\n  }\n  \n  .footer-newsletter-text h3 {\n    font-size: 1.3rem;\n  }\n  \n  .footer-newsletter-text p {\n    font-size: 0.95rem;\n  }\n  \n  .footer-newsletter-input {\n    padding: 0.9rem 1.2rem;\n  }\n  \n  .footer-newsletter-button {\n    padding: 0.9rem 1.5rem;\n  }\n}\n\n/* Animation */\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.footer-section {\n  animation: fadeIn 0.5s ease forwards;\n}\n\n.footer-section:nth-child(1) { animation-delay: 0.1s; }\n.footer-section:nth-child(2) { animation-delay: 0.2s; }\n.footer-section:nth-child(3) { animation-delay: 0.3s; }\n\n.footer-newsletter-full {\n  animation: fadeIn 0.6s ease;\n}","size_bytes":10367},"frontend/src/components/header.css":{"content":".pms-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgba(10, 10, 10, 0.95);\n  background: rgba(10, 10, 10, 0.95);\n  color: var(--text-primary);\n  padding: 0.8rem 1.2rem;\n  padding: 0.8rem 1.2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  backdrop-filter: blur(12px);\n  border-bottom: 1px solid rgba(212, 55, 55, 0.2);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.4);\n  animation: headerScroll 0.5s ease-out forwards;\n  flex-wrap: wrap; /* ✅ allow wrapping for small screens */\n}\n\n/* Remove any unintended gap after the header across pages */\n.pms-header + * {\n  margin-top: 0 !important;\n}\n\n/* Ensure page content starts immediately (first child of main or container) */\nmain > *:first-child,\n.main-content > *:first-child,\n#root > main:first-child,\nbody > main:first-child {\n  margin-top: 0 !important;\n  padding-top: 0 !important;\n}\n\nbody.light .pms-header {\n  background: rgba(245, 245, 245, 0.95);\n  border-bottom: 1px solid rgba(128, 0, 0, 0.15);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: none;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  transition: all var(--transition-speed) ease;\n}\n\n.logo-image {\n  height: 42px;\n  width: auto;\n  filter: drop-shadow(0 0 4px rgba(128, 0, 0, 0.9));\n  transition: transform 0.3s ease;\n}\n\nbody.light .logo-image {\n  filter: drop-shadow(0 0 4px rgba(128, 0, 0, 0.3));\n}\n\n.logo:hover .logo-image {\n  transform: scale(1.08);\n}\n\n.logo-link {\n  font-size: 1.3rem;\n    background: linear-gradient(90deg, var(--text-primary), #800000);\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n  text-decoration: none;\n}\n\nbody.light .logo-link {\n  text-shadow: none;\n  color: rgba(128, 0, 0, 0.9);\n}\n\n.logo-link:hover {\n  text-shadow: 0 0 8px rgba(128, 0, 0, 0.9);\n  text-decoration: none;\n}\n\nbody.light .logo-link:hover {\n  text-shadow: 0 0 8px rgba(128, 0, 0, 0.4);\n}\n\nbody.dark .logo-link {\n  background: linear-gradient(90deg, var(--text-primary), #800000);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: none; \n  font-weight: 700; \n  transition: all 0.3s ease;\n}\n\nbody.dark .logo-link:hover {\n  text-shadow: 0 0 8px rgba(128, 0, 0, 0.45), 0 0 16px rgba(128, 0, 0, 0.35);\n}\n\n.nav-links {\n  display: flex;\n  gap: 2.5rem;\n  gap: 2.5rem;\n  align-items: center;\n  flex-wrap: wrap; /* ✅ allow wrapping for narrow widths */\n justify-content: center;\n}\n\n.nav-links a, .nav-links .nav-link {\n  position: relative;\n  color: #6b7280;\n  position: relative;\n  color: #6b7280;\n  text-decoration: none;\n  font-weight: 500;\n  transition: color 0.3s ease;\n}\n\n.dark .nav-links a {\n  color: #d1d5db;\n}\n\n.dark .nav-links a:hover {\n  color: #800000;\n}\n\n.nav-links a::after, .nav-links .nav-link::after {\n  content: '';\n  position: absolute;\n  bottom: -4px;\n  left: 0;\n  bottom: -4px;\n  left: 0;\n  width: 0;\n  height: 2px;\n  transition: width 0.3s ease;\n}\n\n.nav-links a:hover {\n  text-decoration: none; /* prevent underline on hover */\n}\n\n.nav-links a:hover::after, .nav-links .nav-link:hover::after {\n  width: 100%;\n  width: 100%;\n}\n\nbody.light .nav-links a {\n  color: var(--text-secondary);\n}\n\nbody.light .nav-links a:hover {\n  color: #800000;\n}\n\nbody.light .nav-links a::after {\n  background: var(--maroon-800);\n}\n\n.dark .nav-links a::after {\n  background: #800000;\n}\n\n/* Active link styling */\n.nav-link.active {\n  color: var(--primary-maroon);\n}\n.nav-link.active::after {\n  width: 100%;\n  background: var(--primary-maroon);\n}\nbody.light .nav-link.active {\n  color: var(--primary-maroon);\n}\nbody.light .nav-link.active::after {\n  width: 100%;\n  background: var(--primary-maroon);\n}\n\n/* Theme Toggle */\n.theme-toggle-btn {\n  margin-left: 1rem;\n  padding: 0.5rem;\n  cursor: pointer;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  border-radius: 20px;\n  backdrop-filter: blur(4px);\n  background: rgba(128, 0, 0, 0.85);\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(128, 0, 0, 0.85);\n}\n\n.theme-toggle-btn svg {\n  width: 20px;\n  height: 20px;\n  transition: transform 0.3s ease;\n  display: block;\n  color: inherit;\n  fill: none;\n  background: transparent;\n}\n\n.theme-toggle-btn:hover svg {\n  transform: scale(1.1);\n}\n\nbody.dark .theme-toggle-btn {\n  background: rgba(128, 0, 0, 0.85);\n  color: #fdfdfd;\n}\n\n/* Login Button */\n.login-btn {\n  font-weight: 600;\n  border-radius: 4px;\n  padding: 0.1rem 1rem;\n  padding: 0.1rem 1rem;\n  transition: all var(--transition-speed) ease;\n  border: 2px solid transparent;\n  letter-spacing: 0.5px;\n  background: #800000;\n  color: whitesmoke !important; \n  box-shadow: 0 2px 8px rgba(128, 0, 0, 0.3);\n}\n\n.login-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(128, 0, 0, 0.3);\n} \n\nbody.light .login-btn:hover {\n  background: transparent;\n  color: #800000 !important;\n  border-color: #800000;\n}\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.logo-image {\n  height: 50px;\n  width: auto;\n}\n\n.logo-link {\n  font-size: 1.2rem;\n  font-weight: bold;\n  text-decoration: none;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* Centers \"Portal\" under \"Campus Recruitment\" */\n  line-height: 1.2;\n}\n\n.line1, .line2 {\n  display: block;\n}\n\n.line2{\n   margin-left: -32px; \n}\n\n\nbody.dark .login-btn {\n  color: #fdfdfd;\n  text-shadow: 0 1px 3px rgba(222, 216, 216, 0.5); \n}\n\nbody.dark .login-btn:hover {\n  border-color: #800000;\n  color: #fff; \n}\n\n/* ===== RESPONSIVE BREAKPOINTS ===== */\n\n/* Large tablets and small laptops (1024px and down) */\n@media (max-width: 1024px) {\n  .pms-header {\n    padding: 0.7rem 1rem;\n  }\n  \n  .nav-links {\n    gap: 2rem;\n  }\n  \n  .logo-link {\n    font-size: 1.2rem;\n  }\n  \n  .logo-image {\n    height: 38px;\n  }\n}\n\n/* Tablets (768px and down) */\n@media (max-width: 768px) {\n  .pms-header {\n    padding: 0.6rem 0.8rem;\n    gap: 1rem;\n  }\n\n\n  .logo {\n    justify-content: center;\n    gap: 0.8rem;\n  }\n\n  .logo-link {\n    font-size: 1.1rem;\n  }\n  \n  .logo-link {\n    font-size: 1.1rem;\n    letter-spacing: 0.3px;\n  }\n  \n  .logo-image {\n    height: 36px;\n  }\n  \n  .theme-toggle-btn {\n    margin-left: 0.5rem;\n    padding: 0.4rem;\n  }\n  \n  .theme-toggle-btn svg {\n    width: 18px;\n    height: 18px;\n  }\n  \n  .login-btn {\n    padding: 0.4rem 0.8rem;\n    font-size: 0.9rem;\n  }\n}\n\n/* Small tablets and large phones (640px and down) */\n@media (max-width: 640px) {\n  .pms-header {\n    padding: 0.5rem 0.6rem;\n  }\n  \n  .nav-links {\n    gap: 1.2rem;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n  }\n  \n  .nav-links a {\n    font-size: 0.85rem;\n    white-space: nowrap;\n  }\n  \n  .logo {\n    display: none;\n  }\n  \n  .logo-image {\n    height: 32px;\n  }\n  \n  .theme-toggle-btn {\n    padding: 0.35rem;\n  }\n  \n  .theme-toggle-btn svg {\n    width: 16px;\n    height: 16px;\n  }\n  \n  .login-btn {\n    padding: 0.35rem 0.7rem;\n    font-size: 0.85rem;\n  }\n  .logo {\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n\n  .logo-image {\n    height: 40px;\n  }\n\n  .logo-link {\n    font-size: 1rem;\n  }\n}\n\n/* Mobile phones (480px and down) - Hide logo */\n@media (max-width: 480px) {\n  .logo {\n    display: none;\n  }\n  \n  .pms-header {\n    justify-content: center;\n    padding: 0.5rem;\n    flex-direction: column;\n    gap: 0.8rem;\n  }\n  \n  .nav-links {\n    order: 1;\n    margin-top: 0;\n    gap: 1rem;\n    justify-content: space-around;\n    width: 100%;\n  }\n  \n  .nav-links a {\n    font-size: 0.8rem;\n    padding: 0.2rem 0.4rem;\n  }\n  \n  .theme-toggle-btn {\n    position: absolute;\n    top: 0.5rem;\n    right: 4rem;\n    margin: 0;\n  }\n  \n  .login-btn {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    padding: 0.3rem 0.6rem;\n    font-size: 0.8rem;\n  }\n}\n\n/* Very small phones (360px and down) */\n@media (max-width: 360px) {\n  .pms-header {\n    padding: 0.4rem;\n  }\n  .logo{\n    display: none;\n  }\n  .nav-links {\n    gap: 0.8rem;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n  \n  .nav-links a {\n    font-size: 0.75rem;\n    padding: 0.1rem 0.3rem;\n  }\n  \n  .theme-toggle-btn {\n    right: 3.5rem;\n    padding: 0.25rem;\n  }\n  \n  .theme-toggle-btn svg {\n    width: 14px;\n    height: 14px;\n  }\n  \n  .login-btn {\n    right: 0.3rem;\n    padding: 0.25rem 0.5rem;\n    font-size: 0.75rem;\n  }\n}\n\n/* Landscape orientation adjustments for mobile */\n@media (max-height: 500px) and (orientation: landscape) {\n  .pms-header {\n    padding: 0.3rem 0.5rem;\n    min-height: 50px;\n  }\n  \n  .nav-links {\n    gap: 1.5rem;\n    margin-top: 0;\n  }\n  \n  .nav-links a {\n    font-size: 0.8rem;\n  }\n  \n  .theme-toggle-btn,\n  .login-btn {\n    position: relative;\n    top: auto;\n    right: auto;\n  }\n}\n\n/* Ultra-wide screens (1440px and up) */\n@media (min-width: 1440px) {\n  .pms-header {\n    padding: 1rem 2rem;\n  }\n  \n  .nav-links {\n    gap: 3rem;\n  }\n  \n  .logo-link {\n    font-size: 1.4rem;\n  }\n  \n  .logo-image {\n    height: 48px;\n  }\n}\n\n/* ===== GLOBAL: Hide scrollbars app-wide while preserving scroll ===== */\nhtml, body {\n  -ms-overflow-style: none; /* IE and old Edge */\n  scrollbar-width: none;   /* Firefox */\n}\nhtml::-webkit-scrollbar,\nbody::-webkit-scrollbar,\n*::-webkit-scrollbar {\n  width: 0;\n  height: 0;               /* Chrome, Safari, new Edge */\n}\n\n/* Authentication Dropdown Styles */\n.auth-dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n.dropdown-trigger {\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  border: none;\n  text-decoration: none;\n}\n\n.dropdown-trigger:hover {\n  background-color: #0056b3;\n}\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  right: 0;\n  background-color: white;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  border-radius: 4px;\n  z-index: 1000;\n  overflow: hidden;\n}\n\n.auth-dropdown:hover .dropdown-content {\n  display: block;\n}\n\n.dropdown-item {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n  font-size: 14px;\n  border-bottom: 1px solid #f1f1f1;\n}\n\n.dropdown-item:last-child {\n  border-bottom: none;\n}\n\n.dropdown-item:hover {\n  background-color: #f1f1f1;\n  color: #007bff;\n}\n","size_bytes":10263},"frontend/src/components/home.css":{"content":"/* Maroon Theme Variables */\n:root {\n  --bg-dark: #600018;\n  --bg-darker: #600018;\n  --text-primary: #ffffff;\n  --text-secondary: #e0e0e0;\n  --primary-maroon: #800020;\n  --primary-maroon-dark: #32010d;\n  --primary-maroon-light: #a00028;\n  --accent-gold: #a00028;\n  --card-bg-dark: rgba(30, 30, 30, 0.85);\n  --card-bg-light: rgba(255, 255, 255, 0.85);\n  --border-radius: 8px;\n  --transition-speed: 0.3s;\n}\n\n/* Global Styles */\n.home-main {\n  min-height: 100vh;\n  background-color: var(--bg-dark);\n  color: var(--text-primary);\n  overflow-x: hidden;\n  width: 100vw;\n  max-width: 100vw;\n  box-sizing: border-box;\n}\n\n.container {\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  box-sizing: border-box;\n  overflow-x: hidden;\n}\n\n/* Light Theme Variables */\nbody.light {\n  --bg-dark: #ffffff;\n  --bg-darker: #f8f5f5;\n  --text-primary: #1a1a1a;\n  --text-secondary: #4a4a4a;\n  --primary-maroon: #a10028;\n  --primary-maroon-dark: #600018;\n  --primary-maroon-light: #a00028;\n  --accent-gold: #a00028;\n  --card-bg-dark: rgba(245, 245, 245, 0.85);\n  --card-bg-light: rgba(255, 255, 255, 0.85);\n}\n\n/* Override global styles for light mode */\nbody.light .home-main {\n  background-color: var(--bg-dark);\n  color: var(--text-primary);\n}\n\nbody.light .container {\n  background-color: var(--bg-dark);\n  color: var(--text-primary);\n}\n\n/* Hero Section */\n.hero-section {\n  position: relative;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.hero-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-size: cover;\n  background-position: center;\n  z-index: 1;\n}\n\n.hero-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to right,\n    rgba(18, 18, 18, 0.85),\n    rgba(18, 18, 18, 0.6)\n  );\n  z-index: 2;\n}\n\n.hero-content {\n  position: relative;\n  z-index: 3;\n  text-align: center;\n  max-width: 70rem;\n  margin: 0 auto;\n  padding: 0 20px;\n  width: 100%;\n}\n\n.hero-title {\n  font-size: 3rem;\n  font-weight: 800;\n  margin-bottom: 1.5rem;\n  line-height: 1.2;\n  background-color: white;\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n}\n\n.hero-subtitle {\n  display: block;\n  font-size: 1.875rem;\n  color: rgb(254, 219, 219);\n  font-weight: 600;\n  margin-top: 0.5rem;\n}\n\n.hero-description {\n  font-size: 1.25rem;\n  margin-bottom: 2rem;\n  color: var(--text-secondary);\n  line-height: 1.6;\n  font-weight: 600;\n}\n\n.hero-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  justify-content: center;\n}\n\nbody.light .hero-background {\n  background-color: #f5f5f5;\n}\n\nbody.light .hero-overlay {\n  background: linear-gradient(\n    to right,\n    rgba(255, 255, 255, 0.8),\n    rgba(255, 255, 255, 0.5)\n  );\n}\n\nbody.light .hero-content { width: 100%; max-width: 100%; }\n\nbody.light .hero-title {\n  color: var(--primary-maroon-dark);\n}\nbody.light .hero-subtitle {\n  color: var(--primary-maroon);\n}\n\nbody.light .hero-description {\n  color: var(--text-secondary);\n  font-weight: 600;\n}\n\n/* Button Styles */\n.btn {\n  padding: 1rem 2rem;\n  border-radius: var(--border-radius);\n  font-size: 1.125rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all var(--transition-speed) ease;\n  border: none;\n  text-decoration: none;\n  display: inline-block;\n  text-align: center;\n}\n\n.btn-primary {\n  background-color: var(--primary-maroon);\n  color: var(--text-primary);\n}\n\n.btn-primary:hover {\n  transform: scale(1.05);\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n  background: linear-gradient(\n    to right,\n    var(--primary-maroon-light),\n    var(--primary-maroon)\n  );\n}\n\n.btn-secondary {\n  border: 2px solid var(--primary-maroon-dark);\n  background-color: var(--primary-maroon);\n  color: white;\n}\n\n.btn-secondary:hover {\n  background: var(--primary-maroon-light);\n  color: var(--text-primary);\n}\n\n.btn-outline {\n  border: 2px solid var(--primary-maroon);\n  color: var(--primary-maroon);\n  background: transparent;\n}\n\n.btn-outline:hover {\n  background: var(--primary-maroon); /* maroon theme */\n  color: var(--text-primary);        /* matching text color */\n  transform: scale(1.05);            /* subtle scale effect from master */\n}\n\n\nbody.light .btn-primary {\n  background-color: #800020;\n  color: white;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n}\n\nbody.light .btn-primary:hover {\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n  background-color: #a00028;\n}\n\nbody.light .btn-secondary {\n  border: 2px solid var(--primary-maroon);\n  color: var(--primary-maroon);\n  background: transparent;\n}\n\nbody.light .btn-secondary:hover {\n  background: var(--primary-maroon);\n  color: white;\n}\n\nbody.light .btn-outline {\n  border: 2px solid var(--primary-maroon);\n  color: var(--primary-maroon);\n  background: transparent;\n}\n\nbody.light .btn-outline:hover {\n  background: var(--primary-maroon);\n  color: var(--text-primary);\n}\n\n/* Features Section */\n.features-section {\n  padding: 2.5rem 0;\n  background: var(--bg-dark);\n  position: relative;\n  overflow: hidden;\n}\n\n.features-section::before {\n  content: none;\n}\n\n.section-header {\n  text-align: center;\n  margin-bottom: 1.5rem;\n}\n\n.section-title {\n  font-size: 2.5rem;\n  font-weight: 800;\n  margin-bottom: 1rem;\n  background-color: white;\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  display: inline-block;\n}\n\n.section-description {\n  font-size: 1.25rem;\n  color: var(--text-secondary);\n  max-width: 48rem;\n  margin: 0 auto;\n  line-height: 1.6;\n}\n\n.features-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 1.5rem;\n  position: relative;\n  z-index: 1;\n}\n\n.feature-card {\n  background: rgba(30, 30, 30, 0.8);\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  box-shadow: none;\n  border: 1px solid rgba(128, 0, 32, 0.1);\n  transition: all var(--transition-speed) ease;\n  backdrop-filter: blur(8px);\n}\n\n.feature-card:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);\n  border-color: rgba(128, 0, 32, 0.3);\n}\n\n.feature-icon-wrapper {\n  color: var(--primary-maroon);\n  margin-bottom: 1.5rem;\n}\n\n.feature-icon {\n  width: 2.5rem;\n  height: 2.5rem;\n}\n\n.feature-title {\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin-bottom: 1rem;\n  color: var(--text-primary);\n}\n\n.feature-description {\n  color: var(--text-secondary);\n  line-height: 1.6;\n}\n\nbody.light .features-section {\n  background: var(--bg-dark);\n}\n\nbody.light .feature-card {\n  background: rgba(255, 255, 255, 0.8);\n  box-shadow: none;\n  border: 1px solid rgba(128, 0, 32, 0.1);\n  backdrop-filter: none;\n  color: var(--text-primary);\n}\n\nbody.light .feature-card:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\n  border-color: rgba(128, 0, 32, 0.3);\n}\n\nbody.light .feature-icon-wrapper {\n  color: var(--primary-maroon);\n}\n\nbody.light .feature-title {\n  color: var(--text-primary);\n}\n\nbody.light .section-title {\n  color: var(--maroon-700);\n}\n\nbody.light .feature-description {\n  color: var(--text-secondary);\n}\n\n/* Alumni Section */\n.alumni-section {\n  padding: 2.5rem 0;\n  background: var(--bg-dark);\n  position: relative;\n  overflow: hidden;\n}\n\n.alumni-section::before {\n  content: none;\n}\n\n.alumni-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 2rem;\n  position: relative;\n  z-index: 1;\n}\n\n.alumni-card {\n  background: rgba(40, 40, 40, 0.8);\n  padding: 1.5rem;\n  border-radius: var(--border-radius);\n  text-align: center;\n  transition: all var(--transition-speed) ease;\n  border: 1px solid rgba(128, 0, 32, 0.1);\n  backdrop-filter: blur(6px);\n}\n\n.alumni-card:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);\n  border-color: rgba(128, 0, 32, 0.3);\n}\n\n.alumni-image {\n  width: 6rem;\n  height: 6rem;\n  border-radius: 50%;\n  margin: 0 auto 1rem;\n  object-fit: cover;\n  border: 3px solid var(--primary-maroon);\n  box-shadow: 0 0 15px rgba(128, 0, 32, 0.2);\n  display: block;\n}\n\n.alumni-name {\n  font-size: 1.125rem;\n  font-weight: 700;\n  margin-bottom: 0.25rem;\n  color: var(--text-primary);\n}\n\n.alumni-company {\n  color: gray;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n\n.alumni-package {\n  font-size: 1.5rem;\n  font-weight: 800;\n  color: rgb(255, 210, 210);\n}\n\nbody.light .alumni-section {\n  background: var(--bg-dark);\n}\n\nbody.light .alumni-card {\n  background: rgba(255, 255, 255, 0.8);\n  border: 1px solid rgba(128, 0, 32, 0.1);\n  backdrop-filter: none;\n  color: var(--text-primary);\n  transition: all var(--transition-speed) ease;\n}\n\nbody.light .alumni-card:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\n  border-color: rgba(128, 0, 32, 0.3);\n}\n\nbody.light .alumni-image {\n  border: 3px solid var(--primary-maroon);\n  box-shadow: 0 0 15px rgba(128, 0, 32, 0.3);\n}\n\nbody.light .alumni-name {\n  color: var(--text-primary);\n}\n\nbody.light .alumni-company,\nbody.light .alumni-package {\n  color: var(--primary-maroon);\n}\n\n/* Partners Section */\n.partners-section {\n  padding: 2.5rem 0;\n  background: var(--bg-dark);\n  position: relative;\n  overflow: hidden;\n}\n\n.partners-section::before {\n  content: none;\n}\n\n.partners-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 2rem;\n  position: relative;\n  z-index: 1;\n}\n\n.partner-card {\n  background: rgba(30, 30, 30, 0.8);\n  padding: 1.5rem;\n  border-radius: var(--border-radius);\n  box-shadow: none;\n  transition: all var(--transition-speed) ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  border: 1px solid rgba(128, 0, 32, 0.1);\n}\n\n.partner-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);\n  border-color: rgba(128, 0, 32, 0.3);\n}\n\n.partner-logo {\n  max-height: 3rem;\n  max-width: 100%;\n  object-fit: contain;\n  filter: brightness(0) invert(1);\n  transition: all var(--transition-speed) ease;\n}\n\n.partner-card:hover .partner-logo {\n  filter: brightness(1) invert(0) drop-shadow(0 0 5px rgba(160, 160, 160, 0.5));\n}\n\nbody.light .partners-section {\n  background: var(--bg-dark);\n}\n\nbody.light .partner-card {\n  background: rgba(255, 255, 255, 0.8);\n  box-shadow: none;\n  border: 1px solid rgba(128, 0, 32, 0.1);\n  transition: all var(--transition-speed) ease;\n}\n\nbody.light .partner-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\n  border-color: rgba(128, 3, 34, 0.3);\n}\n\nbody.light .partner-logo {\n  filter: brightness(1) invert(0);\n  transition: all var(--transition-speed) ease;\n}\n\nbody.light .partner-card:hover .partner-logo {\n  filter: brightness(1) invert(0) drop-shadow(0 0 5px rgba(255, 160, 184, 0.5));\n}\n\n/* Stats Section */\n.stats-section {\n  padding: 2.5rem 0;\n  background: var(--bg-dark);\n  position: relative;\n  overflow: hidden;\n}\n\n.stats-section::before {\n  content: none;\n}\n\n.stats-section::after { content: none; }\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 2rem;\n  text-align: center;\n  position: relative;\n  z-index: 1;\n}\n\n.stat-item {\n  background: rgba(18, 18, 18, 0.8);\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  border: 1px solid rgba(128, 0, 32, 0.2);\n  backdrop-filter: blur(8px);\n\n  /* Add smooth animation */\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.stat-item:hover {\n  transform: translateY(-10px); /* Moves upward */\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4); /* Adds depth */\n}\n\n.stat-number {\n  font-size: 3rem;\n  font-weight: 800;\n  margin-bottom: 0.5rem;\n  color: var(--maroon-500);\n}\n\n.stat-label {\n  font-size: 1.125rem;\n  color: var(--text-primary);\n  opacity: 0.9;\n}\n\n/* CORRECTED LIGHT MODE STYLES */\nbody.light .stats-section {\n  /* This change removes the patchy linear-gradient background */\n  background: transparent; \n  position: relative;\n  overflow: hidden;\n}\n\nbody.light .stats-section::before {\n  background: url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23800020' fill-opacity='0.03'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n  opacity: 0.15;\n}\n\nbody.light .stat-item {\n  /* Using a solid white background with transparency for the cards */\n  background: rgba(255, 255, 255, 0.8);\n  border: 1px solid rgba(128, 0, 32, 0.1);\n  backdrop-filter: none;\n  color: var(--text-primary);\n}\n\nbody.light .stat-number {\n  color: var(--primary-maroon);\n}\n\nbody.light .stat-label {\n  color: var(--text-primary);\n  opacity: 0.9;\n}\n\n/* CTA Section */\n.cta-section {\n  padding: 2.5rem 0;\n  background: var(--bg-dark);\n  position: relative;\n  overflow: hidden;\n}\n\n.cta-section::before {\n  content: none;\n}\n\n.cta-section::after { content: none; }\n\n.cta-container {\n  max-width: 70rem;\n  margin: 0 auto;\n  text-align: center;\n  padding: 0 20px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n}\n\n.cta-title {\n  font-size: 2.5rem;\n  font-weight: 800;\n  margin-bottom: 1.5rem;\n  background-color: #ffd2dd;\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n}\n\n.cta-description {\n  font-size: 1.25rem;\n  color: var(--text-secondary);\n  margin-bottom: 1.25rem;\n  line-height: 1.6;\n}\n\n.cta-buttons {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.cta-buttons .btn-outline {\n  color: white;\n}\n\nbody.light .btn-outline:hover {\n  box-shadow: 0 15px 20px -5px rgba(128, 0, 32, 0.4);\n  background-color: #a00028;\n  color: white;\n}\n\nbody.light .cta-section {\n  background: var(--bg-dark);\n  position: relative;\n  overflow: hidden;\n}\n\nbody.light .cta-section::before {\n  background: radial-gradient(\n    circle at center,\n    rgba(128, 0, 32, 0.05) 0%,\n    transparent 70%\n  );\n}\n\nbody.light .cta-title {\n  background: linear-gradient(\n    90deg,\n    var(--text-primary),\n    var(--primary-maroon)\n  );\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n}\n\nbody.light .cta-description {\n  color: var(--text-secondary);\n}\n\n/* Light Mode CTA Buttons Layout */\nbody.light .cta-buttons {\n  flex-direction: row;\n  gap: 1rem;\n  justify-content: center;\n}\n\n/* Responsive Design */\n@media (min-width: 640px) {\n  .hero-buttons {\n    flex-direction: row;\n  }\n\n  .cta-buttons {\n    flex-direction: row;\n  }\n}\n\n@media (min-width: 768px) {\n  .hero-title {\n    font-size: 4.5rem;\n  }\n\n  .hero-subtitle {\n    font-size: 2.25rem;\n  }\n\n  .hero-description {\n    font-size: 1.5rem;\n  }\n\n  .section-title {\n    font-size: 3rem;\n  }\n\n  .cta-title {\n    font-size: 3rem;\n  }\n\n  .stat-number {\n    font-size: 3.75rem;\n  }\n\n  .features-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (min-width: 1024px) {\n  .features-grid {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  .alumni-grid {\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .partners-grid {\n    grid-template-columns: repeat(5, 1fr);\n  }\n\n  .stats-grid {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n\n@media (min-width: 1280px) {\n  .features-grid {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n","size_bytes":15241},"frontend/src/components/home.jsx":{"content":"\n\nimport cgcBack from \"../assets/OIP.jpg\";\nimport \"./home.css\";\nimport { Star, Users, TrendingUp, Calendar, FileText, Award, Target, Shield, Zap, Globe, BookOpen, Briefcase } from 'lucide-react';\n\nfunction Home() {\n  const features = [\n    {\n      icon: <Users className=\"feature-icon\" />,\n      title: \"Student Profile Management\",\n      description: \"Comprehensive student database with academic records, skills, and placement status tracking.\"\n    },\n    {\n      icon: <Briefcase className=\"feature-icon\" />,\n      title: \"Company Registration\",\n      description: \"Streamlined process for companies to register and post job opportunities.\"\n    },\n    {\n      icon: <Calendar className=\"feature-icon\" />,\n      title: \"Interview Scheduling\",\n      description: \"Automated scheduling system for interviews, tests, and placement drives.\"\n    },\n    {\n      icon: <FileText className=\"feature-icon\" />,\n      title: \"Resume Builder\",\n      description: \"Built-in resume builder with templates and optimization suggestions.\"\n    },\n\n    {\n      icon: <Target className=\"feature-icon\" />,\n      title: \"Job Matching\",\n      description: \"AI-powered job matching based on student profiles and company requirements.\"\n    },\n    {\n      icon: <Shield className=\"feature-icon\" />,\n      title: \"Secure Data Management\",\n      description: \"Enterprise-grade security for all student and company information.\"\n    },\n    {\n      icon: <Zap className=\"feature-icon\" />,\n      title: \"Instant Notifications\",\n      description: \"Real-time notifications for new opportunities, updates, and announcements.\"\n    },\n    {\n      icon: <BookOpen className=\"feature-icon\" />,\n      title: \"Training Resources\",\n      description: \"Placement prep materials, mock interviews, skill assessments, and actual questions asked to seniors in previous interviews.\"\n    }\n\n  ];\n\n  const alumni = [\n    { name: \"Arjun Sharma\", company: \"Google\", package: \"₹45 LPA\", image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\" },\n    {\n      name: \"Priya Patel\",\n      company: \"Microsoft\",\n      package: \"₹42 LPA\",\n      image: \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=faces\"\n    }\n    ,\n    { name: \"Rohit Kumar\", company: \"Amazon\", package: \"₹38 LPA\", image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Sneha Singh\", company: \"Apple\", package: \"₹50 LPA\", image: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Vikash Gupta\", company: \"Meta\", package: \"₹46 LPA\", image: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Anjali Rani\", company: \"Netflix\", package: \"₹40 LPA\", image: \"https://images.unsplash.com/photo-1489424731084-a5d8b219a5bb?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Manish Verma\", company: \"Adobe\", package: \"₹36 LPA\", image: \"https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Kavya Reddy\", company: \"Salesforce\", package: \"₹35 LPA\", image: \"https://images.unsplash.com/photo-1517841905240-472988babdf9?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Deepak Yadav\", company: \"Oracle\", package: \"₹32 LPA\", image: \"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=150&h=150&fit=crop&crop=face\" },\n    { name: \"Ritu Sharma\", company: \"Uber\", package: \"₹34 LPA\", image: \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face\" }\n  ];\n\n\n\n  const companies = [\n    { name: \"Google\", logo: \"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\" },\n    { name: \"Microsoft\", logo: \"https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg\" },\n    { name: \"Amazon\", logo: \"https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg\" },\n    { name: \"Apple\", logo: \"https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg\" },\n    { name: \"Meta\", logo: \"https://upload.wikimedia.org/wikipedia/commons/7/7b/Meta_Platforms_Inc._logo.svg\" },\n\n    { name: \"Oracle\", logo: \"https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg\" },\n    { name: \"IBM\", logo: \"https://upload.wikimedia.org/wikipedia/commons/5/51/IBM_logo.svg\" },\n    { name: \"Intel\", logo: \"https://upload.wikimedia.org/wikipedia/commons/7/7d/Intel_logo_%282006-2020%29.svg\" },\n    { name: \"Cisco\", logo: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Cisco_logo_blue_2016.svg\" },\n    { name: \"HP\", logo: \"https://upload.wikimedia.org/wikipedia/commons/a/ad/HP_logo_2012.svg\" },\n    { name: \"Dell\", logo: \"https://upload.wikimedia.org/wikipedia/commons/1/18/Dell_logo_2016.svg\" },\n    { name: \"Accenture\", logo: \"https://upload.wikimedia.org/wikipedia/commons/c/cd/Accenture.svg\" },\n    { name: \"Deloitte\", logo: \"https://upload.wikimedia.org/wikipedia/commons/1/15/Deloitte_Logo.png\" },\n\n    { name: \"Wipro\", logo: \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Wipro_Primary_Logo_Color_RGB.svg\" },\n    { name: \"Uber\", logo: \"https://upload.wikimedia.org/wikipedia/commons/5/58/Uber_logo_2018.svg\" },\n\n  ];\n\n  return (\n    <main className=\"home-main\">\n      {/* Hero Section */}\n      <section className=\"hero-section\">\n        <div className=\"hero-background\" style={{ backgroundImage: `url(${cgcBack})` }}>\n          <div className=\"hero-overlay\"></div>\n        </div>\n\n        <div className=\"hero-content\">\n          <h1 className=\"hero-title\">\n            Department of Computer Science \n            <span className=\"hero-subtitle\">\n              Campus Recruitment Portal\n            </span>\n          </h1>\n          <p className=\"hero-description\">\n            Empowering Dreams, Creating Futures - Your Gateway to Success\n          </p>\n          <div class=\"hero-buttons\">\n                <a href=\"http://localhost:5173/jobs\" class=\"btn btn-primary\">\n                    <i class=\"fas fa-search\"></i>Explore Opportunities\n                </a>\n                <a href=\"http://localhost:5173/about\" class=\"btn btn-secondary\">\n                    <i class=\"fas fa-info-circle\"></i>Learn More\n                </a>\n            </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section id=\"features\" className=\"features-section\">\n        <div className=\"container\">\n          <div className=\"section-header\">\n            <h2 className=\"section-title\">\n              Comprehensive Features\n            </h2>\n            <p className=\"section-description\">\n              Our advanced Campus Recruitment Portal offers everything you need for successful campus placements\n            </p>\n          </div>\n\n          <div className=\"features-grid\">\n            {features.map((feature, index) => (\n              <div key={index} className=\"feature-card\">\n                <div className=\"feature-icon-wrapper\">\n                  {feature.icon}\n                </div>\n                <h3 className=\"feature-title\">\n                  {feature.title}\n                </h3>\n                <p className=\"feature-description\">\n                  {feature.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Alumni Success Stories */}\n      <section className=\"alumni-section\">\n        <div className=\"container\">\n          <div className=\"section-header\">\n            <h2 className=\"section-title\">\n              Alumni Success Stories\n            </h2>\n            <p className=\"section-description\">\n              Our graduates are making their mark at the world's leading companies\n            </p>\n          </div>\n\n          {/* <div className=\"alumni-grid\">\n            {alumni.map((alum, index) => (\n              <div key={index} className=\"alumni-card\">\n                <img\n                  src={alum.image}\n                  alt={alum.name}\n                  className=\"alumni-image\"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = \"https://via.placeholder.com/150/121212/FFFFFF?text=Alumni\";\n                  }}\n                />\n                <h3 className=\"alumni-name\">\n                  {alum.name}\n                </h3>\n                <p className=\"alumni-company\">\n                  {alum.company}\n                </p>\n                <p className=\"alumni-package\">\n                  {alum.package}\n                </p>\n              </div>\n            ))}\n          </div> */}\n        </div>\n      </section>\n\n      {/* Partnership Section */}\n      <section className=\"partners-section\">\n        <div className=\"container\">\n          <div className=\"section-header\">\n            <h2 className=\"section-title\">\n              Our Industry Partners\n            </h2>\n            <p className=\"section-description\">\n              Collaborating with industry leaders to provide the best opportunities for our students\n            </p>\n          </div>\n\n          {/* <div className=\"partners-grid\">\n            {companies.map((company, index) => (\n              <div key={index} className=\"partner-card\">\n                <img\n                  src={company.name==='Deloitte'?\"/deloitte-seeklogo.svg\":\n                    company.logo}\n                  alt={company.name}\n                  className=\"partner-logo\"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = `https://placehold.co/150x60/121212/FFFFFF?text=${company.name}`;\n                  }}\n\n                />\n              </div>\n            ))} */}\n          {/* </div> */}\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"stats-section\">\n        <div className=\"container\">\n          <div className=\"stats-grid\">\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">95%</div>\n              <div className=\"stat-label\">Placement Rate</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">20+</div>\n              <div className=\"stat-label\">Companies</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">₹12L</div>\n              <div className=\"stat-label\">Highest Package</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">5000+</div>\n              <div className=\"stat-label\">Students Placed</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"cta-section\">\n        <div className=\"cta-container\">\n          <h2 className=\"cta-title\">\n            Ready to Launch Your Career?\n          </h2>\n          <p className=\"cta-description\">\n            Join thousands of successful alumni who started their journey at CGC Jhanjeri\n          </p>\n          <div className=\"cta-buttons\">\n            <a href=\"/signin\" className=\"btn btn-primary\">\n              Register Now\n            </a>\n            <a href=\"/Contact\" className=\"btn btn-outline\">\n              Contact Us\n            </a>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default Home;\n","size_bytes":11357},"frontend/src/components/interviewExperience.css":{"content":".ie-hero {\n  width: 100vw;\n  margin-left: calc(50% - 50vw);\n  margin-right: calc(50% - 50vw);\n  background: #600018;\n  padding: 2.5rem 0;\n  text-align: center;\n}\n.ie-hero .ie-title { color: #fff; }\n.ie-hero .ie-desc { color: #f3f4f6; margin-bottom: 0; }\n.ie-text {\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  line-clamp: 4;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-height: 5.5em;\n}\n/* Show cards in a 3-column grid for interview experience */\n.ie-list-redesign {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1.2rem;\n  width: 100%;\n}\n\n.ie-card {\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.07);\n  padding: 1.2rem 1.5rem;\n  cursor: pointer;\n  transition: box-shadow 0.2s, transform 0.2s;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n}\n\n@media (max-width: 1100px) {\n  .ie-list-redesign {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n@media (max-width: 700px) {\n  .ie-list-redesign {\n    grid-template-columns: 1fr;\n  }\n}\n.ie-card-actions {\n  display: flex;\n  justify-content: space-between;\n  gap: 0.3rem;\n  margin-top: 1rem;\n  width: 100%;\n  flex-wrap: nowrap;\n}\n.ie-card-actions { gap: 0.5rem; }\n.ie-form-redesign {\n  background: #f9f9f9;\n  border-radius: 8px;\n  padding: 2rem 1.5rem;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.07);\n  width: 100%;\n  max-width: 540px;\n  margin: 0 auto 2rem auto;\n}\n.ie-form-row {\n  display: flex;\n  gap: 1.5rem;\n}\n.ie-form-group {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.2rem;\n}\n.ie-form-group label {\n  font-weight: 500;\n  margin-bottom: 0.4rem;\n  color: var(--maroon-700);\n}\n.ie-form-group input,\n.ie-form-group textarea {\n  border: 1px solid #bbb;\n  border-radius: 5px;\n  padding: 0.7rem;\n  font-size: 1rem;\n  background: #fff;\n  resize: vertical;\n}\n.ie-form-group textarea {\n  min-height: 120px;\n}\n.ie-form-redesign button[type=\"submit\"] {\n  background: #fff;\n  color: var(--primary-color, #800020);\n  border: 2px solid var(--primary-color, #800020);\n  border-radius: 8px;\n  padding: 0.8rem 2rem;\n  margin-top: 0.5rem;\n  cursor: pointer;\n  transition: all 0.25s ease;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.08);\n}\n.ie-form-redesign button[type=\"submit\"]:hover {\n  background: var(--primary-color, #800020);\n  color: #fff;\n  box-shadow: 0 12px 22px -8px rgba(128,0,32,0.35);\n}\n\n.ie-read-section {\n  width: 100%;\n  max-width: 700px;\n  margin: 0 auto;\n}\n.ie-card:hover {\n  box-shadow: 0 4px 16px rgba(0,0,0,0.13);\n  transform: translateY(-2px) scale(1.01);\n}\n.ie-view-btn,\n.ie-delete-btn,\n.ie-back-btn {\n  background: #fff;\n  color: var(--primary-color, #800020);\n  border: 2px solid var(--primary-color, #800020);\n  border-radius: 8px;\n  padding: 0.45rem 0.9rem;\n  font-size: 0.92rem;\n  cursor: pointer;\n  transition: all 0.25s ease;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.08);\n}\n\n.ie-view-btn:hover,\n.ie-delete-btn:hover,\n.ie-back-btn:hover {\n  background: var(--primary-color, #800020);\n  color: #fff;\n  box-shadow: 0 10px 20px -8px rgba(128,0,32,0.35);\n}\n.ie-empty {\n  text-align: center;\n  color: #888;\n  font-style: italic;\n}\n\n/* Detail View */\n.ie-detail-page {\n  max-width: 700px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.08);\n  min-height: 60vh;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.ie-back-btn { margin-bottom: 1.2rem; white-space: nowrap; }\n.ie-detail-title {\n  font-size: 2rem;\n  color: var(--maroon-700);\n  margin-bottom: 0.7rem;\n}\n.ie-detail-meta {\n  display: flex;\n  gap: 2rem;\n  margin-bottom: 1.2rem;\n  color: #444;\n}\n.ie-detail-body {\n  background: #f7f7f7;\n  border-radius: 6px;\n  padding: 1.2rem;\n}\n.ie-detail-body h3 {\n  margin-top: 0;\n  color: var(--maroon-700);\n}\n.ie-detail-body p {\n  color: #222;\n  font-size: 1.08rem;\n  margin: 0.7rem 0 0 0;\n  white-space: pre-line;\n}\n\n/* Fullpage and horizontal card styles */\n.interview-experience-page.fullpage {\n  width: 100vw;\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  background: #fff;\n  border-radius: 0;\n  box-shadow: none;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.fullpage-section {\n  width: 100vw;\n  max-width: 100vw;\n  margin: 0;\n  padding: 0 2vw;\n}\n\n.ie-list-redesign.horizontal-scroll {\n  display: flex;\n  flex-direction: row;\n  gap: 1.2rem;\n  overflow-x: auto;\n  padding-bottom: 1.5rem;\n  scrollbar-width: thin;\n  scrollbar-color: var(--maroon-700) #eee;\n}\n.ie-list-redesign.horizontal-scroll::-webkit-scrollbar {\n  height: 10px;\n}\n.ie-list-redesign.horizontal-scroll::-webkit-scrollbar-thumb {\n  background: var(--maroon-700);\n  border-radius: 6px;\n}\n.ie-list-redesign.horizontal-scroll::-webkit-scrollbar-track {\n  background: #eee;\n  border-radius: 6px;\n}\n\n.ie-card.horizontal-card {\n  min-width: 340px;\n  max-width: 340px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.07);\n  padding: 1.2rem 1.5rem;\n  cursor: pointer;\n  transition: box-shadow 0.2s, transform 0.2s;\n  position: relative;\n  flex: 0 0 340px;\n  margin-bottom: 0;\n}\n.ie-title {\n  font-size: 2.4rem;\n  color: var(--primary-color, #800020);\n  margin-bottom: 0.75rem;\n  text-align: center;\n  font-weight: 800;\n  letter-spacing: -0.02em;\n  position: relative;\n}\n.ie-title::after {\n  content: \"\";\n  display: block;\n  width: 120px;\n  height: 3px;\n  background: var(--primary-color, #800020);\n  margin: 10px auto 0 auto;\n  border-radius: 999px;\n}\n.ie-desc {\n  color: #555;\n  margin-bottom: 1.5rem;\n  text-align: center;\n}\n.ie-nav {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  justify-content: center;\n}\n.ie-nav button {\n  background: #fff;\n  color: var(--primary-color, #800020);\n  border: 2px solid var(--primary-color, #800020);\n  border-radius: 8px;\n  padding: 0.6rem 1.2rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.25s ease;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.08);\n}\n.ie-nav button:hover {\n  background: var(--primary-color, #800020);\n  color: #fff;\n  transform: translateY(-1px);\n  box-shadow: 0 10px 20px -8px rgba(128,0,32,0.35);\n}\n.ie-nav button.active {\n  background: var(--primary-color, #800020);\n  color: #fff;\n  font-weight: 700;\n  border-bottom: none;\n}\n.ie-form input, .ie-form textarea {\n  display: block;\n  width: 100%;\n  margin-bottom: 1rem;\n  padding: 0.7rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 1rem;\n}\n.ie-form button {\n  background: #007bff;\n  color: #fff;\n  border: none;\n  padding: 0.7rem 1.5rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 0.5rem;\n}\n.ie-filters {\n  display: flex;\n  gap: 0.75rem;\n  margin: 0 auto 1.25rem auto;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 0.75rem 1rem;\n  background: #ffffff;\n  border: 1px solid rgba(128,0,32,0.15);\n  border-radius: 12px;\n  box-shadow: 0 4px 14px rgba(0,0,0,0.06);\n  max-width: 780px;\n}\n.ie-filters input {\n  border: 2px solid var(--primary-color, #800020);\n  border-radius: 10px;\n  padding: 0.65rem 1rem;\n  font-size: 1rem;\n  outline: none;\n  transition: all 0.2s ease;\n  background: #fff;\n  color: #1f2937;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.04) inset;\n}\n.ie-filters input::placeholder { color: #6b7280; }\n.ie-filters input:focus {\n  box-shadow: 0 0 0 4px rgba(128,0,32,0.12);\n}\n.ie-list {\n  list-style: none;\n  padding: 0;\n  width: 100%;\n}\n.ie-item {\n  background: #f7f7f7;\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border-radius: 6px;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\n}\n.ie-meta {\n  display: flex;\n  justify-content: space-between;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n.ie-company {\n  color: var(--maroon-700);\n}\n.ie-role {\n  color: #333;\n}\n.ie-text {\n  color: #222;\n  margin: 0;\n}\n.ie-item strong {\n  color: #007bff;\n}\n","size_bytes":7828},"frontend/src/components/jobs.css":{"content":"/* =========================================================\n   Jobs.css — Modern Maroon Theme (light/dark with variables)\n   ---------------------------------------------------------\n   - Default theme: Dark\n   - Light mode: add class \"light\" on <body>\n   - Compatible with your existing jobs.jsx class names\n   ========================================================= */\n\n/* ---------- Design Tokens ---------- */\n:root {\n  /* Brand (Maroon) */\n  --brand: #8b1e24;            /* primary maroon */\n  --brand-600: #7a1620;        /* darker maroon */\n  --brand-700: #5e0f16;        /* deepest maroon */\n  --brand-300: #d76b78;        /* accent tint */\n  --brand-100: #fdecee;        /* very light maroon tint */\n\n  /* Elevation / Radii / Motion */\n  --radius-lg: 18px;\n  --radius-md: 14px;\n  --radius-sm: 10px;\n\n  --elev-1: 0 6px 18px rgba(139, 30, 36, 0.14);\n  --elev-2: 0 12px 28px rgba(139, 30, 36, 0.2);\n  --elev-3: 0 18px 40px rgba(139, 30, 36, 0.26);\n\n  --speed-fast: 160ms;\n  --speed: 260ms;\n  --speed-slow: 360ms;\n}\n\n/* ---------- Theme (Dark by default) ---------- */\nbody {\n  --bg: #0f0f11;\n  --surface: #151417;\n  --surface-2: #1b181c;\n  --text: #ecebed;\n  --text-soft: #c9c7cc;\n  --muted: #9b98a1;\n  --border: rgba(255, 255, 255, 0.08);\n  --ring: rgba(215, 107, 120, 0.7); /* brand-300 glow */\n  --card-gradient: linear-gradient(\n    180deg,\n    rgba(139, 30, 36, 0.08) 0%,\n    rgba(139, 30, 36, 0.03) 50%,\n    rgba(255, 255, 255, 0.03) 100%\n  );\n  background: var(--bg);\n  color: var(--text);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Light mode overrides */\nbody.light {\n  --bg: #fafafa;\n  --surface: #ffffff;\n  --surface-2: #fff7f7;\n  --text: #1f1f1f;\n  --text-soft: #3b3b3b;\n  --muted: #606060;\n  --border: rgba(139, 30, 36, 0.14);\n  --ring: rgba(139, 30, 36, 0.25);\n  --card-gradient: linear-gradient(\n    180deg,\n    rgba(139, 30, 36, 0.06) 0%,\n    rgba(139, 30, 36, 0.02) 50%,\n    rgba(0, 0, 0, 0.02) 100%\n  );\n  background: var(--bg);\n  color: var(--text);\n}\n\n/* Focus ring */\n:where(button, a, .job-card) :focus-visible,\n:where(button, a, .job-card):focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n  border-radius: var(--radius-sm);\n}\n\n/* Reduced motion */\n@media (prefers-reduced-motion: reduce) {\n  * { animation: none !important; transition: none !important; }\n}\n\n/* ---------- Layout: Page ---------- */\n.jobs-page-container {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2.25rem 1.5rem;\n}\n\n.jobs-header {\n  text-align: center;\n  margin-bottom: 2.2rem;\n}\n\n.jobs-title {\n  font-size: clamp(2rem, 3.2vw, 2.6rem);\n  font-weight: 900;\n  letter-spacing: 0.2px;\n  margin: 0 0 0.6rem 0;\n  background: linear-gradient(90deg, var(--brand) 0%, var(--brand-300) 50%, var(--brand) 100%);\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  text-shadow: 0 0 0 transparent;\n}\n\n.jobs-subtitle {\n  color: var(--muted);\n  font-size: 1rem;\n}\n\n/* ---------- States: Loading / Error / Empty ---------- */\n.loading-container,\n.error-container,\n.no-jobs-container {\n  text-align: center;\n  padding: 3rem 1.5rem;\n  background: var(--surface);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--border);\n  box-shadow: var(--elev-1);\n  margin: 1.5rem auto;\n  max-width: 680px;\n}\n\n.loading-container h2,\n.error-container h2,\n.no-jobs-container h3 {\n  color: var(--text);\n  margin-bottom: 0.6rem;\n}\n\n.error-container p,\n.no-jobs-container p {\n  color: var(--muted);\n}\n\n.loading-container h2 {\n  color: var(--brand-300);\n  animation: pulse var(--speed-slow) ease-in-out infinite;\n}\n@keyframes pulse {\n  0%, 100% { opacity: 1 }\n  50%      { opacity: .55 }\n}\n\n/* ---------- Jobs Grid ---------- */\n.jobs-list {\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 1.8rem;\n  align-items: stretch;\n}\n\n/* ---------- Card: Job ---------- */\n.job-card {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border-radius: var(--radius-lg);\n  background: var(--surface);\n  border: 1px solid var(--border);\n  box-shadow: var(--elev-1);\n  overflow: hidden;\n  transition: transform var(--speed), box-shadow var(--speed), border-color var(--speed);\n  will-change: transform;\n  cursor: pointer;\n  isolation: isolate;\n}\n\n.job-card::before {\n  content: \"\";\n  position: absolute;\n  inset: 0;\n  background: var(--card-gradient);\n  opacity: 1;\n  pointer-events: none;\n}\n\n.job-card:hover {\n  transform: translateY(-6px);\n  box-shadow: var(--elev-2);\n  border-color: rgba(139, 30, 36, 0.26);\n}\n\n.job-card:active {\n  transform: translateY(-2px);\n}\n\n/* Inner content */\n.job-card-content {\n  display: flex;\n  flex-direction: column;\n  gap: 0.9rem;\n  padding: 1.25rem;\n  z-index: 1;\n}\n\n/* Header: logo + company */\n.job-card-header {\n  display: flex;\n  align-items: center;\n  gap: 0.9rem;\n}\n\n.company-logo {\n  width: 62px;\n  height: 62px;\n  object-fit: contain;\n  border-radius: 14px;\n  background: var(--surface-2);\n  border: 1px solid var(--border);\n  box-shadow: 0 6px 18px rgba(139, 30, 36, 0.18);\n  padding: 6px;\n}\n\n.company-name {\n  font-size: 1.05rem;\n  font-weight: 700;\n  color: var(--text);\n}\n\n/* Position title */\n.job-position {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: var(--brand-300);\n  letter-spacing: 0.2px;\n}\n\n/* Info rows inside card */\n.job-info-row {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n  color: var(--text-soft);\n  font-size: 0.95rem;\n}\n\n.job-info-item {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n\n.detail-icon {\n  width: 16px;\n  height: 16px;\n  color: var(--brand-300);\n}\n\n.job-salary {\n  font-weight: 700;\n  color: var(--text);\n}\n\n/* Skills (in card) */\n.job-skills {\n  margin-top: 0.2rem;\n}\n\n.skills-label {\n  font-size: 0.8rem;\n  color: var(--muted);\n  margin-bottom: 0.3rem;\n}\n\n.skills-tags,\n.skills-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.skill-tag {\n  display: inline-flex;\n  align-items: center;\n  padding: 0.35rem 0.7rem;\n  border-radius: 999px;\n  font-size: 0.78rem;\n  font-weight: 600;\n  background: linear-gradient(135deg, var(--brand) 0%, var(--brand-600) 100%);\n  color: #ffffff;\n  box-shadow: 0 6px 16px rgba(139, 30, 36, 0.25);\n  transition: transform var(--speed-fast) ease;\n}\n.skill-tag:hover { transform: translateY(-2px) }\n\n/* Eligibility (compact in card) */\n.job-eligibility-section {\n  margin-top: 0.2rem;\n  padding: 0.6rem 0.7rem;\n  background: rgba(139, 30, 36, 0.12);\n  border: 1px solid rgba(139, 30, 36, 0.22);\n  border-radius: var(--radius-sm);\n  color: var(--text);\n}\n\n.job-eligible-courses,\n.job-eligible-years,\n.job-eligible-branches {\n  display: block;\n  font-size: 0.83rem;\n  color: var(--text-soft);\n}\n.job-eligible-courses strong,\n.job-eligible-years strong,\n.job-eligible-branches strong {\n  color: var(--brand-300);\n}\n\n/* ---------- Details Page ---------- */\n.back-button {\n  background: transparent;\n  border: 1px solid var(--border);\n  color: var(--text);\n  padding: 0.6rem 0.9rem;\n  border-radius: var(--radius-sm);\n  font-weight: 600;\n  cursor: pointer;\n  transition: background var(--speed), border-color var(--speed), transform var(--speed-fast);\n  margin-bottom: 1rem;\n}\n.back-button:hover {\n  background: rgba(139, 30, 36, 0.12);\n  border-color: rgba(139, 30, 36, 0.28);\n  transform: translateX(-3px);\n}\n\n.job-details-container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 1.4rem;\n  background: var(--surface);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--border);\n  box-shadow: var(--elev-2);\n}\n\n.job-details-header {\n  display: flex;\n  align-items: center;\n  gap: 1.2rem;\n  padding: 1.2rem;\n  border-radius: var(--radius-md);\n  background: linear-gradient(\n    90deg,\n    rgba(139, 30, 36, 0.12) 0%,\n    rgba(139, 30, 36, 0.06) 100%\n  );\n  border: 1px solid rgba(139, 30, 36, 0.2);\n  margin-bottom: 1.2rem;\n}\n\n.details-logo {\n  width: 92px;\n  height: 92px;\n  object-fit: contain;\n  border-radius: 16px;\n  background: var(--surface-2);\n  border: 1px solid var(--border);\n  padding: 8px;\n  box-shadow: 0 10px 24px rgba(139, 30, 36, 0.22);\n}\n\n.job-details-header h1 {\n  margin: 0;\n  font-size: clamp(1.4rem, 2.4vw, 2rem);\n  color: var(--text);\n  font-weight: 800;\n}\n.job-details-header h2 {\n  margin: 0.2rem 0 0.6rem 0;\n  font-size: 1.05rem;\n  color: var(--brand-300);\n  font-weight: 700;\n}\n\n.job-meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.9rem 1.2rem;\n  color: var(--text-soft);\n  font-size: 0.95rem;\n}\n.meta-item {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n\n/* Sections */\n.job-section {\n  margin-bottom: 1rem;\n  padding: 1rem;\n  background: var(--surface-2);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--border);\n}\n.job-section h3 {\n  margin: 0 0 0.6rem 0;\n  font-size: 1.05rem;\n  color: var(--brand-300);\n  font-weight: 800;\n}\n.job-section p {\n  color: var(--text-soft);\n  line-height: 1.7;\n}\n\n/* Lists */\n.requirements-list,\n.benefits-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n.requirement-item,\n.benefit-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.5rem;\n  color: var(--text);\n  line-height: 1.6;\n  margin: 0.35rem 0;\n}\n.bullet {\n  color: var(--brand-300);\n  font-weight: 900;\n}\n\n/* Skills (details) uses same .skill-tag */\n\n/* Apply Button */\n.apply-button,\n.apply-button:visited {\n  display: block;\n  width: 100%;\n  max-width: 320px;\n  margin: 1.4rem auto 0;\n  padding: 0.9rem 1.2rem;\n  text-align: center;\n  text-decoration: none;\n  font-weight: 800;\n  letter-spacing: 0.4px;\n  color: #fff;\n  background: linear-gradient(135deg, var(--brand) 0%, var(--brand-600) 100%);\n  border-radius: var(--radius-md);\n  border: 0;\n  box-shadow: var(--elev-2);\n  transition: transform var(--speed-fast), box-shadow var(--speed-fast), filter var(--speed-fast);\n}\n.apply-button:hover {\n  transform: translateY(-3px);\n  box-shadow: var(--elev-3);\n  filter: saturate(1.05);\n}\n\n/* ---------- Eligibility (Details) ---------- */\n.eligibility-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 0.65rem;\n}\n.eligibility-item {\n  background: rgba(139, 30, 36, 0.08);\n  padding: 0.7rem;\n  border-radius: var(--radius-sm);\n  border-left: 3px solid var(--brand);\n}\n.eligibility-item strong {\n  color: var(--brand-300);\n  display: block;\n  margin-bottom: 0.25rem;\n  font-size: 0.96rem;\n}\n.eligibility-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.45rem;\n}\n.eligibility-tag {\n  padding: 0.35rem 0.7rem;\n  border-radius: 999px;\n  font-size: 0.78rem;\n  font-weight: 700;\n  border: 1px solid rgba(139, 30, 36, 0.22);\n  color: var(--text);\n  background: rgba(139, 30, 36, 0.14);\n  transition: transform var(--speed-fast);\n}\n.eligibility-tag:hover { transform: translateY(-2px) }\n.course-tag { }\n.year-tag   { border-color: rgba(76, 175, 80, 0.3);  background: rgba(76, 175, 80, 0.14);  color: #a9e4b2; }\n.branch-tag { border-color: rgba(33,150,243,0.3);   background: rgba(33,150,243,0.14);   color: #b6dfff; }\n\n/* ---------- Responsive ---------- */\n@media (max-width: 1200px) {\n  .jobs-list { gap: 1.4rem; }\n}\n@media (max-width: 980px) {\n  .jobs-list { grid-template-columns: repeat(2, minmax(0, 1fr)); }\n}\n@media (max-width: 680px) {\n  .jobs-page-container { padding: 1.25rem }\n  .jobs-list { grid-template-columns: 1fr; max-width: 560px; margin: 0 auto; }\n  .company-logo { width: 56px; height: 56px; }\n  .jobs-title { font-size: clamp(1.6rem, 7vw, 2.1rem); }\n  .job-details-header { flex-direction: column; align-items: flex-start; }\n}\n\n/* ---------- Light-mode polish ---------- */\nbody.light .job-card { box-shadow: 0 6px 18px rgba(0, 0, 0, 0.07); }\nbody.light .job-card:hover { box-shadow: 0 14px 28px rgba(139, 30, 36, 0.22); }\nbody.light .apply-button { box-shadow: 0 10px 24px rgba(139, 30, 36, 0.2); }\n\n/* ---------- Nice entrance for cards ---------- */\n@keyframes fadeInUp {\n  from { opacity: 0; transform: translateY(14px); }\n  to   { opacity: 1; transform: translateY(0); }\n}\n.job-card { animation: fadeInUp var(--speed-slow) ease both; }\n.job-card:nth-child(2) { animation-delay: 80ms }\n.job-card:nth-child(3) { animation-delay: 120ms }\n.job-card:nth-child(4) { animation-delay: 160ms }\n","size_bytes":12053},"frontend/src/components/jobs.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, MapPin, DollarSign, Clock, Building, User, Award } from 'lucide-react';\nimport './jobs.css';\nimport { API_ENDPOINTS } from '../config/api';\n\n// Utility function for logo URL handling\n// Utility function for logo URL handling - Use static assets\n// Utility function for logo URL handling - SIMPLIFIED\n// Utility function for logo URL handling - FIXED\nconst getCompanyLogoUrl = (logoPath) => {\n  if (!logoPath) return `${API_ENDPOINTS.UPLOADS}/default-logo.png`;\n  \n  // If it's already a full URL (Cloudinary or external)\n  if (logoPath.startsWith('http')) return logoPath;\n  \n  // If it's a path starting with /assets/ (faculty images)\n  if (logoPath.startsWith('/assets/')) {\n    return `${API_ENDPOINTS.UPLOADS}${logoPath}`;\n  }\n  \n  // If it's a path starting with /uploads/ (uploaded company logos)\n  if (logoPath.startsWith('/uploads/')) {\n    return `${API_ENDPOINTS.UPLOADS}${logoPath}`;\n  }\n  \n  // If it's just a filename, assume it's in assets/faculties folder\n  return `${API_ENDPOINTS.UPLOADS}/assets/faculties/${logoPath}`;\n};\n// JobCard Component\nconst JobCard = ({ job, onClick }) => {\n  console.log('Job data in JobCard:', job); // Debug log\n  \n  // Use the utility function for logo URL\n  const logoUrl = getCompanyLogoUrl(job.companyLogo);\n  console.log('Logo URL:', logoUrl); // Debug log\n\n  const skills = job.skillsRequired ? job.skillsRequired.split(',').map(s => s.trim()) : [];\n\n  return (\n    <div className=\"job-card\" onClick={() => onClick(job)}>\n      <div className=\"job-card-content\">\n        <div className=\"job-card-header\">\n          <img \n            src={logoUrl} \n            alt={`${job.companyName} logo`} \n            className=\"company-logo\"\n            onError={(e) => {\n              console.error('Failed to load logo:', logoUrl);\n              e.target.src = '/default-logo.png'; // Fallback if image fails to load\n            }}\n          />\n          <div className=\"company-name\">{job.companyName}</div>\n        </div>\n        \n        <div className=\"job-details-container\">\n          <div className=\"job-position\">{job.position}</div>\n          \n          <div className=\"job-info-row\">\n            <div className=\"job-info-item\">\n              <MapPin className=\"detail-icon\" size={16} />\n              <span className=\"job-location\">{job.location}</span>\n            </div>\n            <div className=\"job-info-item\">\n              <Clock className=\"detail-icon\" size={16} />\n              <span>{job.jobType}</span>\n            </div>\n          </div>\n          <div className=\"job-info-row\">\n            <div className=\"job-salary\">\n              <DollarSign className=\"detail-icon\" size={16} style={{display: 'inline', marginRight: '4px'}} />\n              {job.salaryPackage}\n            </div>\n          </div>\n          \n          {/* Eligibility Information Section */}\n          <div className=\"job-eligibility-section\">\n            {(job.eligibleCourses && job.eligibleCourses.length > 0) ||\n             (job.eligibleYears && job.eligibleYears.length > 0) ||\n             (job.eligibleBranches && job.eligibleBranches.length > 0) ? (\n              <>\n                {job.eligibleCourses && job.eligibleCourses.length > 0 && (\n                  <div className=\"eligibility-row\">\n                    <Award className=\"detail-icon\" size={14} />\n                    <span className=\"job-eligible-courses\">\n                      <strong>Courses:</strong> {Array.isArray(job.eligibleCourses) \n                        ? job.eligibleCourses.join(\", \") \n                        : job.eligibleCourses}\n                    </span>\n                  </div>\n                )}\n                \n                {job.eligibleYears && job.eligibleYears.length > 0 && (\n                  <div className=\"eligibility-row\">\n                    <span className=\"job-eligible-years\">\n                      <strong>Years:</strong> {Array.isArray(job.eligibleYears) \n                        ? job.eligibleYears.join(\", \") \n                        : job.eligibleYears}\n                    </span>\n                  </div>\n                )}\n                \n                {job.eligibleBranches && job.eligibleBranches.length > 0 && (\n                  <div className=\"eligibility-row\">\n                    <span className=\"job-eligible-branches\">\n                      <strong>Branches:</strong> {Array.isArray(job.eligibleBranches) \n                        ? job.eligibleBranches.join(\", \") \n                        : job.eligibleBranches}\n                    </span>\n                  </div>\n                )}\n              </>\n            ) : (\n              <div className=\"eligibility-row\">\n                <span className=\"job-eligible-courses\">\n                  <strong>Eligibility:</strong> Check job details\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {job.skillsRequired && (\n          <div className=\"job-skills\">\n            <div className=\"skills-label\">Required Skills</div>\n            <div className=\"skills-tags\">\n              {skills.slice(0, 3).map((skill, index) => (\n                <span key={index} className=\"skill-tag\">\n                  {skill}\n                </span>\n              ))}\n              {skills.length > 3 && (\n                <span className=\"skill-tag\">+{skills.length - 3}</span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\n// JobDetails Component\nconst JobDetails = ({ job, onBack, onApply }) => {\n  if (!job) return null;\n  \n  // Use the utility function for logo URL\n  const logoUrl = getCompanyLogoUrl(job.companyLogo);\n\n  const skills = job.skillsRequired ? job.skillsRequired.split(',').map(s => s.trim()) : [];\n  const benefits = job.benefits ? job.benefits.split(',').map(s => s.trim()) : [];\n\n  return (\n    <div className=\"job-details-container\">\n      <button className=\"back-button\" onClick={onBack}>\n        <span className=\"back-arrow\">←</span> Back to Jobs\n      </button>\n      <div className=\"job-details-header\">        <img \n          src={logoUrl} \n          alt={`${job.companyName} logo`} \n          className=\"details-logo\"\n          onError={(e) => {\n            console.error('Failed to load logo:', logoUrl);\n            e.target.src = '/default-logo.png'; // Fallback if image fails to load\n          }}\n        />\n        <div className=\"header-content\">\n          <h1>{job.position}</h1>\n          <h2>{job.companyName}</h2>          <div className=\"job-meta\">\n            <span className=\"meta-item location\">📍 {job.location}</span>\n            <span className=\"meta-item salary\">Rs. {job.salaryPackage}</span>\n            <span className=\"meta-item type\">🕒 {job.jobType}</span>\n          </div>\n        </div>\n      </div><div className=\"job-details-content\">        <div className=\"job-section\">\n          <h3>Eligibility Criteria</h3>\n          <div className=\"eligibility-grid\">\n            {job.eligibleCourses && job.eligibleCourses.length > 0 && (\n              <div className=\"eligibility-item\">\n                <strong>Eligible Courses:</strong>\n                <div className=\"eligibility-tags\">\n                  {(Array.isArray(job.eligibleCourses) ? job.eligibleCourses : [job.eligibleCourses]).map((course, index) => (\n                    <span key={index} className=\"eligibility-tag course-tag\">{course}</span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {job.eligibleYears && job.eligibleYears.length > 0 && (\n              <div className=\"eligibility-item\">\n                <strong>Eligible Years:</strong>\n                <div className=\"eligibility-tags\">\n                  {(Array.isArray(job.eligibleYears) ? job.eligibleYears : [job.eligibleYears]).map((year, index) => (\n                    <span key={index} className=\"eligibility-tag year-tag\">{year}</span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {job.eligibleBranches && job.eligibleBranches.length > 0 && (\n              <div className=\"eligibility-item\">\n                <strong>Eligible Branches:</strong>\n                <div className=\"eligibility-tags\">\n                  {(Array.isArray(job.eligibleBranches) ? job.eligibleBranches : [job.eligibleBranches]).map((branch, index) => (\n                    <span key={index} className=\"eligibility-tag branch-tag\">{branch}</span>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"job-section\">\n          <h3>Job Description</h3>\n          <p>{job.jobDescription || 'No job description provided.'}</p>\n        </div>        <div className=\"job-section\">\n          <h3>Requirements</h3>\n          <ul className=\"requirements-list\">\n            <li className=\"requirement-item\">\n              <span className=\"bullet\">•</span> Check eligibility criteria above for course, year, and branch requirements\n            </li>\n            <li className=\"requirement-item\">\n              <span className=\"bullet\">•</span> Good academic record and relevant skills as mentioned\n            </li>\n          </ul>\n        </div>\n        {skills.length > 0 && (\n          <div className=\"job-section\">\n            <h3>Skills</h3>\n            <div className=\"skills-container\">\n              {skills.map((skill, index) => (\n                <span key={index} className=\"skill-tag\">{skill}</span>\n              ))}\n            </div>\n          </div>\n        )}\n        <div className=\"job-section\">\n          <h3>Benefits</h3>\n          <ul className=\"benefits-list\">\n            {benefits.length > 0 ? benefits.map((benefit, index) => (\n              <li key={index} className=\"benefit-item\">\n                <span className=\"bullet\">•</span> {benefit}\n              </li>\n            )) : (\n              <li className=\"benefit-item\">\n                <span className=\"bullet\">•</span> Benefits information not provided.\n              </li>\n            )}\n          </ul>\n        </div>        {job.companyWebsite ? (\n          <a \n            href={job.companyWebsite} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            className=\"apply-button\"\n          >\n            Apply Now\n          </a>\n        ) : (\n          <button className=\"apply-button\" onClick={() => onApply && onApply(job)}>\n            Apply Now\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Main Jobs Component\nconst Jobs = () => {\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  // Fetch jobs from backend\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(API_ENDPOINTS.JOBS);\n        if (!response.ok) {\n          throw new Error('Failed to fetch jobs');\n        }\n        const jobsData = await response.json();\n        console.log('Fetched jobs data:', jobsData); // Debug log\n        setJobs(jobsData);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching jobs:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, []);\n\n  const handleJobClick = (job) => {\n    setSelectedJob(job);\n  };\n\n  const handleBack = () => {\n    setSelectedJob(null);\n  };\n\n  const handleApply = (job) => {\n    alert(`Applied for ${job.position} at ${job.companyName}`);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"jobs-page-container\">\n        <div className=\"loading-container\">\n          <h2>Loading jobs...</h2>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"jobs-page-container\">\n        <div className=\"error-container\">\n          <h2>Error loading jobs</h2>\n          <p>{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"jobs-page-container\">\n      {!selectedJob ? (\n        <div>\n          <div className=\"jobs-header\">\n            <h1 className=\"jobs-title\">Available Jobs</h1>\n            <p className=\"jobs-subtitle\">{jobs.length} job(s) available</p>\n          </div>\n          <div className=\"jobs-list\">\n            {jobs.length === 0 ? (\n              <div className=\"no-jobs-container\">\n                <h3>No jobs available at the moment</h3>\n                <p>Please check back later for new opportunities.</p>\n              </div>\n            ) : (\n              jobs.map((job) => (\n                <JobCard key={job._id} job={job} onClick={handleJobClick} />\n              ))\n            )}\n          </div>\n        </div>\n      ) : (\n        <JobDetails \n          job={selectedJob} \n          onBack={handleBack} \n          onApply={handleApply} \n        />\n      )}\n    </div>\n  );\n};\n\nexport default Jobs;","size_bytes":12980},"frontend/src/components/sign.css":{"content":".sign-container {\n  min-height: calc(100vh - 120px); /* Adjust 120px to header+footer height if needed */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: var(--border-radius);\n  color: var(--text-primary);\n  border: 1px solid rgba(255, 215, 0, 0.1);\n}\n\nbody.light .sign-container {\n  color: var(--text-primary);\n}\n\nbody.light .sign-card {\n  background: #fff;\n}\n\n.sign-card {\n  background: rgba(30, 30, 30, 0.8);\n  padding: 2.5rem 2rem;\n  border-radius: 16px;\n  border: 1px solid #800000;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nbody.light .sign-card h2 {\n  color: #800000;\n\n}\n.sign-card h2 {\n  color: #b70c0c;\n  margin-bottom: 1.5rem;\n  font-size: 2rem;\n  font-weight: bold;\n}\n\n.sign-card form {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n.sign-card input {\n  padding: 0.3rem 0.6rem;\n  outline: 1px solid gray;\n  border-radius: 6px;\n  background-color: rgb(147, 147, 147);\n  font-size: 1rem;\n  outline: none;\n  transition: border 0.2s;\n}\n\nbody.light .sign-card input {\n  padding: 0.3rem 0.6rem;\n  outline: 1px solid gray;\n  border-radius: 6px;\n  background-color: rgb(244, 244, 244);\n  font-size: 1rem;\n  outline: none;\n  transition: border 0.2s;\n}\n\n\n.sign-card input:focus {\n  border: 1.5px solid #800000;\n}\n\n.sign-card button[type=\"submit\"] {\n  background: #800000;\n  color: #fff;  \n  border: none;\n  border-radius: 6px;\n  padding: 0.4rem 0;\n  margin-top: 10px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.sign-card button[type=\"submit\"]:hover {\n  background: #930505;\n  box-shadow: 0 0 35px rgba(255, 0, 0, 0.2);\n}\n\n.toggle-link {\n  margin-top: 1rem;\n  font-size: 0.98rem;\n}\n\n.toggle-link button {\n  background: none;\n  border: none;\n  color: #2563eb;\n  cursor: pointer;\n  font-weight: 600;\n  padding: 0;\n  margin-left: 0.2rem;\n  text-decoration: underline;\n}\n\n.toggle-link button:hover {\n  color: #1e40af;\n  background-color: transparent;\n  box-shadow: none;\n}\n\n/* Validation UI */\n.field-wrap {\n  display: flex;\n  flex-direction: column;\n  gap: 0.35rem;\n}\n\n.error-text {\n  color: #9a0d0d; /* dark maroon */\n  font-size: 0.82rem;\n  margin-left: 0.25rem;\n}\n\n.error-text {\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n\n.input-error {\n  border: 1.5px solid #9a0707 !important;\n  box-shadow: 0 0 0 3px rgba(107,15,15,0.06);\n}\n\n.error-icon {\n  font-size: 0.95rem;\n  line-height: 1;\n  display: inline-block;\n}\n\n.input-success {\n  border: 1.5px solid #16a34a !important; /* green-600 */\n  box-shadow: 0 0 0 3px rgba(16,163,127,0.06);\n}\n\n/* small screens: make card width adapt */\n@media (max-width: 420px) {\n  .sign-card {\n    width: calc(100% - 40px);\n    padding: 1.5rem;\n  }\n  .sign-card h2 { font-size: 1.25rem; }\n}","size_bytes":2792},"frontend/src/config/api.js":{"content":"// API Configuration\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';\n\nexport const API_ENDPOINTS = {\n  JOBS: `${API_BASE_URL}/api/jobs`,\n  UPLOADS: `${API_BASE_URL}`,\n  ADMIN: `${API_BASE_URL}/api/admin`,\n  ADMIN_MANAGEMENT: `${API_BASE_URL}/api/admin-management`,\n  AUTH: `${API_BASE_URL}/api/auth`,\n};\n\nexport default API_BASE_URL;\n","size_bytes":364},"frontend/src/utils/toastConfig.js":{"content":"import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Toast configuration\nconst toastConfig = {\n  position: \"top-right\",\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: \"light\",\n};\n\n// Toast utility functions\nexport const showSuccessToast = (message) => {\n  toast.success(message, toastConfig);\n};\n\nexport const showErrorToast = (message) => {\n  toast.error(message, toastConfig);\n};\n\nexport const showWarningToast = (message) => {\n  toast.warning(message, toastConfig);\n};\n\nexport const showInfoToast = (message) => {\n  toast.info(message, toastConfig);\n};\n\nexport default toastConfig;\n","size_bytes":717},"backend/controllers/studentController.js":{"content":"const bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\nconst { z } = require('zod');\nconst User = require('../models/User');\nconst Student = require('../models/Student');\nconst Application = require('../models/Application');\nconst Job = require('../models/Job');\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'dev_secret_change_me';\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '7d';\n\n// Student registration schema\nconst studentRegisterSchema = z.object({\n  name: z.string().min(2).max(100),\n  email: z.string().email().toLowerCase().trim(),\n  password: z.string().min(8).max(128),\n  confirmPassword: z.string().min(8).max(128),\n  rollNo: z.string().min(1).max(20),\n  course: z.enum(['BSc.CS', 'MSc.CS', 'MSc.AIML', 'MCA']),\n  branch: z.enum(['WD', 'AIML']),\n  year: z.enum(['1st', '2nd', '3rd', '4th', '5th']),\n  cgpa: z.number().min(0).max(10),\n  contact: z.string().min(10).max(15)\n}).refine((data) => data.password === data.confirmPassword, {\n  message: 'Passwords do not match',\n  path: ['confirmPassword']\n});\n\n// Student registration\nexports.registerStudent = async (req, res) => {\n  try {\n    const payload = studentRegisterSchema.parse(req.body);\n\n    // Check if user already exists\n    const existingUser = await User.findOne({ email: payload.email });\n    if (existingUser) {\n      return res.status(409).json({ error: 'Email already registered' });\n    }\n\n    // Check if rollNo already exists\n    const existingStudent = await Student.findOne({ rollNo: payload.rollNo });\n    if (existingStudent) {\n      return res.status(409).json({ error: 'Roll number already registered' });\n    }\n\n    const saltRounds = 10;\n    const passwordHash = await bcrypt.hash(payload.password, saltRounds);\n\n    // Create user\n    const user = await User.create({\n      name: payload.name,\n      email: payload.email,\n      passwordHash,\n      role: 'student'\n    });\n\n    // Create student profile\n    const student = await Student.create({\n      user: user._id,\n      rollNo: payload.rollNo,\n      course: payload.course,\n      branch: payload.branch,\n      year: payload.year,\n      cgpa: payload.cgpa,\n      contact: payload.contact\n    });\n\n    const token = jwt.sign({ sub: user._id, email: user.email, role: user.role }, JWT_SECRET, {\n      expiresIn: JWT_EXPIRES_IN\n    });\n\n    return res.status(201).json({\n      message: 'Student registered successfully',\n      token,\n      user: { \n        id: user._id, \n        name: user.name, \n        email: user.email, \n        role: user.role,\n        student: student\n      }\n    });\n  } catch (err) {\n    if (err instanceof z.ZodError) {\n      return res.status(400).json({ error: 'Validation failed', details: err.flatten() });\n    }\n    console.error('Registration error:', err);\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Get student profile\nexports.getStudentProfile = async (req, res) => {\n  try {\n    const student = await Student.findOne({ user: req.user.id }).populate('user', 'name email');\n    if (!student) {\n      return res.status(404).json({ error: 'Student profile not found' });\n    }\n    res.json(student);\n  } catch (error) {\n    console.error('Get profile error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Update student profile\nexports.updateStudentProfile = async (req, res) => {\n  try {\n    const allowedUpdates = ['cgpa', 'contact', 'skills', 'projects', 'certifications', 'achievements', 'linkedin', 'github'];\n    const updates = {};\n    \n    for (const field of allowedUpdates) {\n      if (req.body[field] !== undefined) {\n        updates[field] = req.body[field];\n      }\n    }\n\n    const student = await Student.findOneAndUpdate(\n      { user: req.user.id },\n      updates,\n      { new: true, runValidators: true }\n    ).populate('user', 'name email');\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student profile not found' });\n    }\n\n    res.json({ message: 'Profile updated successfully', student });\n  } catch (error) {\n    console.error('Update profile error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Apply for job\nexports.applyForJob = async (req, res) => {\n  try {\n    const { jobId, formResponses } = req.body;\n    \n    // Get student info\n    const student = await Student.findOne({ user: req.user.id }).populate('user');\n    if (!student) {\n      return res.status(404).json({ error: 'Student profile not found' });\n    }\n\n    // Check if job exists\n    const job = await Job.findById(jobId);\n    if (!job) {\n      return res.status(404).json({ error: 'Job not found' });\n    }\n\n    // Check if already applied\n    const existingApplication = await Application.findOne({\n      job: jobId,\n      student: student._id\n    });\n    if (existingApplication) {\n      return res.status(409).json({ error: 'You have already applied for this job' });\n    }\n\n    // Create application\n    const application = new Application({\n      job: jobId,\n      student: student._id,\n      applicantName: student.user.name,\n      applicantEmail: student.user.email,\n      applicantPhone: student.contact,\n      applicantCourse: student.course,\n      applicantYear: student.year,\n      applicantBranch: student.branch,\n      formResponses: formResponses || []\n    });\n\n    await application.save();\n\n    res.status(201).json({\n      message: 'Application submitted successfully',\n      application\n    });\n  } catch (error) {\n    console.error('Apply for job error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Get student's applications\nexports.getStudentApplications = async (req, res) => {\n  try {\n    const student = await Student.findOne({ user: req.user.id });\n    if (!student) {\n      return res.status(404).json({ error: 'Student profile not found' });\n    }\n\n    const applications = await Application.find({ student: student._id })\n      .populate('job', 'companyName position salaryPackage location')\n      .sort({ appliedAt: -1 });\n\n    res.json(applications);\n  } catch (error) {\n    console.error('Get applications error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};\n\n// Get eligible jobs for student\nexports.getEligibleJobs = async (req, res) => {\n  try {\n    const student = await Student.findOne({ user: req.user.id });\n    if (!student) {\n      return res.status(404).json({ error: 'Student profile not found' });\n    }\n\n    // Find jobs that match student's eligibility\n    const jobs = await Job.find({\n      $and: [\n        {\n          $or: [\n            { eligibleCourses: { $in: [student.course] } },\n            { eligibleCourses: { $size: 0 } }\n          ]\n        },\n        {\n          $or: [\n            { eligibleBranches: { $in: [student.branch] } },\n            { eligibleBranches: { $size: 0 } }\n          ]\n        },\n        {\n          $or: [\n            { eligibleYears: { $in: [student.year] } },\n            { eligibleYears: { $size: 0 } }\n          ]\n        }\n      ]\n    }).sort({ createdAt: -1 });\n\n    res.json(jobs);\n  } catch (error) {\n    console.error('Get eligible jobs error:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n};","size_bytes":7205},"backend/models/Faculty.js":{"content":"const mongoose = require('mongoose');\n\nconst facultySchema = new mongoose.Schema(\n  {\n    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    designation: { type: String, required: true },\n    contactNum: { type: String, required: true },\n    department: { type: String, required: true },\n    specialization: { type: String },\n    experience: { type: Number }, // Years of experience\n    profilePicture: { type: String }\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model('Faculty', facultySchema);","size_bytes":540},"backend/models/Student.js":{"content":"const mongoose = require('mongoose');\n\nconst studentSchema = new mongoose.Schema(\n  {\n    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    rollNo: { type: String, required: true, unique: true, trim: true },\n    course: { type: String, required: true, enum: ['BSc.CS', 'MSc.CS', 'MSc.AIML', 'MCA'] },\n    branch: { type: String, required: true, enum: ['WD', 'AIML'] },\n    year: { type: String, required: true, enum: ['1st', '2nd', '3rd', '4th', '5th'] },\n    cgpa: { type: Number, required: true, min: 0, max: 10 },\n    resume: { type: String }, // File path to uploaded resume\n    contact: { type: String, required: true },\n    skills: [{ type: String }],\n    projects: [{\n      name: { type: String, required: true },\n      description: { type: String },\n      technology: { type: String },\n      status: { type: String, enum: ['Completed', 'In Progress', 'Planned'], default: 'Planned' },\n      link: { type: String }\n    }],\n    certifications: [{ type: String }],\n    achievements: [{ type: String }],\n    linkedin: { type: String },\n    github: { type: String },\n    profilePicture: { type: String }\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model('Student', studentSchema);","size_bytes":1228},"backend/routes/studentRoutes.js":{"content":"const express = require('express');\nconst router = express.Router();\nconst { requireAuth, requireRole } = require('../middleware/auth');\nconst studentController = require('../controllers/studentController');\n\n// Student registration\nrouter.post('/register', studentController.registerStudent);\n\n// Protected student routes\nrouter.get('/profile', requireAuth, requireRole('student'), studentController.getStudentProfile);\nrouter.put('/profile', requireAuth, requireRole('student'), studentController.updateStudentProfile);\nrouter.post('/apply', requireAuth, requireRole('student'), studentController.applyForJob);\nrouter.get('/applications', requireAuth, requireRole('student'), studentController.getStudentApplications);\nrouter.get('/eligible-jobs', requireAuth, requireRole('student'), studentController.getEligibleJobs);\n\nmodule.exports = router;","size_bytes":848},"backend/scripts/createDefaultAccounts.js":{"content":"const bcrypt = require('bcrypt');\nconst mongoose = require('mongoose');\nconst User = require('../models/User');\nconst Student = require('../models/Student');\nrequire('dotenv').config();\n\nconst createDefaultAccounts = async () => {\n  try {\n    // Connect to MongoDB\n    const mongoURI = process.env.MONGO_URI || process.env.MONGODB_URI || 'mongodb://localhost:27017/placement';\n    await mongoose.connect(mongoURI, {\n      retryWrites: true,\n      w: \"majority\",\n    });\n    console.log('✅ Connected to MongoDB');\n\n    const saltRounds = 10;\n\n    // 1. Create Super Admin\n    const superAdminExists = await User.findOne({ email: 'admin@example.com' });\n    if (!superAdminExists) {\n      const superAdminPassword = await bcrypt.hash('admin123', saltRounds);\n      const superAdmin = new User({\n        name: 'Super Admin',\n        email: 'admin@example.com',\n        passwordHash: superAdminPassword,\n        role: 'super_admin',\n        isSuperAdmin: true\n      });\n      await superAdmin.save();\n      console.log('✅ Super Admin created: admin@example.com / admin123');\n    } else {\n      console.log('ℹ️ Super Admin already exists');\n    }\n\n    // 2. Create Regular Admin\n    const adminExists = await User.findOne({ email: 'faculty@example.com' });\n    if (!adminExists) {\n      const adminPassword = await bcrypt.hash('faculty123', saltRounds);\n      const admin = new User({\n        name: 'Faculty Admin',\n        email: 'faculty@example.com',\n        passwordHash: adminPassword,\n        role: 'admin'\n      });\n      await admin.save();\n      console.log('✅ Faculty Admin created: faculty@example.com / faculty123');\n    } else {\n      console.log('ℹ️ Faculty Admin already exists');\n    }\n\n    // 3. Create Student User and Profile\n    const studentUserExists = await User.findOne({ email: 'student@example.com' });\n    if (!studentUserExists) {\n      const studentPassword = await bcrypt.hash('student123', saltRounds);\n      const studentUser = new User({\n        name: 'Demo Student',\n        email: 'student@example.com',\n        passwordHash: studentPassword,\n        role: 'student'\n      });\n      await studentUser.save();\n\n      // Create student profile\n      const studentProfile = new Student({\n        user: studentUser._id,\n        rollNo: 'CS2024001',\n        course: 'MSc.CS',\n        branch: 'WD',\n        year: '2nd',\n        cgpa: 8.5,\n        contact: '+91-9876543210',\n        skills: ['JavaScript', 'React', 'Node.js', 'Python', 'MongoDB'],\n        projects: [\n          {\n            name: 'E-commerce Platform',\n            description: 'Full-stack e-commerce application',\n            technology: 'React, Node.js, MongoDB',\n            status: 'Completed'\n          },\n          {\n            name: 'Task Management App',\n            description: 'Task tracking application with real-time updates',\n            technology: 'React, Socket.io, Express',\n            status: 'In Progress'\n          }\n        ],\n        certifications: ['AWS Certified Cloud Practitioner', 'React Developer Certification'],\n        achievements: ['Dean\\'s List 2023', 'Best Project Award - Web Development'],\n        linkedin: 'https://linkedin.com/in/demo-student',\n        github: 'https://github.com/demo-student'\n      });\n      await studentProfile.save();\n      console.log('✅ Demo Student created: student@example.com / student123');\n    } else {\n      console.log('ℹ️ Demo Student already exists');\n    }\n\n    // 4. Create additional test students\n    const testStudents = [\n      {\n        name: 'Alice Johnson',\n        email: 'alice@student.example.com',\n        rollNo: 'CS2024002',\n        course: 'BSc.CS',\n        branch: 'AIML',\n        year: '3rd',\n        cgpa: 9.2\n      },\n      {\n        name: 'Bob Smith',\n        email: 'bob@student.example.com',\n        rollNo: 'CS2024003',\n        course: 'MCA',\n        branch: 'WD',\n        year: '1st',\n        cgpa: 7.8\n      }\n    ];\n\n    for (const testStudent of testStudents) {\n      const exists = await User.findOne({ email: testStudent.email });\n      if (!exists) {\n        const password = await bcrypt.hash('student123', saltRounds);\n        const user = new User({\n          name: testStudent.name,\n          email: testStudent.email,\n          passwordHash: password,\n          role: 'student'\n        });\n        await user.save();\n\n        const profile = new Student({\n          user: user._id,\n          rollNo: testStudent.rollNo,\n          course: testStudent.course,\n          branch: testStudent.branch,\n          year: testStudent.year,\n          cgpa: testStudent.cgpa,\n          contact: '+91-9876543210',\n          skills: ['Programming', 'Web Development']\n        });\n        await profile.save();\n        console.log(`✅ Test Student created: ${testStudent.email} / student123`);\n      }\n    }\n\n    console.log('\\n🎉 Default accounts setup completed!');\n    console.log('\\n📝 Default Credentials:');\n    console.log('Super Admin: admin@example.com / admin123');\n    console.log('Faculty Admin: faculty@example.com / faculty123');\n    console.log('Demo Student: student@example.com / student123');\n    console.log('\\nYou can now test all features with these accounts.');\n\n  } catch (error) {\n    console.error('❌ Error creating default accounts:', error);\n  } finally {\n    await mongoose.disconnect();\n    console.log('✅ Database connection closed');\n  }\n};\n\n// Run the script\ncreateDefaultAccounts();","size_bytes":5433},"frontend/src/components/AdminAnalytics.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell, LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { Users, Briefcase, FileText, TrendingUp, Download, Calendar, Award, Building } from 'lucide-react';\nimport AdminHeader from './AdminHeader';\n\nconst AdminAnalytics = () => {\n  const [analytics, setAnalytics] = useState({\n    overview: {\n      totalStudents: 0,\n      totalJobs: 0,\n      totalApplications: 0,\n      placementRate: 0\n    },\n    applicationsByStatus: [],\n    jobsByMonth: [],\n    topCompanies: [],\n    courseWiseApplications: [],\n    packageDistribution: []\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, []);\n\n  const fetchAnalyticsData = async () => {\n    try {\n      const token = localStorage.getItem('adminToken') || localStorage.getItem('token');\n      const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n\n      // Fetch multiple analytics endpoints\n      const [studentsRes, jobsRes, applicationsRes] = await Promise.all([\n        fetch('/api/students/count', { headers }),\n        fetch('/api/jobs', { headers }),\n        fetch('/api/applications', { headers })\n      ]);\n\n      const students = studentsRes.ok ? await studentsRes.json() : [];\n      const jobs = jobsRes.ok ? await jobsRes.json() : [];\n      const applications = applicationsRes.ok ? await applicationsRes.json() : [];\n\n      // Process data for analytics\n      const processedAnalytics = {\n        overview: {\n          totalStudents: Array.isArray(students) ? students.length : 0,\n          totalJobs: Array.isArray(jobs) ? jobs.length : 0,\n          totalApplications: Array.isArray(applications) ? applications.length : 0,\n          placementRate: Array.isArray(applications) && applications.length > 0 \n            ? Math.round((applications.filter(app => app.status === 'selected').length / applications.length) * 100)\n            : 0\n        },\n        applicationsByStatus: processApplicationsByStatus(applications),\n        jobsByMonth: processJobsByMonth(jobs),\n        topCompanies: processTopCompanies(jobs),\n        courseWiseApplications: processCourseWiseApplications(applications),\n        packageDistribution: processPackageDistribution(jobs)\n      };\n\n      setAnalytics(processedAnalytics);\n    } catch (error) {\n      console.error('Error fetching analytics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const processApplicationsByStatus = (applications) => {\n    if (!Array.isArray(applications)) return [];\n    \n    const statusCounts = applications.reduce((acc, app) => {\n      acc[app.status] = (acc[app.status] || 0) + 1;\n      return acc;\n    }, {});\n\n    return Object.entries(statusCounts).map(([status, count]) => ({\n      status: status.charAt(0).toUpperCase() + status.slice(1),\n      count,\n      percentage: applications.length > 0 ? Math.round((count / applications.length) * 100) : 0\n    }));\n  };\n\n  const processJobsByMonth = (jobs) => {\n    if (!Array.isArray(jobs)) return [];\n    \n    const monthCounts = jobs.reduce((acc, job) => {\n      const month = new Date(job.createdAt).toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\n      acc[month] = (acc[month] || 0) + 1;\n      return acc;\n    }, {});\n\n    return Object.entries(monthCounts).map(([month, count]) => ({ month, count }));\n  };\n\n  const processTopCompanies = (jobs) => {\n    if (!Array.isArray(jobs)) return [];\n    \n    const companyCounts = jobs.reduce((acc, job) => {\n      acc[job.companyName] = (acc[job.companyName] || 0) + 1;\n      return acc;\n    }, {});\n\n    return Object.entries(companyCounts)\n      .map(([company, count]) => ({ company, count }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n  };\n\n  const processCourseWiseApplications = (applications) => {\n    if (!Array.isArray(applications)) return [];\n    \n    const courseCounts = applications.reduce((acc, app) => {\n      const course = app.applicantCourse || 'Unknown';\n      acc[course] = (acc[course] || 0) + 1;\n      return acc;\n    }, {});\n\n    return Object.entries(courseCounts).map(([course, count]) => ({ course, count }));\n  };\n\n  const processPackageDistribution = (jobs) => {\n    if (!Array.isArray(jobs)) return [];\n    \n    const packages = jobs.map(job => {\n      const pkg = job.salaryPackage;\n      if (!pkg) return null;\n      \n      const match = pkg.match(/(\\d+(?:\\.\\d+)?)/);\n      return match ? parseFloat(match[1]) : null;\n    }).filter(pkg => pkg !== null);\n\n    const ranges = [\n      { range: '0-5 LPA', min: 0, max: 5 },\n      { range: '5-10 LPA', min: 5, max: 10 },\n      { range: '10-15 LPA', min: 10, max: 15 },\n      { range: '15-20 LPA', min: 15, max: 20 },\n      { range: '20+ LPA', min: 20, max: Infinity }\n    ];\n\n    return ranges.map(({ range, min, max }) => ({\n      range,\n      count: packages.filter(pkg => pkg >= min && pkg < max).length\n    }));\n  };\n\n  const exportData = (format) => {\n    const data = {\n      overview: analytics.overview,\n      applicationsByStatus: analytics.applicationsByStatus,\n      topCompanies: analytics.topCompanies,\n      exportedAt: new Date().toISOString()\n    };\n\n    if (format === 'json') {\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `placement-analytics-${new Date().toISOString().split('T')[0]}.json`;\n      link.click();\n    }\n  };\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <AdminHeader />\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <AdminHeader />\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Analytics Dashboard</h1>\n              <p className=\"text-gray-600 mt-2\">Comprehensive placement insights and statistics</p>\n            </div>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => exportData('json')}\n                className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export Data\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Overview Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Users className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Total Students</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">{analytics.overview.totalStudents}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <Briefcase className=\"h-6 w-6 text-green-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Total Jobs</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">{analytics.overview.totalJobs}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                <FileText className=\"h-6 w-6 text-yellow-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Applications</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">{analytics.overview.totalApplications}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-purple-100 rounded-lg\">\n                <TrendingUp className=\"h-6 w-6 text-purple-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Placement Rate</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">{analytics.overview.placementRate}%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Charts Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n          {/* Application Status Distribution */}\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Application Status Distribution</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={analytics.applicationsByStatus}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ status, percentage }) => `${status} (${percentage}%)`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"count\"\n                >\n                  {analytics.applicationsByStatus.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Jobs Posted by Month */}\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Jobs Posted by Month</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={analytics.jobsByMonth}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#3B82F6\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Top Companies */}\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Top Recruiting Companies</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={analytics.topCompanies} layout=\"horizontal\">\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis type=\"number\" />\n                <YAxis dataKey=\"company\" type=\"category\" width={100} />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#10B981\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Package Distribution */}\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Package Distribution</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={analytics.packageDistribution}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"range\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#F59E0B\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Summary Statistics */}\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Stats</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">{analytics.topCompanies.length}</div>\n              <div className=\"text-sm text-gray-600\">Recruiting Companies</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {analytics.applicationsByStatus.find(item => item.status === 'Selected')?.count || 0}\n              </div>\n              <div className=\"text-sm text-gray-600\">Students Placed</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {analytics.jobsByMonth.reduce((sum, month) => sum + month.count, 0)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Total Job Postings</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminAnalytics;","size_bytes":13436},"frontend/src/components/StudentDashboard.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { \n  User, \n  Briefcase, \n  FileText, \n  Calendar, \n  TrendingUp,\n  Settings,\n  LogOut,\n  Plus,\n  Eye,\n  Send,\n  CheckCircle,\n  Clock,\n  X,\n  Edit,\n  Book,\n  Award,\n  Target,\n  MessageSquare\n} from 'lucide-react';\n\nconst StudentDashboard = () => {\n  const [student, setStudent] = useState(null);\n  const [applications, setApplications] = useState([]);\n  const [eligibleJobs, setEligibleJobs] = useState([]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [loading, setLoading] = useState(true);\n  const [showApplicationForm, setShowApplicationForm] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [showInterviewForm, setShowInterviewForm] = useState(false);\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n  const navigate = useNavigate();\n\n  const [profileEditData, setProfileEditData] = useState({\n    cgpa: '',\n    contact: '',\n    skills: [],\n    linkedin: '',\n    github: '',\n    projects: [],\n    certifications: [],\n    achievements: []\n  });\n\n  const [interviewFormData, setInterviewFormData] = useState({\n    company: '',\n    role: '',\n    package: '',\n    experience: '',\n    difficulty: 'Medium',\n    rounds: [],\n    tips: ''\n  });\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    \n    if (!token || user.role !== 'student') {\n      navigate('/student-login');\n      return;\n    }\n\n    fetchStudentData();\n  }, [navigate]);\n\n  const fetchStudentData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n\n      // Fetch student profile\n      const profileResponse = await fetch('/api/students/profile', { headers });\n      if (profileResponse.ok) {\n        const profileData = await profileResponse.json();\n        setStudent(profileData);\n        setProfileEditData({\n          cgpa: profileData.cgpa || '',\n          contact: profileData.contact || '',\n          skills: profileData.skills || [],\n          linkedin: profileData.linkedin || '',\n          github: profileData.github || '',\n          projects: profileData.projects || [],\n          certifications: profileData.certifications || [],\n          achievements: profileData.achievements || []\n        });\n      }\n\n      // Fetch applications\n      const applicationsResponse = await fetch('/api/students/applications', { headers });\n      if (applicationsResponse.ok) {\n        const applicationsData = await applicationsResponse.json();\n        setApplications(applicationsData);\n      }\n\n      // Fetch eligible jobs\n      const jobsResponse = await fetch('/api/students/eligible-jobs', { headers });\n      if (jobsResponse.ok) {\n        const jobsData = await jobsResponse.json();\n        setEligibleJobs(jobsData);\n      }\n    } catch (error) {\n      console.error('Error fetching student data:', error);\n      toast.error('Error loading dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Logged out successfully');\n    navigate('/');\n  };\n\n  const handleApplyForJob = async (jobId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/students/apply', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ jobId, formResponses: [] })\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        toast.success('Application submitted successfully!');\n        setShowApplicationForm(false);\n        setSelectedJob(null);\n        fetchStudentData(); // Refresh data\n      } else {\n        toast.error(data.error || 'Application failed');\n      }\n    } catch (error) {\n      console.error('Application error:', error);\n      toast.error('Application failed');\n    }\n  };\n\n  const handleProfileUpdate = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/students/profile', {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileEditData)\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        toast.success('Profile updated successfully!');\n        setShowProfileEdit(false);\n        fetchStudentData();\n      } else {\n        toast.error(data.error || 'Update failed');\n      }\n    } catch (error) {\n      console.error('Update error:', error);\n      toast.error('Update failed');\n    }\n  };\n\n  const handleInterviewSubmission = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/interview-experiences/submit', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...interviewFormData,\n          rounds: interviewFormData.rounds.filter(r => r.trim())\n        })\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        toast.success('Interview experience submitted successfully!');\n        setShowInterviewForm(false);\n        setInterviewFormData({\n          company: '',\n          role: '',\n          package: '',\n          experience: '',\n          difficulty: 'Medium',\n          rounds: [],\n          tips: ''\n        });\n      } else {\n        toast.error(data.error || 'Submission failed');\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      toast.error('Submission failed');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading your dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'selected': return 'bg-green-100 text-green-800';\n      case 'shortlisted': return 'bg-blue-100 text-blue-800';\n      case 'interviewed': return 'bg-yellow-100 text-yellow-800';\n      case 'rejected': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-2xl font-bold text-gray-900\">Student Portal</h1>\n              {student && (\n                <div className=\"ml-4\">\n                  <p className=\"text-sm text-gray-600\">Welcome back, {student.user?.name}</p>\n                  <p className=\"text-xs text-gray-500\">{student.rollNo} • {student.course} • {student.branch}</p>\n                </div>\n              )}\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setShowProfileEdit(true)}\n                className=\"p-2 text-gray-600 hover:text-blue-600\"\n                title=\"Edit Profile\"\n              >\n                <Settings className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={handleLogout}\n                className=\"flex items-center px-4 py-2 text-sm text-red-600 hover:text-red-800\"\n              >\n                <LogOut className=\"h-4 w-4 mr-2\" />\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Navigation Tabs */}\n        <div className=\"mb-8\">\n          <nav className=\"flex space-x-8\">\n            {[\n              { id: 'overview', label: 'Overview', icon: User },\n              { id: 'jobs', label: 'Available Jobs', icon: Briefcase },\n              { id: 'applications', label: 'My Applications', icon: FileText },\n              { id: 'experiences', label: 'Interview Experiences', icon: MessageSquare }\n            ].map(({ id, label, icon: Icon }) => (\n              <button\n                key={id}\n                onClick={() => setActiveTab(id)}\n                className={`flex items-center px-3 py-2 text-sm font-medium rounded-md ${\n                  activeTab === id\n                    ? 'bg-blue-100 text-blue-700'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon className=\"h-4 w-4 mr-2\" />\n                {label}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* Overview Tab */}\n        {activeTab === 'overview' && student && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Profile Card */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <div className=\"text-center\">\n                  <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <User className=\"h-10 w-10 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-900\">{student.user?.name}</h3>\n                  <p className=\"text-gray-600\">{student.rollNo}</p>\n                  <p className=\"text-sm text-gray-500\">{student.course} • {student.branch} • {student.year}</p>\n                  <div className=\"mt-4 flex justify-center\">\n                    <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800\">\n                      CGPA: {student.cgpa}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"mt-6 space-y-4\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Contact</p>\n                    <p className=\"text-sm text-gray-900\">{student.contact}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Email</p>\n                    <p className=\"text-sm text-gray-900\">{student.user?.email}</p>\n                  </div>\n                  {student.skills && student.skills.length > 0 && (\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500 mb-2\">Skills</p>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {student.skills.map((skill, index) => (\n                          <span key={index} className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded\">\n                            {skill}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Stats Cards */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                <div className=\"bg-white p-6 rounded-lg shadow\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-blue-100 rounded-lg\">\n                      <Briefcase className=\"h-6 w-6 text-blue-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Available Jobs</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">{eligibleJobs.length}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white p-6 rounded-lg shadow\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-green-100 rounded-lg\">\n                      <FileText className=\"h-6 w-6 text-green-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Applications</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">{applications.length}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white p-6 rounded-lg shadow\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                      <Clock className=\"h-6 w-6 text-yellow-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Pending</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {applications.filter(app => app.status === 'pending').length}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white p-6 rounded-lg shadow\">\n                  <div className=\"flex items-center\">\n                    <div className=\"p-2 bg-purple-100 rounded-lg\">\n                      <TrendingUp className=\"h-6 w-6 text-purple-600\" />\n                    </div>\n                    <div className=\"ml-4\">\n                      <p className=\"text-sm font-medium text-gray-600\">Success Rate</p>\n                      <p className=\"text-2xl font-semibold text-gray-900\">\n                        {applications.length > 0 \n                          ? Math.round((applications.filter(app => app.status === 'selected').length / applications.length) * 100)\n                          : 0}%\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Actions */}\n              <div className=\"bg-white p-6 rounded-lg shadow\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Quick Actions</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <button\n                    onClick={() => setActiveTab('jobs')}\n                    className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                  >\n                    <Eye className=\"h-5 w-5 text-blue-600 mr-3\" />\n                    <span className=\"text-sm font-medium\">Browse Jobs</span>\n                  </button>\n                  <button\n                    onClick={() => setShowInterviewForm(true)}\n                    className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                  >\n                    <Plus className=\"h-5 w-5 text-green-600 mr-3\" />\n                    <span className=\"text-sm font-medium\">Share Experience</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Jobs Tab */}\n        {activeTab === 'jobs' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">Available Jobs</h2>\n              <p className=\"text-sm text-gray-600\">{eligibleJobs.length} jobs match your profile</p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {eligibleJobs.map((job) => {\n                const hasApplied = applications.some(app => app.job?._id === job._id);\n                return (\n                  <div key={job._id} className=\"bg-white p-6 rounded-lg shadow hover:shadow-md transition-shadow\">\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900\">{job.position}</h3>\n                        <p className=\"text-sm text-gray-600\">{job.companyName}</p>\n                      </div>\n                      {job.companyLogo && (\n                        <img src={job.companyLogo} alt={job.companyName} className=\"h-10 w-10 rounded\" />\n                      )}\n                    </div>\n                    \n                    <div className=\"space-y-2 mb-4\">\n                      <p className=\"text-sm text-gray-600\">📍 {job.location}</p>\n                      <p className=\"text-sm text-gray-600\">💰 {job.salaryPackage}</p>\n                      <p className=\"text-sm text-gray-600\">📅 Apply by: {new Date(job.applicationDeadline).toLocaleDateString()}</p>\n                    </div>\n                    \n                    {hasApplied ? (\n                      <button\n                        disabled\n                        className=\"w-full py-2 px-4 bg-gray-100 text-gray-500 rounded-md text-sm font-medium cursor-not-allowed\"\n                      >\n                        Already Applied\n                      </button>\n                    ) : (\n                      <button\n                        onClick={() => {\n                          setSelectedJob(job);\n                          setShowApplicationForm(true);\n                        }}\n                        className=\"w-full py-2 px-4 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700\"\n                      >\n                        Apply Now\n                      </button>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Applications Tab */}\n        {activeTab === 'applications' && (\n          <div className=\"space-y-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">My Applications</h2>\n            \n            <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n              <ul className=\"divide-y divide-gray-200\">\n                {applications.map((application) => (\n                  <li key={application._id} className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center justify-between\">\n                          <h3 className=\"text-lg font-medium text-gray-900\">\n                            {application.job?.position || 'Position not available'}\n                          </h3>\n                          <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(application.status)}`}>\n                            {application.status.charAt(0).toUpperCase() + application.status.slice(1)}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600\">{application.job?.companyName || 'Company not available'}</p>\n                        <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                          <Calendar className=\"h-4 w-4 mr-1\" />\n                          Applied on {new Date(application.appliedAt).toLocaleDateString()}\n                        </div>\n                        {application.adminNotes && (\n                          <div className=\"mt-2 p-3 bg-gray-50 rounded-md\">\n                            <p className=\"text-sm text-gray-700\">\n                              <strong>Admin Notes:</strong> {application.adminNotes}\n                            </p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </li>\n                ))}\n                {applications.length === 0 && (\n                  <li className=\"p-6 text-center text-gray-500\">\n                    No applications submitted yet. Start applying to jobs!\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n        )}\n\n        {/* Interview Experiences Tab */}\n        {activeTab === 'experiences' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">Interview Experiences</h2>\n              <button\n                onClick={() => setShowInterviewForm(true)}\n                className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Share Experience\n              </button>\n            </div>\n            \n            <div className=\"bg-white p-6 rounded-lg shadow text-center text-gray-500\">\n              <MessageSquare className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n              <p>View and share interview experiences with your peers.</p>\n              <p className=\"text-sm\">Help others prepare by sharing your interview journey!</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Application Modal */}\n      {showApplicationForm && selectedJob && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-md w-full p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium\">Apply for {selectedJob.position}</h3>\n              <button\n                onClick={() => setShowApplicationForm(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            \n            <div className=\"mb-6\">\n              <p className=\"text-sm text-gray-600 mb-2\">Company: {selectedJob.companyName}</p>\n              <p className=\"text-sm text-gray-600 mb-2\">Package: {selectedJob.salaryPackage}</p>\n              <p className=\"text-sm text-gray-600\">Location: {selectedJob.location}</p>\n            </div>\n            \n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowApplicationForm(false)}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => handleApplyForJob(selectedJob._id)}\n                className=\"flex-1 py-2 px-4 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700\"\n              >\n                Confirm Application\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Interview Experience Modal */}\n      {showInterviewForm && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium\">Share Interview Experience</h3>\n              <button\n                onClick={() => setShowInterviewForm(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Company</label>\n                  <input\n                    type=\"text\"\n                    value={interviewFormData.company}\n                    onChange={(e) => setInterviewFormData({...interviewFormData, company: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Company name\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Role</label>\n                  <input\n                    type=\"text\"\n                    value={interviewFormData.role}\n                    onChange={(e) => setInterviewFormData({...interviewFormData, role: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Job role\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Package</label>\n                  <input\n                    type=\"text\"\n                    value={interviewFormData.package}\n                    onChange={(e) => setInterviewFormData({...interviewFormData, package: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"e.g., 12 LPA\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Difficulty</label>\n                  <select\n                    value={interviewFormData.difficulty}\n                    onChange={(e) => setInterviewFormData({...interviewFormData, difficulty: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"Easy\">Easy</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Hard\">Hard</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Interview Experience</label>\n                <textarea\n                  value={interviewFormData.experience}\n                  onChange={(e) => setInterviewFormData({...interviewFormData, experience: e.target.value})}\n                  rows={4}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Describe your interview experience...\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tips for Others</label>\n                <textarea\n                  value={interviewFormData.tips}\n                  onChange={(e) => setInterviewFormData({...interviewFormData, tips: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Any tips or advice for future candidates...\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                onClick={() => setShowInterviewForm(false)}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleInterviewSubmission}\n                className=\"flex-1 py-2 px-4 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700\"\n              >\n                Submit Experience\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Profile Edit Modal */}\n      {showProfileEdit && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium\">Edit Profile</h3>\n              <button\n                onClick={() => setShowProfileEdit(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">CGPA</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    max=\"10\"\n                    value={profileEditData.cgpa}\n                    onChange={(e) => setProfileEditData({...profileEditData, cgpa: parseFloat(e.target.value) || ''})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact</label>\n                  <input\n                    type=\"tel\"\n                    value={profileEditData.contact}\n                    onChange={(e) => setProfileEditData({...profileEditData, contact: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">LinkedIn</label>\n                  <input\n                    type=\"url\"\n                    value={profileEditData.linkedin}\n                    onChange={(e) => setProfileEditData({...profileEditData, linkedin: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"LinkedIn profile URL\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">GitHub</label>\n                  <input\n                    type=\"url\"\n                    value={profileEditData.github}\n                    onChange={(e) => setProfileEditData({...profileEditData, github: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"GitHub profile URL\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Skills (comma separated)</label>\n                <input\n                  type=\"text\"\n                  value={profileEditData.skills.join(', ')}\n                  onChange={(e) => setProfileEditData({\n                    ...profileEditData, \n                    skills: e.target.value.split(',').map(s => s.trim()).filter(s => s)\n                  })}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"JavaScript, React, Node.js, Python...\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Certifications (comma separated)</label>\n                <input\n                  type=\"text\"\n                  value={profileEditData.certifications.join(', ')}\n                  onChange={(e) => setProfileEditData({\n                    ...profileEditData, \n                    certifications: e.target.value.split(',').map(s => s.trim()).filter(s => s)\n                  })}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"AWS Certified, Google Analytics...\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Achievements (comma separated)</label>\n                <input\n                  type=\"text\"\n                  value={profileEditData.achievements.join(', ')}\n                  onChange={(e) => setProfileEditData({\n                    ...profileEditData, \n                    achievements: e.target.value.split(',').map(s => s.trim()).filter(s => s)\n                  })}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Dean's List, Hackathon Winner...\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                onClick={() => setShowProfileEdit(false)}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleProfileUpdate}\n                className=\"flex-1 py-2 px-4 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700\"\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDashboard;","size_bytes":34393},"frontend/src/components/StudentLogin.jsx":{"content":"import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { User, Lock, Eye, EyeOff, GraduationCap } from 'lucide-react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst StudentLogin = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        if (data.user.role === 'student') {\n          localStorage.setItem('token', data.token);\n          localStorage.setItem('user', JSON.stringify(data.user));\n          toast.success('Welcome back!');\n          navigate('/student-dashboard');\n        } else {\n          toast.error('Access denied. Student credentials required.');\n        }\n      } else {\n        toast.error(data.error || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <Header />\n      <div className=\"flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto h-16 w-16 bg-blue-600 rounded-full flex items-center justify-center\">\n              <GraduationCap className=\"h-8 w-8 text-white\" />\n            </div>\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">Student Login</h2>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Access your placement portal\n            </p>\n          </div>\n\n          <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n            <div className=\"rounded-md shadow-sm space-y-4\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Email Address\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <User className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Enter your email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Password\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Lock className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    required\n                    className=\"block w-full pl-10 pr-10 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Enter your password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Signing in...' : 'Sign in'}\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Don't have an account?{' '}\n                <Link to=\"/student-register\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                  Register here\n                </Link>\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-xs text-gray-500\">\n                Demo Account: student@example.com / student123\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default StudentLogin;","size_bytes":6013},"frontend/src/components/StudentRegister.jsx":{"content":"import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { User, Mail, Lock, Phone, GraduationCap, BookOpen, Users } from 'lucide-react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst StudentRegister = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    rollNo: '',\n    course: '',\n    branch: '',\n    year: '',\n    cgpa: '',\n    contact: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const courses = ['BSc.CS', 'MSc.CS', 'MSc.AIML', 'MCA'];\n  const branches = ['WD', 'AIML'];\n  const years = ['1st', '2nd', '3rd', '4th', '5th'];\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: name === 'cgpa' ? parseFloat(value) || '' : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (formData.password !== formData.confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n\n    if (formData.cgpa < 0 || formData.cgpa > 10) {\n      toast.error('CGPA must be between 0 and 10');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await fetch('/api/students/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        toast.success('Registration successful! Welcome to the placement portal.');\n        navigate('/student-dashboard');\n      } else {\n        toast.error(data.error || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error('Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-emerald-100\">\n      <Header />\n      <div className=\"flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-2xl w-full space-y-8\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto h-16 w-16 bg-green-600 rounded-full flex items-center justify-center\">\n              <GraduationCap className=\"h-8 w-8 text-white\" />\n            </div>\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">Student Registration</h2>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Join the placement portal and start your career journey\n            </p>\n          </div>\n\n          <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* Personal Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Personal Information</h3>\n                \n                <div>\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Full Name\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <User className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      placeholder=\"Enter your full name\"\n                      value={formData.name}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Mail className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      placeholder=\"Enter your email\"\n                      value={formData.email}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"contact\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Contact Number\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Phone className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      id=\"contact\"\n                      name=\"contact\"\n                      type=\"tel\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      placeholder=\"Enter your contact number\"\n                      value={formData.contact}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Password\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Lock className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      placeholder=\"Enter your password\"\n                      value={formData.password}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Confirm Password\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Lock className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <input\n                      id=\"confirmPassword\"\n                      name=\"confirmPassword\"\n                      type=\"password\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      placeholder=\"Confirm your password\"\n                      value={formData.confirmPassword}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Academic Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Academic Information</h3>\n\n                <div>\n                  <label htmlFor=\"rollNo\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Roll Number\n                  </label>\n                  <input\n                    id=\"rollNo\"\n                    name=\"rollNo\"\n                    type=\"text\"\n                    required\n                    className=\"block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                    placeholder=\"Enter your roll number\"\n                    value={formData.rollNo}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"course\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Course\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <BookOpen className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <select\n                      id=\"course\"\n                      name=\"course\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      value={formData.course}\n                      onChange={handleChange}\n                    >\n                      <option value=\"\">Select your course</option>\n                      {courses.map(course => (\n                        <option key={course} value={course}>{course}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"branch\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Branch\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Users className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <select\n                      id=\"branch\"\n                      name=\"branch\"\n                      required\n                      className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                      value={formData.branch}\n                      onChange={handleChange}\n                    >\n                      <option value=\"\">Select your branch</option>\n                      {branches.map(branch => (\n                        <option key={branch} value={branch}>{branch}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"year\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Year\n                  </label>\n                  <select\n                    id=\"year\"\n                    name=\"year\"\n                    required\n                    className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                    value={formData.year}\n                    onChange={handleChange}\n                  >\n                    <option value=\"\">Select your year</option>\n                    {years.map(year => (\n                      <option key={year} value={year}>{year}</option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"cgpa\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    CGPA\n                  </label>\n                  <input\n                    id=\"cgpa\"\n                    name=\"cgpa\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    max=\"10\"\n                    required\n                    className=\"block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                    placeholder=\"Enter your CGPA (0-10)\"\n                    value={formData.cgpa}\n                    onChange={handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Creating Account...' : 'Create Account'}\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Already have an account?{' '}\n                <Link to=\"/student-login\" className=\"font-medium text-green-600 hover:text-green-500\">\n                  Sign in here\n                </Link>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default StudentRegister;","size_bytes":13889}},"version":1}